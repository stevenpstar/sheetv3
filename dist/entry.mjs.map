{"version":3,"sources":["../src/Core/Sheet.ts","../src/Core/Staff.ts","../src/Core/Stem.ts","../src/Core/Values.ts","../src/Types/Bounds.ts","../src/Renderers/MusicFont.Renderer.ts","../src/Renderers/Note.Renderer.ts","../src/Core/Beam.ts","../src/Core/Clef.ts","../src/Workers/Pitcher.ts","../src/Core/Note.ts","../src/Workers/NoteInput.ts","../src/Core/Division.ts","../src/Factory/Beam.Fact.ts","../src/Workers/Accidentaler.ts","../src/Renderers/Accidentals.Renderer.ts","../src/Core/KeySignatures.ts","../src/Renderers/KeySignature.Renderer.ts","../src/Renderers/Stem.Fact.ts","../src/Renderers/Measure.Renderer.ts","../src/Renderers/Page.Renderer.ts","../src/Core/Renderer.ts","../src/Types/Message.ts","../src/Core/TimeSignatures.ts","../src/Core/Measure.ts","../src/Factory/Instrument.Factory.ts","../src/Core/Camera.ts","../src/Workers/Selector.ts","../src/testsaves.ts","../src/Workers/Mappings.ts","../src/Core/Page.ts","../src/Workers/Formatter.ts","../src/Workers/Loader.ts","../src/App.ts","../src/entry.ts"],"sourcesContent":["import { Instrument } from './Instrument.js';\nimport { Measure } from './Measure.js';\nimport { Page } from './Page.js';\n\ninterface SheetProps {\n  Instruments: Instrument[];\n  KeySignature: { key: string, measureNo: number }[];\n  Measures: Measure[];\n  Pages: Page[];\n}\nclass Sheet {\n  Instruments: Instrument[];\n  KeySignature: { key: string, measureNo: number}[];\n  Measures: Measure[];\n  Pages: Page[];\n\n  constructor(properties: SheetProps) {\n    this.Instruments = properties.Instruments; \n    this.KeySignature = properties.KeySignature;\n    this.Measures = properties.Measures;\n    this.Pages = properties.Pages;\n  }\n}\n\nexport { Sheet, SheetProps };\n","import { Measure } from \"./Measure.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../Types/Config.js\";\n\nclass Staff {\n  // Determines line offset / Order of staff\n  Num: number;\n  TopLine: number;\n  MidLine: number;\n  BotLine: number;\n  Buffer: number;\n  constructor(num: number) {\n    this.Num = num;\n    this.Buffer = this.Num * 1000;\n    // These defaults will change/be configurable\n    this.TopLine = 5;\n    this.BotLine = 35;\n    this.MidLine = 15;\n  }\n}\n\nfunction RenderMeasureLines(\n  renderProps: RenderProperties,\n  measure: Measure,\n  lastMeasure: boolean,\n  theme: Theme,\n): void {\n  const { context, camera } = renderProps;\n  const endsWidth = lastMeasure ? 4 : 2;\n  const startWidth = 2;\n\n  const staves = measure.Staves;\n  let staffHeight = GetStaffHeightUntil(staves, staves.length - 1) + 41;\n  const yStart = measure.Bounds.y + (GetStaffMiddleLine(staves, 0) - 4) * 5;\n  context.fillStyle = theme.LineColour;\n  const measureBegin = `M${measure.Bounds.x + camera.x} \n        ${yStart + camera.y} h \n        ${startWidth} v ${staffHeight} h -${startWidth} Z`;\n\n  const measureEnd = `M${measure.Bounds.x + measure.Bounds.width + measure.XOffset + camera.x} \n        ${yStart + camera.y} h \n        ${endsWidth} v ${staffHeight} h -${endsWidth} Z`;\n\n  const measureEndDouble = `M${measure.Bounds.x + measure.Bounds.width + measure.XOffset + camera.x - 3} \n        ${yStart + camera.y} h \n        ${startWidth} v ${staffHeight} h -${startWidth} Z`;\n\n  context.fill(new Path2D(measureBegin));\n  context.fill(new Path2D(measureEnd));\n  if (lastMeasure) {\n    context.fill(new Path2D(measureEndDouble));\n  }\n}\n\nfunction GetStaffHeightUntil(staves: Staff[], staffNum: number = -1): number {\n  let height = 0;\n  staves.forEach((s: Staff, i: number) => {\n    if (i < staffNum || staffNum === -1) {\n      const topNegative = s.TopLine < 0;\n      const lineCount = topNegative\n        ? s.BotLine + Math.abs(s.TopLine)\n        : s.BotLine - s.TopLine;\n      height += lineCount * 5;\n    }\n  });\n  return height;\n}\n\nfunction GetStaffHeight(staves: Staff[], staffNum: number): number {\n  const staff = staves.find((s: Staff) => s.Num === staffNum);\n  // TODO Write an error or something\n  if (!staff) {\n    console.error(\"Cannot find staff: \", staffNum);\n    return -1;\n  }\n  const topNegative = staff.TopLine < 0;\n  const lineCount = topNegative\n    ? staff.BotLine + Math.abs(staff.TopLine)\n    : staff.BotLine - staff.TopLine;\n  return lineCount * 5;\n}\n\nfunction GetStaffMiddleLine(staves: Staff[], staffNum: number): number {\n  const linesBefore = 0; //GetStaffHeightUntil(staves, staffNum) / 5;\n  const staff = staves.find((s: Staff) => s.Num === staffNum);\n  return linesBefore + (staff.MidLine - staff.TopLine);\n}\n\nfunction GetStaffActualMidLine(staves: Staff[], staffNum: number): number {\n  const linesBefore = GetStaffHeightUntil(staves, staffNum) / 5;\n  const staff = staves.find((s: Staff) => s.Num === staffNum);\n  return linesBefore + (staff.MidLine - staff.TopLine);\n}\n\n// TODO: Probably move this render function once it is working.\nfunction RenderStaffLines(\n  renderProps: RenderProperties,\n  msr: Measure,\n  staff: Staff,\n): void {\n  // These should be defined somewhere else\n  const { canvas, context, camera } = renderProps;\n  const line_space = 10;\n  const line_width = 1;\n  const endsWidth = 2;\n\n  const staves = msr.Staves;\n  const yStart = msr.Bounds.y + GetStaffHeightUntil(staves, staff.Num);\n  const staffMidLine = GetStaffMiddleLine(staves, staff.Num);\n  const staffHeight =\n    GetStaffHeightUntil(staves, staves.length - 2) +\n    (GetStaffMiddleLine(staves, staves.length - 1) - 2) * 5;\n\n  // Render Staff Lines\n  for (let l = 0; l < 5; l++) {\n    const lineString = `M${msr.Bounds.x + camera.x} \n    ${yStart + 5 * staffMidLine - line_space * 2 + line_space * l + camera.y} h \n    ${msr.Bounds.width + msr.XOffset} v ${line_width} h -${msr.Bounds.width + msr.XOffset} Z`;\n\n    const linePath = new Path2D(lineString);\n    context.fill(linePath);\n  }\n}\n\nexport {\n  Staff,\n  GetStaffHeightUntil,\n  GetStaffMiddleLine,\n  GetStaffHeight,\n  RenderStaffLines,\n  RenderMeasureLines,\n  GetStaffActualMidLine,\n};\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\n\nclass Stem implements ISelectable {\n  ID: number;\n  Selected: boolean = false;\n  Bounds: Bounds;\n  SelType: SelectableTypes.Stem;\n  Editable: boolean = false;\n  Direction: string;\n  StartPoint: number;\n  EndPoint: number;\n  constructor(bounds: Bounds) {\n    this.Bounds = bounds;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n\n  // TODO: Note: Camera is currently baked into actual position\n  // This will change when we separate the creation logic from\n  // the Note renderer\n  Render(context: CanvasRenderingContext2D, cam: Camera, theme: Theme): void {\n    context.fillStyle = theme.NoteElements;\n    context.fillRect(this.Bounds.x + cam.x,\n                     this.Bounds.y + cam.y,\n                     this.Bounds.width,\n                     this.Bounds.height);\n  }\n}\n\nexport { Stem };\n","enum NoteValues {\n  n32 = 0.03125,\n  n32d = n32 + (n32 / 2),\n  n32dd = n32d + (n32 / 4),\n  n32ddd = n32dd + (n32 / 8),\n  n16 = 0.0625,\n  n16d = n16 + (n16 / 2),\n  n16dd = n16d + (n16 / 4),\n  n16ddd = n16dd + (n16 / 8),\n  n8 = 0.125,\n  n8d = n8 + (n8 / 2),\n  n8dd = n8d + (n8 / 4),\n  n8ddd = n8dd + (n8 / 8),\n  n4 = 0.25,\n  n4d = n4 + (n4 / 2),\n  n4dd = n4d + (n4 / 4),\n  n4ddd = n4dd + (n4 / 8),\n  n2 = 0.5,\n  n2d = n2 + (n2 / 2),\n  n2dd = n2d + (n2 / 4),\n  n2ddd = n2dd + (n2 / 8),\n  n1 = 1,\n  n1d = n1 + (n1 / 2),\n  n1dd = n1d + (n1 / 4),\n  n1ddd = n1dd + (n1 / 8 )\n}\n\nconst ValueMap = new Map<number, number>([\n  [1, NoteValues.n1],\n  [0.5, NoteValues.n2],\n  [0.25, NoteValues.n4],\n  [0.125, NoteValues.n8],\n  [0.0625, NoteValues.n16],\n  [0.03125, NoteValues.n32],\n]);\n\nfunction GetLargestValues(duration: number): number[] {\n  let remainingDiff = duration;\n  let values: number[] = [];\n  const divByStdVal = duration % NoteValues.n32 === 0;\n  if (!divByStdVal) {\n    console.error(\"Not divisible by standard value, not implemented\");\n  }\n  // check if the duration matches a standard value perfectly\n  if (ValueMap.has(duration)) {\n    values.push(duration);\n    remainingDiff -= duration;\n    if (remainingDiff !== 0) { console.error(\"HUH?\"); }\n  }\n  while (remainingDiff > 0) {\n    for (let [key, val] of ValueMap) {\n      if (ValueMap.get(key) <= remainingDiff) {\n        values.push(ValueMap.get(key));\n        remainingDiff -= ValueMap.get(key);\n      }\n    }\n    // Emergency exit\n    if (remainingDiff < NoteValues.n32) {\n      remainingDiff = 0;\n    }\n  }\n\n  return values;\n}\n\nexport { NoteValues, GetLargestValues }\n","import { Camera } from \"../Core/Camera\";\n\nclass Bounds {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  constructor(x: number, y: number, width: number, height: number) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  IsHovered(ix: number, iy: number, cam: Camera): boolean {\n      return (ix >= this.x + cam.x && ix <= this.x + cam.x + (this.width) &&\n            iy >= this.y + cam.y && iy <= this.y + cam.y + (this.height));\n  }\n}\n\nexport { Bounds };\n","import { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\n\nconst stdFontSize = 42;\nenum Clefs {\n  G = \"\\u{1D11E}\",\n  GOttavaBassa = \"\\u{1D120}\",\n  GOttavaAlta = \"\\u{1D11F}\",\n  GQuindicesimaBassa = \"\\u{E051}\",\n  F = \"\\u{1D122}\",\n}\n\nenum NoteHeads {\n  whole = \"\\u{E0A2}\",\n  minim = \"\\u{E0A3}\",\n  crotchet = \"\\u{E0A4}\",\n}\n\nenum TimeSigNumbers {\n  Zero = \"\\u{E080}\",\n  One = \"\\u{E081}\",\n  Two = \"\\u{E082}\",\n  Three = \"\\u{E083}\",\n  Four = \"\\u{E084}\",\n  Five = \"\\u{E085}\",\n  Six = \"\\u{E086}\",\n  Seven = \"\\u{E087}\",\n  Eight = \"\\u{E088}\",\n  Nine = \"\\u{E089}\",\n  Common = \"\\u{E08A}\",\n  CutCommon = \"\\u{E08B}\",\n}\n\nenum TupletNumbers {\n  Zero = \"\\u{E880}\",\n  One = \"\\u{E881}\",\n  Two = \"\\u{E882}\",\n  Three = \"\\u{E883}\",\n  Four = \"\\u{E884}\",\n  Five = \"\\u{E885}\",\n  Six = \"\\u{E886}\",\n  Seven = \"\\u{E887}\",\n  Eight = \"\\u{E888}\",\n  Nine = \"\\u{E889}\",\n  Colon = \"\\u{E88A}\",\n}\n\nenum StdAccidentals {\n  Natural = \"\\u{E261}\",\n  NaturalSharp = \"\\u{E268}\",\n  NaturalFlat = \"\\u{E267}\",\n  Flat = \"\\u{E260}\",\n  DoubleFlat = \"\\u{E264}\",\n  TripleFlat = \"\\u{E266}\",\n  Sharp = \"\\u{E262}\",\n  DoubleSharp = \"\\u{E263}\",\n  TripleSharp = \"\\u{E265}\",\n  ParenthLeft = \"\\u{E26A}\",\n  ParenthRight = \"\\u{E26B}\",\n  ParenthNatural = \"\\u{E26A}\\u{E261}\\u{E26B}\",\n  ParenthSharp = \"\\u{E26A}\\u{E262}\\u{E26B}\",\n  ParenthFlat = \"\\u{E26A}\\u{E260}\\u{E26B}\",\n}\n\nfunction RenderSymbol(\n  renderProps: RenderProperties,\n  symbol: string,\n  x: number,\n  y: number,\n  theme: Theme,\n  selected: boolean,\n): void {\n  const { canvas, context, camera } = renderProps;\n  context.fillStyle = selected ? theme.SelectColour : theme.NoteElements;\n  context.font = `${stdFontSize}px Bravura`;\n  context.fillText(symbol, x + camera.x, y + camera.y);\n}\n\nexport {\n  Clefs,\n  NoteHeads,\n  StdAccidentals,\n  TimeSigNumbers,\n  TupletNumbers,\n  RenderSymbol,\n};\n","import { Beam, DetermineBeamDirection } from \"../Core/Beam.js\";\nimport { Camera } from \"../Core/Camera.js\";\nimport { Division, Measure } from \"../Core/Measure.js\";\nimport { Note } from \"../Core/Note.js\";\nimport { GetStaffActualMidLine, GetStaffHeightUntil, GetStaffMiddleLine, Staff } from \"../Core/Staff.js\";\nimport { Stem } from \"../Core/Stem.js\";\nimport { NoteValues } from \"../Core/Values.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { RenderAccidental } from \"./Accidentals.Renderer.js\";\nimport { NoteHeads, RenderSymbol, TupletNumbers } from \"./MusicFont.Renderer.js\";\n\nenum StemDirection {\n  Up,\n  Down\n};\n\nenum BeamDirection {\n  UpMax,\n  UpDynamic,\n  DownMax,\n  DownDynamic,\n  Flat\n}\n\nconst crotchetRest = 'c-.2863.1212-.4577.5392-.326.8318.0397.0418.4556.5392.8736 1.0868.9551 1.0764 1.1182 1.3313 1.3292 1.8288.8339 1.7054.3762 3.877-1.0847 5.2501-.1233.163-.6625.6186-1.1683.9948-1.4525 1.2498-2.1214 1.9604-2.368 2.5874-.0899.1651-.0899.3281-.0899.581-.0397.5789 0 .6291 1.7159 2.6209 2.3262 2.7922 3.9919 4.7506 4.1215 4.8739l.1233.1212-.163-.0815c-2.2948-.9551-4.8739-1.4128-5.7475-.9948-.2947.1212-.4661.2926-.5873.5789-.3365.7106-.2466 1.7556.2529 3.2897.4556 1.3794 1.371 3.2082 2.2844 4.5813.3762.5873 1.0868 1.5006 1.1683 1.5424.1233.1233.2947.0815.4159 0 .1233-.163.1233-.2947-.1212-.5789-.8736-1.2498-1.2895-3.8372-.7921-5.2104.2027-.6186.4577-.9551.9133-1.1662 1.208-.5392 3.879.1296 4.9972 1.2477.0815.0836.2529.255.3344.2947.2947.1233.7106-.0397.8339-.3344.1714-.2947.0815-.4974-.2947-.9551-.7022-.8339-2.8257-3.3315-3.1183-3.7077-.7524-.8736-1.0868-1.7054-1.1683-2.7504-.0397-1.3313.4974-2.7421 1.5027-3.6659.1212-.163.6604-.6207 1.16-.9948 1.5424-1.2916 2.1715-2.0001 2.416-2.671.1714-.5392.0899-1.0366-.2863-1.4943-.1296-.1212-1.5842-1.9186-3.2897-3.9585-2.3345-2.7442-3.1684-3.7474-3.2897-3.7892-.1714-.0397-.3762-.0397-.5476.0418z'\nconst quaverRest = 'c-.884.1666-1.5606.7769-1.8666 1.6201-.0663.272-.0663.3383-.0663.7106 0 .5117.0323.7837.272 1.1883.3383.6783 1.0489 1.2223 1.8598 1.4212.85.2397 2.2712.034 3.8981-.5049l.4046-.1394-1.9992 5.525-1.9652 5.5182c0 0 .0663.034.1734.1071.1989.1326.5372.2329.7769.2329.4046 0 .9163-.2329.9826-.4386 0-.0663.9486-3.2878 2.0978-7.1128l2.0315-7.0125-.0663-.0986c-.1649-.2057-.5032-.272-.7106-.1071-.0663.0663-.1717.2057-.238.306-.306.5117-1.0829 1.4212-1.4875 1.7595-.3723.306-.578.3383-.9163.2057-.306-.1666-.4063-.3383-.612-1.2546-.1989-.9095-.4369-1.3226-.9486-1.6609-.4726-.3043-1.0829-.4046-1.6201-.2652z';\nconst semiQuaverRest = 'c-.6228.1176-1.1016.5484-1.3116 1.1436-.0516.192-.0516.2388-.0516.5016 0 .3612.0228.5532.192.8388.2388.4788.7404.8628 1.3176 1.0032.5952.1692 1.5504.0468 2.7-.3324.168-.0708.3084-.1224.3084-.0984 0 .0276-1.0728 3.516-1.1196 3.6372-.1224.3096-.5304.882-.8868 1.242-.3324.3336-.5016.408-.7632.2868-.216-.1176-.2868-.24-.432-.8868-.1212-.4776-.2148-.7404-.4068-.9276-.5016-.5532-1.3644-.624-2.0304-.192-.3144.2148-.5532.5484-.6936.9096-.0516.1872-.0516.2388-.0516.5004 0 .3564.0276.5496.192.8352.2388.4776.7404.8628 1.3176 1.0032.2628.0744.9324.0744 1.3872 0 .3792-.0708.834-.1884 1.2888-.3336.192-.0696.3612-.1164.3612-.0936 0 0-2.3436 7.6272-2.3904 7.7436 0 .024.1872.1692.3792.216.192.0756.3852.0756.5772 0 .1872-.0468.3792-.1644.3792-.2388.024-.024.9804-3.6324 2.1516-8.0112l2.1288-7.9596-.0468-.0696c-.0948-.1452-.2868-.1692-.4548-.0984-.0948.0468-.0948.0468-.3804.4776-.2388.384-.576.7872-.768.9792-.2628.216-.4032.2628-.6432.1692-.2148-.1176-.2904-.2388-.4308-.8856-.1452-.642-.3144-.9336-.6708-1.1724-.3324-.2148-.7632-.2856-1.1484-.1872z';\nconst demiSemiQuaverRest = 'm0 0c-.516.101-.918.461-1.094.957-.043.16-.043.199-.043.418 0 .218 0 .3.043.418.137.441.418.777.856.976.297.16.437.18.855.18.52 0 .957-.078 1.657-.297.179-.063.316-.102.316-.102.019 0-.16.7-.399 1.536-.296 1.175-.417 1.554-.457 1.671-.16.301-.5.758-.718.957-.2.18-.317.219-.516.141-.18-.098-.242-.199-.359-.738-.102-.399-.18-.617-.34-.778-.418-.457-1.137-.515-1.692-.156-.261.176-.46.457-.578.754-.043.16-.043.199-.043.418 0 .301.024.461.161.699.199.399.617.719 1.097.836.219.063.778.063 1.156 0 .317-.058.696-.16 1.075-.277.179-.059.32-.102.32-.102 0 .02-.797 3.051-.84 3.11-.156.34-.476.758-.715.996-.258.258-.398.301-.617.219-.18-.098-.242-.2-.359-.739-.102-.398-.18-.617-.34-.773-.418-.461-1.137-.52-1.692-.16-.261.179-.46.457-.578.758-.043.156-.043.199-.043.417 0 .219 0 .297.043.418.137.438.418.778.856.977.32.16.437.18.875.18.32 0 .422 0 .679-.043.36-.059.739-.176 1.157-.297l.258-.102v.063c-.02.078-1.696 6.375-1.715 6.414-.02.082.34.238.558.238.219 0 .539-.137.559-.238.019-.02.976-4.145 2.172-9.164 2.133-9.086 2.133-9.106 2.094-9.168-.063-.078-.161-.117-.282-.117-.14.019-.199.078-.34.316-.277.481-.597.898-.773 1.039-.121.078-.223.078-.379.02-.18-.102-.242-.2-.359-.739-.121-.539-.262-.777-.559-.976-.277-.18-.637-.238-.957-.16z';\n\nconst quaverFlag = 'c11.7122 2.9669 6.3069 13.252 5.2534 16.885 9.622-13.142-5.1221-18.5026-5.2534-26.47z';\nconst quaverFlagInverted = 'c10.7362-2.7197 5.7813-12.1477 4.8156-15.4779 8.8202 12.0469-4.6953 16.9607-4.8156 24.2642z';\nconst noteXBuffer = 9;\n\nfunction RenderNote(note: Note,\n                    renderProps: RenderProperties,\n                    Bounds: Bounds,\n                    selected: boolean,\n                    flipNote: boolean,\n                    stemDir: StemDirection,\n                    theme: Theme,\n                    colour: string = \"black\"): void {\n  \n  // TODO: This will be determined by key signature\n // if (note.Accidental !== 0) { \n //   RenderAccidental(renderProps, note, note.Accidental, theme); \n // }\n  let { x, y, width, height } = Bounds;\n  const { canvas, context, camera } = renderProps;\n  let flipNoteOffset = flipNote ? \n    stemDir === StemDirection.Up ? 11 : -11 : 0;\n  let posString = `m ${x + camera.x} ${y + 7.5 - 1 + camera.y}`;\n  // TODO: Move this offset somewhere else to be constant\n  y = y + 3;\n  //\n  colour = note.Editable ? theme.NoteElements : theme.UneditableColour;\n  colour = selected ? theme.SelectColour : colour;\n  let noteString = '';\n  switch (note.Duration) {\n    case 0.125:\n    case 0.25:\n   //   noteString = posString + noteHead;\n      RenderSymbol(\n        renderProps,\n        NoteHeads.crotchet,\n        x, y, theme, selected);\n      break;\n    case 0.5:\n      RenderSymbol(\n        renderProps,\n        NoteHeads.minim,\n        x, y, theme, selected);\n      break;\n    case 1:\n      RenderSymbol(\n        renderProps,\n        NoteHeads.whole,\n        x - 2.5, y, theme, selected);\n      break;\n    default:\n      RenderSymbol(\n        renderProps,\n        NoteHeads.crotchet,\n        x, y, theme, selected);\n  }\n  context.fillStyle = theme.NoteElements;\n  if (selected) {\n    context.fillStyle = theme.SelectColour;\n  }\n // context.fill(new Path2D(noteString));\n\n\n  let debug = false;\n  if (debug) {\n    context.fillStyle = \"rgba(200, 0, 0, 0.5)\";\n    context.fillRect(x + camera.x, y + camera.y - 5, width, height);\n    context.fillStyle = theme.NoteElements;\n  }\n}\n\nfunction RenderDots(\n  renderProps: RenderProperties,\n  note: Note,\n  dotXStart: number,\n  ): void {\n\n  const { canvas, context, camera } = renderProps;\n\n  let dotCount = 0;\n  //doing two separate switches for now\n  switch (note.Duration) {\n    case NoteValues.n32d:\n    case NoteValues.n16d:\n    case NoteValues.n8d:\n    case NoteValues.n4d:\n    case NoteValues.n2d:\n    case NoteValues.n1d:\n      dotCount = 1;\n      break;\n    case NoteValues.n32dd:\n    case NoteValues.n16dd:\n    case NoteValues.n8dd:\n    case NoteValues.n4dd:\n    case NoteValues.n2dd:\n    case NoteValues.n1dd:\n      dotCount = 2;\n      break;\n    case NoteValues.n32ddd:\n    case NoteValues.n16ddd:\n    case NoteValues.n8ddd:\n    case NoteValues.n4ddd:\n    case NoteValues.n2ddd:\n    case NoteValues.n1ddd:\n      dotCount = 3;\n      break;\n    default:\n      dotCount = 0;\n  }\n  const circle = 'a1.485 1.485 90 10-2.97 0 1.485 1.485 90 102.97 0';\n  for (let d = 0; d < dotCount; d++) {\n    let lineY = note.Line * 5;\n    if (note.Line % 2 !== 0) {\n      lineY = (note.Line - 1) * 5;\n    }\n    const cpath = `m${dotXStart + camera.x + 17 + (d * 5)} \n      ${lineY + camera.y}` + circle;\n    context.fill(new Path2D(cpath));\n  }\n\n}\n\nfunction RenderRest(\n  ctx: CanvasRenderingContext2D,\n  div: Division,\n  cam: Camera,\n  note: Note,\n  msr: Measure,\n  theme: Theme): void {\n\n    ctx.fillStyle = theme.NoteElements;\n\n    let x = div.Bounds.x + cam.x + noteXBuffer;\n//    let y = div.Bounds.y + cam.y + ((note.Line - 3 - msr.SALineTop) * 5);\n    let y = msr.GetNotePositionOnLine(note.Line + 2.5, note.Staff) + cam.y;\n    let path = `m${x} ${y}`;\n    ctx.fillStyle = note.Selected ? theme.SelectColour : theme.NoteElements;\n\n    if (div.Duration === 0.3125) {\n      y += 7;\n      path = `m ${x} ${y}` + demiSemiQuaverRest;\n      ctx.fill(new Path2D(path));\n    }\n    else if (div.Duration === 0.0625) {\n      y += 9;\n      path = `m ${x} ${y}` + semiQuaverRest;\n      ctx.fill(new Path2D(path));\n    }\n    else if (div.Duration > 0.0625 && div.Duration <= 0.125) {\n      y = y + 10;\n      path = `m${x} ${y}` + quaverRest;\n      ctx.fill(new Path2D(path));\n    }\n    else if (div.Duration === 0.25) {\n      path = path + crotchetRest;\n      ctx.fill(new Path2D(path));\n    }\n    else if (div.Duration === 0.5) {\n      y = msr.GetNotePositionOnLine(note.Line + 4.5, note.Staff) + cam.y;\n      ctx.fillRect(x, y, 14, 6);\n    }\n    else if (div.Duration === 1) {\n        y = msr.GetNotePositionOnLine(note.Line + 3.6, note.Staff) + cam.y;\n        x = div.Bounds.x + cam.x + (div.Bounds.width / 2) - 7;\n        ctx.fillRect(x, y, 14, 6);\n    }\n  }\n\nfunction RenderTupletAnnotation(\n  renderProps: RenderProperties,\n  coords: {x1: number, y1: number, x2: number, y2: number },\n  count: string, theme: Theme): void {\n    const { canvas, context, camera } = renderProps;\n\n    const width = coords.x2 - coords.x1;\n\n    // TODO: Add this to theme maybe\n    context.fillStyle = \"#75757\";\n    context.fillRect(coords.x1 + camera.x, coords.y1 - 12 + camera.y, 1, 6);\n    context.fillRect(coords.x1 + camera.x,\n                     coords.y1 - 12 + camera.y,\n                     (width / 2) - 14, 1);\n\n    context.fillRect(coords.x1 + width + camera.x,\n                     coords.y1 - 12 + camera.y, 1, 6);\n    context.fillRect(coords.x1 + (width / 2) + 14 + camera.x,\n                     coords.y1 - 12 + camera.y,\n                     (width / 2) - 14, 1);\n\n    RenderSymbol(\n      renderProps,\n      GetTupletGlyph(count),\n      coords.x1 + width / 2 - 7,\n      coords.y1 - 5,\n      theme,\n      false);\n}\n\nfunction GetTupletGlyph(count: string): TupletNumbers {\n  switch (count) {\n    case \"0\":\n      return TupletNumbers.Zero;\n    case \"1\":\n      return TupletNumbers.One;\n    case \"2\":\n      return TupletNumbers.Two;\n    case \"3\":\n      return TupletNumbers.Three;\n    case \"4\":\n      return TupletNumbers.Four;\n    case \"5\":\n      return TupletNumbers.Five;\n    case \"6\":\n      return TupletNumbers.Six;\n    case \"7\":\n      return TupletNumbers.Seven;\n    case \"8\":\n      return TupletNumbers.Eight;\n    case \"9\":\n      return TupletNumbers.Nine;\n    default:\n      return TupletNumbers.Three;\n  }\n}\n\nfunction RenderTuplets(\n  renderProps: RenderProperties,\n  divisions: Division[],\n  notes: Note[],\n  staff: number,\n  msr: Measure, theme: Theme): void {\n    const { canvas, context, camera } = renderProps;\n    const divs = divisions.filter(d => d.Staff === staff);\n    divs.sort((a: Division, b: Division) => {\n      return a.Beat - b.Beat;\n    });\n    let foundTuplet = false;\n    let tupleX = 0;\n    let tupleXEnd = 0;\n    let tupleY = 0;\n    let tupleCount = 0;\n\n    divs.forEach((div: Division, i: number) => {\n      const notesInDiv = notes.filter(n => n.Beat === div.Beat\n                                      && n.Staff === staff);\n      let nArray = [...notesInDiv];\n      const stemDir = DetermineStemDirection([notesInDiv], [div], staff, msr);\n      if (!notesInDiv[0].Tuple) {\n        if (foundTuplet) {\n          foundTuplet = false;\n          RenderTupletAnnotation(\n            renderProps,\n            {x1: tupleX, y1: tupleY, x2: tupleXEnd, y2: tupleY},\n            tupleCount.toString(), theme);\n          tupleX = 0;\n          tupleXEnd = 0;\n          tupleY = 0;\n          tupleCount = 0;\n        }\n        return;\n      }\n      if (!foundTuplet) {\n        foundTuplet = true;\n        tupleX = div.Bounds.x + 9;\n        tupleCount = notesInDiv[0].TupleDetails.Count;\n        tupleY = div.Bounds.y;\n        tupleXEnd = div.Bounds.x + 19;\n      } else {\n        tupleXEnd = div.Bounds.x + 19;\n      }\n    });\n  }\n\nfunction RenderTies(renderProps: RenderProperties, divisions: Division[], notes: Note[], staff: number,msr: Measure): void {\n  const { canvas, context, camera } = renderProps;\n  const divs = divisions.filter(d => d.Staff === staff);\n  divs.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n  divs.forEach((div: Division, i: number) => {\n    if (i === divs.length - 1) {\n      return;\n    }\n    const divNotes = notes.filter((note: Note) => note.Beat === div.Beat);\n    divNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n    const nextDivNotes = notes.filter((note: Note) => note.Beat === divs[i+1].Beat);\n    nextDivNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n\n    divNotes.forEach(note => {\n      if (!note.Tied || note.Rest || note.Tied && \n         note.Beat + note.Duration * msr.TimeSignature.bottom > note.TiedEnd) {\n        return;\n      }\n      const tiedTo = nextDivNotes.find(n => \n        n.Line === note.Line &&\n        n.Tied &&\n        n.Beat <= n.TiedEnd);\n      if (tiedTo === undefined) { console.error(\"No tied note found: \", note); return; }\n      const nextNote = tiedTo;\n      const x1 = div.Bounds.x + noteXBuffer + camera.x;\n      const y1 = msr.GetNotePositionOnLine(note.Line, note.Staff) + camera.y;\n      const x2 = divs[i+1].Bounds.x + noteXBuffer + camera.x;\n      const y2 = msr.GetNotePositionOnLine(nextNote.Line, note.Staff) + camera.y\n      const curveOffset = (note.Line < 15) ? -15 : 15;\n      const curveStartOffset = (note.Line < 15) ? -8 : 8;\n      //TODO: This is a temporary representation of a tie or slur\n      context.fillStyle = \"#757575\";\n      context.strokeStyle = \"#757575\";\n      context.setLineDash([]);\n      context.beginPath();\n      context.moveTo(x1 + (noteXBuffer / 2), y1 + curveStartOffset);\n      context.quadraticCurveTo((x1 + (noteXBuffer / 2)) + ((x2 - x1) / 2),\n                               y1 + curveOffset,\n                               x2 + (noteXBuffer / 2),\n                               y2 + curveStartOffset);\n      context.stroke();\n    })\n  })\n}\n\n// This will replace some parts of renderStemRevise eventually\nfunction DetermineStemDirection(\n  notes: Array<Note[]>,\n  divisions: Division[],\n  staff: number,\n  measure: Measure): StemDirection {\n    let dir = StemDirection.Up;\n    // TODO: Not sure we will actually need this, seems like it shouldn't come\n    // out of order in the first place.\n    notes.sort((a: Note[], b: Note[]) => {\n      return a[0].Beat - b[0].Beat;\n    })\n\n    let match = true;\n    divisions.forEach((div: Division, i: number) => {\n      if (div.Beat !== notes[i][0].Beat) {\n        console.error(\"Index: \", i);\n        console.error(\"Match failed on div: \", div);\n        console.error(\"Match failed on beat: \", div.Beat);\n        console.error(\"Match fail note: \", notes[i][0])\n        match = false;\n      }\n    });\n \n    if (!match) {\n      console.error(\"Divisions and note array do not match\");\n      return;\n    }\n\n    const middleLine = 15;\n    let highestLine: number = Number.MAX_SAFE_INTEGER;\n    let lowestLine: number = Number.MIN_SAFE_INTEGER;\n\n    notes.forEach((na: Note[]) => {\n      na.forEach((n: Note) => {\n        if (n.Line < highestLine) {\n          highestLine = n.Line;\n        }\n        if (n.Line > lowestLine) {\n          lowestLine = n.Line;\n        }\n      });\n    });\n\n    if (middleLine - highestLine < lowestLine - middleLine) {\n      dir = StemDirection.Up;\n    } else {\n      dir = StemDirection.Down;\n    }\n\n    return dir;\n  }\n\nfunction RenderStemRevise(\n  renderProps: RenderProperties,\n  notes: Array<Note[]>,\n  divisions: Division[],\n  staff: number,\n  msr: Measure,\n  beamDir: BeamDirection,\n  theme: Theme,\n  colour?: string): void {\n\n    // Check that divisions and note arrays match\n    let match = true;\n    divisions.forEach((div: Division, i: number) => {\n      if (div.Beat !== notes[i][0].Beat) {\n        match = false;\n      }\n    });\n\n    if (!match) {\n      console.error(\"Divisions and note array do not match\");\n      return;\n    }\n\n    const { canvas, context, camera } = renderProps;\n\n    let highestLine: number = Number.MAX_SAFE_INTEGER;\n    let lowestLine: number = Number.MIN_SAFE_INTEGER;\n\n    let stemDirection = StemDirection.Up;  \n    let stemToMidLine = false;\n    //TODO: We are just going to see what happens with up\n    let beamDirection = BeamDirection.UpMax;\n\n    let stemEndY = 0; // end y position of stem\n\n    let beamStartX = 0;\n    let beamEndX = 0;\n\n    const middleLine = (GetStaffHeightUntil(msr.Staves, staff) / 5) + \n      15;\n    const yLineBuffer = msr.Staves.find((s: Staff) => s.Num === staff).TopLine;\n    const staffTopLine = yLineBuffer;\n    const midStemThreshHold = 7;\n    const lineHeight = 5;\n\n    // Highest line has a lower number (lines start at 0 from the top \n    // of the measure and go down\n    let lowestNote: Note;\n    notes.forEach((na: Note[]) => {\n      na.forEach((n: Note) => {\n        if (n.Line < highestLine) {\n          highestLine = n.Line;\n        }\n        if (n.Line > lowestLine) {\n          lowestLine = n.Line;\n          lowestNote = n;\n        }\n      });\n    });\n    // TODO: Beam Direction\n\n    if (middleLine - highestLine + staffTopLine < lowestLine - middleLine - staffTopLine) {\n      stemDirection = StemDirection.Up;\n      stemEndY = divisions[0].Bounds.y + ((highestLine - yLineBuffer) * lineHeight) - 35 + camera.y;\n      if (highestLine - staffTopLine >= middleLine + midStemThreshHold) {\n        stemToMidLine = true;\n        stemEndY = divisions[0].Bounds.y + (middleLine * lineHeight) + camera.y;\n      }\n\n    } else {\n      stemDirection = StemDirection.Down;\n      stemEndY = divisions[0].Bounds.y + ((lowestLine - yLineBuffer) * lineHeight) + 35 + camera.y;\n      if (lowestLine - staffTopLine <= middleLine - midStemThreshHold) {\n        stemToMidLine = true;\n        stemEndY = divisions[0].Bounds.y + (middleLine * lineHeight) + camera.y;\n      }\n    }\n    \n\n    // Render stems TODO: Move stem creation logic elsewhere\n    divisions.forEach((div: Division, i: number) => {\n      if (div.Duration === 1) { return; }\n      const xBuffer = stemDirection === StemDirection.Up ? 11.5 : 0.25;\n      let dynNoteXBuffer = noteXBuffer;\n      const divNotes = msr.Notes.filter(n => n.Beat === div.Beat && n.Staff === div.Staff);\n      const numOfAcc = divNotes.filter(n => n.Accidental !== 0).length;\n      if (numOfAcc > 0) {\n        dynNoteXBuffer += noteXBuffer * numOfAcc - 1;\n      }\n      const stemX = Math.floor(div.Bounds.x + xBuffer + camera.x + dynNoteXBuffer);\n\n      if (i === 0) {\n        beamStartX = stemX;\n      } else if (i === divisions.length - 1) {\n        beamEndX = stemX;\n        if (stemDirection === StemDirection.Down) {\n          // beam end x position needs to account for the stem thickness\n          beamEndX += 2;\n        }\n     }\n\n      const sortedNotes = notes[i].sort((a: Note, b: Note) => {\n        return a.Line - b.Line\n      })\n\n      const highLine = sortedNotes[0].Line;\n      const lowLine = sortedNotes[sortedNotes.length-1].Line;\n      let startPos = (stemDirection === StemDirection.Up) ? \n                      div.Bounds.y + ((lowLine - yLineBuffer) * lineHeight) + camera.y - 2: // 2 is a buffer for stem\n                      div.Bounds.y + ((highLine - yLineBuffer) * lineHeight) + camera.y + 2;\n      if (divisions.length === 1 && divisions[0].Duration < 0.25) {\n        const flagLoop = GetFlagCount(div.Duration);\n        if (stemDirection === StemDirection.Up) {\n          for (let i = 0; i < flagLoop; i++ ) {\n            let flagString = `m${stemX} ${stemEndY + (i * 8)}`;// + quaverFlag; // rough testing for flag\n            context.fill(new Path2D(flagString + quaverFlag));\n          }\n        } else {\n          for (let i = 0; i < flagLoop; i++ ) {\n            let flagString = `m${stemX} ${stemEndY - (i * 8)}`;// + quaverFlag; // rough testing for flag\n            context.fill(new Path2D(flagString + quaverFlagInverted));\n          }\n        }\n      } else if (divisions.length > 1 && divisions[0].Duration < 0.25) {\n        context.fillStyle = theme.NoteElements;\n        // getting highest line in division 0\n        let startY = 0;\n        let endY = 0;\n        let xB = stemDirection === StemDirection.Up ? 10.5 : 0;\n        stemEndY = stemDirection === StemDirection.Up ?\n          msr.GetNotePositionOnLine(highestLine, staff) - 35 + camera.y :\n          msr.GetNotePositionOnLine(lowestLine, staff) + 35 + camera.y;\n        if (beamDir === BeamDirection.UpMax) {\n          if (stemDirection === StemDirection.Up) {\n            stemEndY -= i * (10 / (divisions.length - 1));\n            endY = stemEndY - 10;\n          } else {\n            stemEndY += i * (10 / (divisions.length - 1));\n            endY = stemEndY + 10;\n          }\n        } else if (beamDir === BeamDirection.DownMax) {\n          if (stemDirection === StemDirection.Up) {\n            stemEndY += i * (10 / (divisions.length - 1));\n            endY = stemEndY + 10;\n          } else {\n            stemEndY -= i * (10 / (divisions.length - 1));\n            endY = stemEndY - 10;\n          }\n        } else {\n          endY = stemEndY;\n        }\n        if (i === 0) {\n          const fNoteX = notes[0][0].Bounds.x;\n          const lNoteX = notes[notes.length-1][0].Bounds.x;\n\n           const newBeam = new Beam(\n            new Bounds(divisions[0].Bounds.x + 19,\n                       stemEndY, 5, 5),\n                       { x: fNoteX + xB, y: stemEndY - camera.y},\n                       { x: lNoteX + xB, y: endY - camera.y});\n\n          newBeam.Render(context, camera, GetFlagCount(divisions[0].Duration), stemDirection, theme);\n        }\n      }\n      // TODO: Working things out\n      if (lowestNote !== undefined) {\n        startPos = lowestNote.Bounds.y + camera.y;\n        stemEndY = startPos - 35;\n      }\n      // END TODO\n      const diff = stemEndY - startPos;\n      const newStem = new Stem(new Bounds(stemX, startPos, 1.5, diff));\n      newStem.Render(context, camera, theme);\n    });\n}\n\nfunction GetFlagCount(value: number): number {\n  let count = 1;\n  switch (value) {\n    case 0.03125:\n      count = 3;\n      break;\n    case 0.0625:\n      count = 2;\n      break;\n    default:\n  }\n  return count;\n}\n\nfunction renderLedgerLines(\n  notes: Note[],\n  division: Division,\n  renderProps: RenderProperties,\n  staff: number,\n  msr: Measure,\n  theme: Theme,\n  colour?: string): void {\n\n    const { canvas, context, camera } = renderProps;\n    // TODO: This code is repeated (search for dynNoteXBuffer)\n    // Could be a good idea to make it a function\n    let dynNoteXBuffer = noteXBuffer;\n    const divNotes = msr.Notes.filter(n => n.Beat === division.Beat && n.Staff === division.Staff);\n    const numOfAcc = divNotes.filter(n => n.Accidental !== 0).length;\n    if (numOfAcc > 0) {\n      dynNoteXBuffer += noteXBuffer * numOfAcc - 1;\n    }\n\n    const ledgerX = (division.Bounds.x + dynNoteXBuffer) - 6 + camera.x;\n\n    //const ledgerString = `m ${x - 6} ${y - 5} h 22 v 2 h-20 v-2 Z`;\n    const ledgerString = `h 22 v 1.5 h-20 v-1.5 Z`;\n\n    const bdNotes = notes.filter((note: Note) => note.Beat === division.Beat &&\n                                note.Staff === division.Staff);\n    const midLine = 15;\n    if (bdNotes.length === 0) { return; }\n    bdNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n\n    const highestLine = bdNotes[0];\n    const lowestLine = bdNotes[bdNotes.length-1];\n    context.fillStyle = theme.NoteElements;\n\n    for (let l=midLine - 6; l >= highestLine.Line; l -= 2) {\n      const ledgerY = msr.GetNotePositionOnLine(l, staff) + camera.y + 2.5;\n      const path = `m ${ledgerX} ${ledgerY}` + ledgerString;\n      context.fill(new Path2D(path));\n    }\n    for (let h=midLine + 6; h <= lowestLine.Line; h += 2) {\n      const ledgerY = msr.GetNotePositionOnLine(h, staff) + camera.y + 2.5;\n      const path = `m ${ledgerX} ${ledgerY}` + ledgerString;\n      context.fill(new Path2D(path));\n    }\n  }\n\nexport { \n  RenderNote,\n  RenderRest,\n  renderLedgerLines,\n  RenderStemRevise, \n  RenderTies,\n  DetermineStemDirection,\n  RenderDots,\n  StemDirection,\n  BeamDirection,\n  RenderTuplets\n};\n","import { BeamDirection, StemDirection } from \"../Renderers/Note.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\nimport { DivGroup, Division } from \"./Division.js\";\nimport { Measure } from \"./Measure.js\";\nimport { Note } from \"./Note.js\";\n\nclass Beam {\n  Bounds: Bounds;\n  Direction: string;\n  StartPoint: {x: number, y: number};\n  EndPoint: {x: number, y: number};\n  constructor(bounds: Bounds, start: {x: number, y: number}, end: {x: number, y: number}) {\n    this.Bounds = bounds;\n    this.StartPoint = start;\n    this.EndPoint = end;\n  }\n\n  Render(context: CanvasRenderingContext2D, cam: Camera, count: number, stemDir: StemDirection, theme: Theme): void {\n      context.fillStyle = theme.NoteElements;\n      const baseThickness = 6;\n      const svgLine = `M ${this.StartPoint.x + cam.x} ${this.StartPoint.y + cam.y}\n        L${this.EndPoint.x + cam.x + 2} ${this.EndPoint.y + cam.y}\n        V${(this.EndPoint.y + cam.y) + baseThickness} \n        L${this.StartPoint.x + cam.x} ${this.StartPoint.y + baseThickness + cam.y} z `\n      context.fill(new Path2D(svgLine));\n\n      let yBuffer = stemDir === StemDirection.Up ? 2.5 : -8;\n      let flagBuffer = stemDir === StemDirection.Up ? 6 : 0;\n      for (let i=1;i<count;i++) {\n\n        const thickness = 6;\n        const line = `M ${this.StartPoint.x + cam.x} ${this.StartPoint.y + (flagBuffer * i) + (yBuffer * i) + cam.y}\n          L${this.EndPoint.x + cam.x + 2} ${this.EndPoint.y + (flagBuffer * i) + (yBuffer * i) + cam.y}\n          V${(this.EndPoint.y + (flagBuffer * i) + (yBuffer * i) + cam.y) + thickness} \n          L${this.StartPoint.x + cam.x} ${this.StartPoint.y + (flagBuffer * i) + (yBuffer * i) + thickness + cam.y} z`;\n        context.fill(new Path2D(line));\n      }\n  }\n}\n\nfunction DetermineBeamDirection(measure: Measure,\n                                divGroup: DivGroup,\n                                stemDir: StemDirection): BeamDirection {\n\n  const divisions = divGroup.Divisions.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n\n  if (stemDir === StemDirection.Up) {\n    const firstDivTopLine = divGroup.Notes[0].sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    })[0].Line;\n    const lastDivTopLine = divGroup.Notes[divGroup.Notes.length-1].sort((a: Note, b:Note) => {\n      return a.Line - b.Line;\n    })[0].Line;\n\n    if (firstDivTopLine === lastDivTopLine) { return BeamDirection.Flat}\n    else if (firstDivTopLine < lastDivTopLine) { return BeamDirection.DownMax; }\n    else if (firstDivTopLine > lastDivTopLine) { return BeamDirection.UpMax; }\n  } else {\n    const firstDivBotLine = divGroup.Notes[0].sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    })[divGroup.Notes[0].length-1].Line;\n    const lastDivBotLine = divGroup.Notes[divGroup.Notes.length-1].sort((a: Note, b:Note) => {\n      return a.Line - b.Line;\n    })[divGroup.Notes[divGroup.Notes.length-1].length-1].Line;\n\n    // Flat beam direction\n    if (firstDivBotLine === lastDivBotLine) { return BeamDirection.Flat}\n    else if (firstDivBotLine < lastDivBotLine) { return BeamDirection.UpMax; }\n    else if (firstDivBotLine > lastDivBotLine) { return BeamDirection.DownMax; }\n\n  }\n  return BeamDirection.Flat;\n}\n\nfunction GenerateBeams(measure: Measure, divGroup: DivGroup, stemDir: StemDirection): Beam {\n  // lines go top - bot in terms of value (0... 30 etc.)\n  let startTopLine: number, endTopLine = Number.MIN_SAFE_INTEGER;\n  let startBotLine: number, endBotLine = Number.MAX_SAFE_INTEGER;\n  const divisions = divGroup.Divisions.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n  const staff = divisions[0].Staff;\n  // assuming that divGroup.notes array is sorted by beat\n  startTopLine = divGroup.Notes[0].sort((a: Note, b:Note) => {\n    return a.Line - b.Line;\n  })[0].Line;\n  startBotLine = divGroup.Notes[0].sort((a: Note, b:Note) => {\n    return a.Line - b.Line;\n  })[divGroup.Notes[0].length - 1].Line;\n\n  endTopLine = divGroup.Notes[divGroup.Notes.length-1].sort((a: Note, b:Note) => {\n    return a.Line - b.Line;\n  })[0].Line;\n  endBotLine = divGroup.Notes[divGroup.Notes.length-1].sort((a: Note, b:Note) => {\n    return a.Line - b.Line;\n  })[divGroup.Notes[divGroup.Notes.length-1].length - 1].Line;\n\n  // we'll figure this shit out\n//  if (stemDir === StemDirection.Up) {}\n  //  19 = various buffers (x / note)\n  const beamStartX = divisions[0].Bounds.x + 19;\n  const beamStartY = measure.GetNotePositionOnLine(startTopLine, staff) - 35;\n\n  const beamEndX = divisions[divisions.length-1].Bounds.x + 19;\n  const beamEndY = measure.GetNotePositionOnLine(endTopLine, staff) - 35;\n\n  const beam = new Beam(new Bounds(\n    beamStartX, beamStartY, (beamEndX - beamStartX), 5),\n    {x: beamStartX, y: beamStartY },\n    {x: beamEndX, y: beamEndY });\n  return beam;\n}\n\nexport { Beam, GenerateBeams, DetermineBeamDirection } \n","import { Clefs, RenderSymbol } from \"../Renderers/MusicFont.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\nimport { StaffType } from \"./Instrument.js\";\nimport { Measure } from \"./Measure.js\";\nimport { GetStaffActualMidLine, GetStaffMiddleLine } from \"./Staff.js\";\n\n// TODO: Move this somewhere central\nconst lineSpace = 10;\n\nclass Clef implements ISelectable {\n  ID: number;\n  Selected: boolean;\n  Staff: number;\n  Position: { x: number; y: number };\n  Bounds: Bounds;\n  SelType: SelectableTypes;\n  Type: string;\n  Beat: number;\n  Editable: boolean;\n  constructor(id: number, type: string, beat: number, staff: number) {\n    this.ID = id;\n    this.Position = { x: 0, y: 0 };\n    this.Staff = staff;\n    this.Bounds = new Bounds(0, 0, 0, 0);\n    this.Type = type;\n    this.SelType = SelectableTypes.Clef;\n    this.Beat = beat;\n    this.Selected = false;\n    // TODO: shouldn't only be true\n    this.Editable = true;\n  }\n\n  render(renderProps: RenderProperties, theme: Theme): void {\n    let clefSymbol: Clefs;\n    switch (this.Type) {\n      case \"treble\":\n        clefSymbol = Clefs.G;\n        break;\n      case \"bass\":\n        clefSymbol = Clefs.F;\n        break;\n      default:\n        clefSymbol = Clefs.G;\n    }\n\n    RenderSymbol(\n      renderProps,\n      clefSymbol,\n      this.Position.x,\n      this.Position.y,\n      theme,\n      this.Selected,\n    );\n  }\n\n  SetBounds(msr: Measure, staff: number): void {\n    // There is a difference between position and bounds\n    // Position is for visually positioning the clef glyph, bounds is for selection\n    const div = msr.Divisions.find(\n      (d) => d.Beat === this.Beat && d.Staff === staff,\n    );\n    const xPosition: number = this.Beat === 1 ? msr.Bounds.x : div.Bounds.x;\n    const xBuffer = 3;\n    // Treble as default, 2\n    let lineBuffer = 2;\n    //    let yBuffer = staff === 0 ? 0 : msr.GetMeasureHeight();\n    let yBuffer = 0;\n    // TODO: Replace with relative mid line function (i think it might exist\n    // already)\n    const msrMidLine = 10; //GetStaffActualMidLine(msr.Staves, staff);\n    this.Position.x = xPosition + xBuffer;\n    this.Bounds.x = xPosition + xBuffer;\n    switch (this.Type) {\n      case \"bass\":\n        lineBuffer = -2;\n    }\n    this.Position.y = div.Bounds.y + yBuffer + (msrMidLine + lineBuffer) * 5;\n    this.Bounds.y = div.Bounds.y;\n    this.Bounds.width = 30;\n    this.Bounds.height = 85;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n}\n\nfunction GetNoteClefType(\n  msr: Measure,\n  noteBeat: number,\n  staff: StaffType,\n): string {\n  let clefType: string = staff === StaffType.Single ? \"treble\" : \"bass\";\n  if (staff === StaffType.Single) {\n    msr.Clefs.sort((a: Clef, b: Clef) => {\n      return a.Beat - b.Beat;\n    });\n    msr.Clefs.forEach((c: Clef) => {\n      // clefs can change part way through measure\n      // need to find latest clef to pass on to note (by beat)\n      if (c.Beat <= noteBeat) {\n        clefType = c.Type;\n        return;\n      }\n    });\n  }\n  return clefType;\n}\n\nexport { Clef, GetNoteClefType };\n","const MIDI_START = 21;\nconst MIDI_END = 127;\n\nconst A4Midi: number = 69;\nconst A4Hz: number = 440;\n\n//const NoteNames = [\n//  \"C\",\n//  \"C#\",\n//  \"D\",\n//  \"D#\",\n//  \"E\",\n//  \"F\",\n//  \"F#\",\n//  \"G\",\n//  \"G#\",\n//  \"A\",\n//  \"A#\",\n//  \"B\"\n//];\n\nconst NoteNames = [\n  \"A\",\n  \"A#\",\n  \"B\",\n  \"C\",\n  \"C#\",\n  \"D\",\n  \"D#\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"G\",\n  \"G#\",\n];\n\n// Clef type to line number of A4 (440hz)\nconst ClefPitchRef: Map<string, number> = new Map<string, number>([\n  [\"treble\", 16],\n  [\"bass\", 4],\n]);\n\n// midiNumber = the integer assigned to the note value, A4 = 69 = 440hz\nfunction calcPitch(midiNumber: number): number {\n  return (\n    Math.floor(A4Hz * Math.pow(2, (midiNumber - A4Midi) / 12) * 1000) / 1000\n  );\n}\n\nfunction ReturnLineFromMidi(\n  clef: string,\n  midi: number,\n  staff: number = 0,\n): number {\n  let onNote = 0; // A note entry in NoteNames array\n  let a4Midi = 69;\n  let accidental = 0;\n  const a4Line = staff === 0 ? 16 : 34;\n  let line = a4Line;\n  if (midi === a4Midi) {\n    return a4Line;\n  }\n  if (midi > a4Midi) {\n    for (let i = a4Midi; i < midi; i++) {\n      if (NoteNames[onNote] === \"C\" || NoteNames[onNote] === \"F\") {\n        line -= 0;\n        if (onNote === 0) {\n          onNote = NoteNames.length - 1;\n        } else {\n          onNote -= 1;\n        }\n      } else {\n        line -= 1;\n        onNote -= 1;\n      }\n    }\n  } else if (a4Midi > midi) {\n    for (let i = a4Midi; i > midi; i--) {\n      if (NoteNames[onNote] === \"B\" || NoteNames[onNote] === \"E\") {\n        line += 0;\n        if (onNote === NoteNames.length - 1) {\n          onNote = 0;\n        } else {\n          onNote += 1;\n        }\n      } else {\n        line += 1;\n        onNote += 1;\n      }\n    }\n  }\n  return line;\n}\n\nfunction ReturnMidiNumber(\n  clef: string,\n  line: number,\n  acc: number = 0,\n  staff: number = 0,\n): number {\n  let onNote = 0; // A entry in NoteNames array\n  let a4line = ClefPitchRef.get(clef);\n  let midiNumber = 69;\n  let midiNote = midiNumber;\n  if (line === a4line) {\n    return midiNumber + acc;\n  } else if (line > a4line) {\n    for (let i = a4line; i < line; i++) {\n      if (NoteNames[onNote] === \"C\" || NoteNames[onNote] === \"F\") {\n        midiNote -= 1;\n        onNote -= 1;\n      } else {\n        if (onNote === 0) {\n          onNote = NoteNames.length - 2;\n        } else {\n          onNote -= 2;\n        }\n        midiNote -= 2;\n      }\n    }\n  } else {\n    for (let i = a4line; i > line; i--) {\n      if (NoteNames[onNote] === \"B\" || NoteNames[onNote] === \"E\") {\n        midiNote += 1;\n        if (onNote === NoteNames.length - 1) {\n          onNote = 0;\n        } else {\n          onNote += 1;\n        }\n      } else {\n        midiNote += 2;\n        onNote += 2;\n      }\n    }\n  }\n\n  midiNote += acc;\n\n  return midiNote;\n}\n\nfunction ReturnFrequency(clef: string, line: number): number {\n  const a4line = ClefPitchRef.get(clef);\n  let diff = 0;\n  let midiNumber = 69;\n  if (line === a4line) {\n    return A4Hz;\n  }\n\n  if (line > a4line) {\n    diff = line - a4line;\n    midiNumber += diff;\n  } else {\n    if (line <= 0) {\n      diff = a4line - line;\n      midiNumber -= diff;\n    } else {\n      diff = a4line + -line;\n      midiNumber -= diff;\n    }\n  }\n\n  return calcPitch(midiNumber);\n}\n\ntype MappedMidi = {\n  NoteString: string;\n  Frequency: number;\n  // only for treble clef atm\n  Line: number;\n  Accidental: number;\n};\n\nfunction nextLineCounter(counter: number): number {\n  let next = counter + 1;\n  if (counter + 1 > 11) {\n    next = 0;\n  }\n  return next;\n}\n\nfunction GeneratePitchMap(): Map<number, MappedMidi> {\n  let map = new Map<string, number>();\n  let midiMap = new Map<number, MappedMidi>();\n  let noteNameCount = 0;\n  let noteNumberCount = 0;\n  let lineNum = 16 + 30 - 1;\n  let lineCounter = 0;\n  let lineMax = 11;\n  for (let n = MIDI_START; n <= MIDI_END; n++) {\n    if (noteNameCount >= NoteNames.length) {\n      noteNameCount = 0;\n      noteNumberCount++;\n    }\n    lineNum = [0, 2, 3, 5, 7, 8, 10].includes(lineCounter)\n      ? lineNum - 1\n      : lineNum;\n    map.set(\n      (NoteNames[noteNameCount] + noteNumberCount).toString(),\n      calcPitch(n),\n    );\n    midiMap.set(n, {\n      NoteString: (NoteNames[noteNameCount] + noteNumberCount).toString(),\n      Frequency: calcPitch(n),\n      Line: lineNum,\n      Accidental: NoteNames[noteNameCount].includes(\"#\") ? 1 : 0,\n    });\n    noteNameCount++;\n\n    if (lineCounter >= lineMax) {\n      lineCounter = 0;\n    } else {\n      lineCounter++;\n    }\n  }\n\n  return midiMap;\n}\n\nfunction FromPitchMap(\n  midiNote: number,\n  map: Map<number, MappedMidi>,\n  clef: string,\n): MappedMidi {\n  const mapped: MappedMidi = map.get(midiNote);\n\n  let alteredNote: MappedMidi = {\n    NoteString: mapped.NoteString,\n    Line: mapped.Line,\n    Frequency: mapped.Frequency,\n    Accidental: mapped.Accidental,\n  };\n\n  // if the clef is not a treble clef we need to alter the line returned by a\n  // set amount\n  if (clef === \"bass\") {\n    alteredNote.Line -= 12;\n  }\n  return alteredNote;\n}\n\nexport {\n  GeneratePitchMap,\n  ReturnMidiNumber,\n  ReturnLineFromMidi,\n  MappedMidi,\n  FromPitchMap,\n};\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { ReturnMidiNumber } from \"../Workers/Pitcher.js\";\nimport { Camera } from \"./Camera.js\";\n\ninterface TupleDetails {\n  StartBeat: number;\n  EndBeat: number;\n  Value: number; // Total tuple value, not value of individual note\n  Count: number; // Total tuple count (3 for triplet etc.)\n}\ninterface NoteProps {\n  Beat: number;\n  Duration: number;\n  Line: number;\n  Rest: boolean;\n  Tied: boolean;\n  Staff: number;\n  Tuple: boolean;\n  TupleDetails?: TupleDetails;\n  Clef: string;\n  Editable?: boolean;\n}\n\nclass Note implements ISelectable {\n  Beat: number;\n  Duration: number;\n  Line: number;\n  Rest: boolean;\n  Tied: boolean;\n  Accidental: number\n  ID: number;\n  SelType: SelectableTypes;\n  Clef: string;\n  Editable: boolean;\n\n  TiedStart: number; // beat\n  TiedEnd: number; // beat\n\n  Bounds: Bounds;\n  Selected: boolean;\n\n  Staff: number;\n\n  Tuple: boolean;\n  TupleDetails?: TupleDetails;\n\n  constructor(props: NoteProps) {\n    this.Beat = props.Beat;\n    this.Duration = props.Duration;\n    this.Line = props.Line;\n    this.Rest = props.Rest;\n    this.Tied = props.Tied;\n    this.Accidental = 0;\n    this.Staff = props.Staff;\n    this.Clef = props.Clef;\n\n    this.Selected = false;\n    this.SelType = SelectableTypes.Note;\n    this.Bounds = new Bounds(0, 0, 0, 0);\n    this.Bounds.width = 12;\n    this.Bounds.height = 10;\n    this.Editable = props.Editable !== undefined ? props.Editable : true;\n    this.ID = -1;\n\n    this.Tuple = props.Tuple;\n    if (props.TupleDetails) {\n      this.TupleDetails = props.TupleDetails;\n    }\n    // note position is not based on bounds property\n  }\n\n  SetBounds(bounds: Bounds): void {\n    this.Bounds = bounds;\n  }\n\n  SetID(id: number): void {\n    this.ID = id;\n  }\n\n  SetTiedStartEnd(s: number, e: number): void {\n    this.TiedStart = s;\n    this.TiedEnd = e;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n\n  GetMidiNumber(): number {\n    const line = this.Staff === 0 ? this.Line : \n      this.Line - 1000;\n    return ReturnMidiNumber(this.Clef, line, this.Staff);\n  }\n}\n\nexport { Note, NoteProps, TupleDetails }\n","import { Camera } from \"../Core/Camera.js\";\nimport { GetNoteClefType } from \"../Core/Clef.js\";\nimport { DivGroup, GetDivisionGroups } from \"../Core/Division.js\";\nimport { StaffType } from \"../Core/Instrument.js\";\nimport { Division, Measure } from \"../Core/Measure.js\";\nimport { Note, NoteProps, TupleDetails } from \"../Core/Note.js\";\nimport { GetStaffMiddleLine } from \"../Core/Staff.js\";\nimport { GetLargestValues } from \"../Core/Values.js\";\nimport { IsFlippedNote } from \"../Renderers/Measure.Renderer.js\";\nimport { DetermineStemDirection, StemDirection } from \"../Renderers/Note.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\n\nconst noteXBuffer = 9;\n\n// added for automatic/generated notes from external UIs.\n// eg. Generating a random rhythm in the music trainer app\nfunction AddNoteOnMeasure(msr: Measure,\n                          noteValue: number,\n                          line: number,\n                          beat: Division,\n                          rest: boolean): void {\n\n  InputNote(msr, noteValue, beat, {num: line, bounds: new Bounds(0,0,0,0)}, rest);\n\n}\n\nfunction InputOnMeasure(msr: Measure,\n                        noteValue: number,\n                        x: number,\n                        y: number,\n                        cam: Camera,\n                        rest: boolean): void {\n  let inputtingNote = true;\n  const beatOver = msr.Divisions.find(b => b.Bounds.IsHovered(x, y, cam));\n  if (!beatOver) { console.error('Beat Over Not Found'); return; }\n  let line = msr.GetLineHovered(y, beatOver.Staff);\n  if (msr.Instrument.Staff === StaffType.Rhythm) {\n    line.num = 15;\n  }\n  if (inputtingNote) {\n    InputNote(msr, noteValue, beatOver, line, rest);\n  }\n}\n\nfunction InputNote(\n  msr: Measure,\n  noteValue: number,\n  division: Division,\n  line: { num: number, bounds: Bounds },\n  rest: boolean,\n  tupleCount: number = 1): void {\n\n    const notesInDiv = msr.Notes.filter(n => n.Beat === division.Beat);\n    if (notesInDiv.length < 1) { console.error(\"No notes found in division\"); return; }\n    const addingToTuple = notesInDiv[0].Tuple;\n    if (addingToTuple) {\n      if (noteValue !== division.Duration) {\n        //TODO: For now only same values can be added to tuplet grouping\n        noteValue = noteValue / notesInDiv[0].TupleDetails.Count;\n      }\n    }\n    const clefType: string = GetNoteClefType(msr, division.Beat, division.Staff);\n    const noteProps: NoteProps = {\n      Beat: division.Beat,\n      Duration: noteValue,\n      Line: line.num,\n      Rest: rest,\n      Tied: false,\n      Staff: division.Staff,\n      Tuple: addingToTuple,\n      TupleDetails: notesInDiv[0].TupleDetails,\n      Clef: clefType,\n    };\n    const newNote: Note = new Note(noteProps);\n\n    if (division.Duration === noteValue) {\n      msr.ClearRestNotes(division.Beat, division.Staff);\n      msr.AddNote(newNote, true);\n    } else {\n      if (MeasureHasRoom(noteProps.Beat, noteProps.Duration, msr)) {\n        AddToDivision(msr, noteProps, division.Staff);\n      }\n    } \n    msr.CreateDivisions(msr.Camera, true);\n}\n\nfunction UpdateNoteBounds(msr: Measure, staff: number): void {\n    // Maybe should go somewhere else\n    // Maybe should be more optimised\n    // For now seems to update bounds of notes properly\n    const groups = GetDivisionGroups(msr, staff);\n     groups.DivGroups.forEach((g: DivGroup) => {\n      const { Divisions, Notes } = g;\n      const stemDir = DetermineStemDirection(Notes, Divisions, staff, msr);\n      Divisions.forEach((div: Division) => {\n        const divNotes = msr.Notes.filter(n => n.Beat === div.Beat &&\n                                         n.Staff === staff);\n        divNotes.sort((a: Note, b: Note) => {\n          return a.Line - b.Line;\n        });\n        divNotes.forEach((n: Note, i: number) => {\n          const isFlipped = IsFlippedNote(divNotes, i, stemDir);\n          let flipNoteOffset = isFlipped ? \n            stemDir === StemDirection.Up ? 11 : -11 : 0;\n          // Note X Buffer needs to change if there are more than 1 accidental\n          // in div, TODO: Note this implementation does not account for natural\n          // accidentals at this point\n          let dynNoteXBuffer = noteXBuffer;\n          const numOfAcc = divNotes.filter(n => n.Accidental !== 0).length;\n          if (numOfAcc > 0) {\n            dynNoteXBuffer += noteXBuffer * numOfAcc - 1;\n          }\n          if (!n.Rest) {\n            n.Bounds.x = Math.floor(div.Bounds.x + dynNoteXBuffer + flipNoteOffset);\n            n.Bounds.y = msr.GetNotePositionOnLine(n.Line, n.Staff);\n          }\n        });\n      });\n    });\n}\n\nfunction MeasureHasRoom(beat: number, duration: number, msr: Measure, tuple: number = 1): boolean {\n  return (beat * duration) <= msr.TimeSignature.top * (1 / msr.TimeSignature.bottom);\n}\n\nfunction IsRestOnBeat(msr: Measure, beat: number, notes: Note[], staff: number): boolean {\n  const notesOnBeat = notes.filter(n => n.Beat === beat && n.Staff === staff);\n  const restFound = notesOnBeat.find(n => n.Rest);\n  if (restFound && notesOnBeat.length > 1) { \n    console.error(\"Rest found on beat with multiple notes, beat: \", beat);\n  } else if (restFound && notesOnBeat.length === 1) {\n    msr.ClearRestNotes(beat, notesOnBeat[0].Staff);\n  }\n  return restFound !== undefined;\n}\n\nfunction AddToDivision(msr: Measure, noteProps: NoteProps, staff: number): void {\n  let remainingValue = noteProps.Duration;\n  let beat = noteProps.Beat;\n  if (noteProps.Rest) { noteProps.Line = GetStaffMiddleLine(msr.Staves, staff) }\n  let tying = false;\n  let tStart = -1;\n  let tEnd = -1;\n  msr.Divisions.filter(d => d.Staff === staff).forEach((div: Division, i: number) => {\n    if (tying && noteProps.Rest) { tying = false; }\n\n    if (remainingValue >= div.Duration && beat === div.Beat) {\n      // clear rests on beat regardless of what we are inputting\n      msr.ClearRestNotes(beat, noteProps.Staff);\n\n      if (remainingValue > div.Duration && tying === false && !noteProps.Rest) {\n        tying = true;\n        tStart = div.Beat;\n        tEnd = div.Beat + (remainingValue - div.Duration) * msr.TimeSignature.bottom;\n      }\n\n      const newNoteProps: NoteProps = {\n        Beat: div.Beat,\n        Duration: div.Duration,\n        Line: noteProps.Line,\n        Rest: noteProps.Rest,\n        Tied: tying,\n        Staff: div.Staff,\n        Tuple: false,\n        Clef: GetNoteClefType(msr, div.Beat, div.Staff),\n      };\n\n      const newNote = new Note(newNoteProps);\n\n      if (tying) {\n        newNote.SetTiedStartEnd(tStart, tEnd);\n        if (remainingValue - div.Duration <= 0) {\n          tying = false;\n        }\n      }\n\n      remainingValue -= div.Duration;\n      beat += (div.Duration * msr.TimeSignature.bottom);\n      msr.AddNote(newNote, true);\n    } \n    else if (remainingValue < div.Duration && beat === div.Beat\n            && remainingValue > 0) {\n        // Get other notes that will be effected\n        const notesOnBeat = msr.Notes\n          .filter((note: Note) => { \n            return note.Beat === div.Beat &&\n            note.Staff === div.Staff;\n          });\n        if (IsRestOnBeat(msr, beat, notesOnBeat, div.Staff)) {\n          // If it does not effect any other notes (only rests in div)\n          // We can just add a note of our desired Duration.\n          const newNoteProps: NoteProps = {\n            Beat: div.Beat,\n            Duration: remainingValue,\n            Line: noteProps.Line,\n            Rest: noteProps.Rest,\n            Tied: tying,\n            Staff: div.Staff,\n            Tuple: false,\n            Clef:  GetNoteClefType(msr, div.Beat, div.Staff),\n          }\n          const newNote = new Note(newNoteProps);\n\n         if (tying) {\n            newNote.SetTiedStartEnd(tStart, tEnd);\n            if (remainingValue - div.Duration <= 0) {\n              tying = false;\n            }\n          }\n\n          remainingValue = 0;\n          msr.AddNote(newNote, true);\n          console.log(\"note added\");\n          return;\n        } \n\n        // This note is not tying, but existing notes will \n        // need to be tied together\n        const newNoteProps: NoteProps = {\n          Beat: div.Beat,\n          Duration: remainingValue,\n          Line: noteProps.Line,\n          Rest: noteProps.Rest,\n          Tied: false,\n          Staff: div.Staff,\n          Tuple: noteProps.Tuple,\n          TupleDetails: noteProps.TupleDetails,\n          Clef: GetNoteClefType(msr, div.Beat, div.Staff),\n        };\n\n        const remValue = div.Duration - remainingValue;\n        const tiedNoteValues = GetLargestValues(remValue).sort((a: number, b: number) => {\n          return a - b\n        });\n        const tiedStart = div.Beat;\n        const tiedEnd = div.Beat + remValue * msr.TimeSignature.bottom;\n\n        notesOnBeat.forEach(n => {\n          n.Duration = remainingValue;\n          n.Tied = true;\n          n.SetTiedStartEnd(tiedStart, tiedEnd);\n          let nextBeat = div.Beat + remainingValue * msr.TimeSignature.bottom;\n          tiedNoteValues.forEach((dur: number, i: number) => {\n            const shouldTie = i < tiedNoteValues.length - 1;\n            const tiedNote: NoteProps = {\n              Beat: nextBeat,\n              Duration: dur,\n              Line: n.Line,\n              Rest: false,\n              Tied: true,\n              Staff: n.Staff,\n              Tuple: n.Tuple,\n              TupleDetails: n.TupleDetails,\n              Clef: GetNoteClefType(msr, div.Beat, div.Staff),\n            }\n            const noteObj = new Note(tiedNote);\n            noteObj.SetTiedStartEnd(tiedStart, tiedEnd);\n            msr.AddNote(noteObj, true);\n            nextBeat = nextBeat + dur * msr.TimeSignature.bottom;\n          });\n        });\n        msr.AddNote(new Note(newNoteProps), true);\n      }\n  });\n}\n\nfunction CreateTuplet(selNotes: Map<Measure, Note[]>, count: number): number {\n  let duration = 0;\n  for (let [ measure, notes ] of selNotes) {\n    notes.forEach((n: Note) => {\n      const tupleDuration = n.Duration;\n      const newDuration = n.Duration / count;\n      duration = newDuration;\n      let lastBeat = n.Beat;\n      n.Duration = newDuration;\n      n.Tuple = true;\n      const details: TupleDetails = {\n        StartBeat: n.Beat,\n        EndBeat: n.Beat + tupleDuration * measure.TimeSignature.bottom,\n        Value: tupleDuration,\n        Count: count\n      };\n      n.TupleDetails = details;\n      // add newly created tuplet notes\n      for (let i=1;i<count;i++) {\n        const newNote = new Note({\n          Beat: lastBeat + newDuration * measure.TimeSignature.bottom,\n          Duration: newDuration,\n          Line: n.Line,\n          Rest: true,\n          Tied: false,\n          Staff: n.Staff,\n          Tuple: true,\n          TupleDetails: details,\n          Clef: GetNoteClefType(measure, lastBeat + newDuration * measure.TimeSignature.bottom, n.Staff),\n        });\n        lastBeat = newNote.Beat;\n        measure.AddNote(newNote, true);\n      }\n    });\n  }\n  return duration;\n}\n\nfunction AllNotesByBeat(msr: Measure): Array<Note[]> {\n  const notes: Array<Note[]> = [];\n  notes.push([]);\n  let currentBeat = 1;\n  let nIndex = 0;\n  msr.Notes.sort((a: Note, b: Note) => {\n    return a.Beat - b.Beat;\n  });\n  msr.Notes.forEach((n: Note) => {\n    if (n.Beat === currentBeat) {\n      notes[nIndex].push(n);\n    } else {\n      notes.push([]);\n      nIndex++;\n      currentBeat = n.Beat;\n      notes[nIndex].push(n);\n    }\n  });\n  return notes;\n}\n\nexport { InputOnMeasure, UpdateNoteBounds, CreateTuplet, AddNoteOnMeasure }\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { UpdateNoteBounds } from \"../Workers/NoteInput.js\";\nimport { Camera } from \"./Camera.js\";\nimport { GetNoteClefType } from \"./Clef.js\";\nimport { StaffType } from \"./Instrument.js\";\nimport { Clef, Measure } from \"./Measure.js\";\nimport { Note, NoteProps } from \"./Note.js\";\nimport {\n  GetStaffHeight,\n  GetStaffHeightUntil,\n  GetStaffMiddleLine,\n} from \"./Staff.js\";\nimport { GetLargestValues } from \"./Values.js\";\n\ninterface Division {\n  Beat: number;\n  Duration: number;\n  Bounds: Bounds;\n  Staff: number;\n}\n\ninterface DivGroup {\n  Divisions: Division[];\n  Notes: Array<Note[]>;\n}\n\ninterface DivGroups {\n  DivGroups: DivGroup[];\n}\n\nconst DivisionMinWidth = 30;\nconst DivisionMaxWidth = 40;\n\nfunction CreateDivisions(\n  msr: Measure,\n  notes: Note[],\n  staff: number,\n  cam: Camera,\n): Division[] {\n  const divisions: Division[] = [];\n  let nextBeat = 0;\n  let runningValue = 0;\n\n  notes.sort((a: Note, b: Note) => {\n    return a.Beat - b.Beat;\n  });\n\n  if (notes.filter((n) => n.Staff === staff).length === 0) {\n    const restProps: NoteProps = {\n      Beat: 1,\n      Duration: 1,\n      Line: GetStaffMiddleLine(msr.Staves, staff),\n      Rest: true,\n      Tied: false,\n      Staff: staff,\n      Tuple: false,\n      Clef: staff === 0 ? \"treble\" : \"bass\",\n    };\n    // TODO: Clef should not be determined by staff that makes no sense\n    msr.AddNote(new Note(restProps));\n  }\n  notes\n    .filter((n) => n.Staff === staff)\n    .forEach((n) => {\n      if (\n        !divisions.find((div) => div.Beat === n.Beat && div.Staff === n.Staff)\n      ) {\n        divisions.push({\n          Beat: n.Beat,\n          Duration: n.Duration,\n          Bounds: CreateBeatBounds(msr, n.Beat, n.Duration, staff, cam),\n          Staff: staff,\n        });\n        if (!n.Tuple) {\n          nextBeat = n.Beat + n.Duration * msr.TimeSignature.bottom;\n        } else {\n          nextBeat =\n            n.Beat +\n            (n.Duration / n.TupleDetails.Count) * msr.TimeSignature.bottom;\n        }\n        runningValue += n.Duration;\n      }\n    });\n  if (runningValue > 0 && nextBeat - 1 < msr.TimeSignature.bottom) {\n    GenerateMissingBeatDivisions(msr, divisions, staff);\n  }\n  GenerateMissingBeatDivisions(msr, divisions, staff);\n  UpdateNoteBounds(msr, staff);\n  return divisions;\n}\n\nfunction CreateBeatBounds(\n  msr: Measure,\n  beat: number,\n  duration: number,\n  staff: number,\n  cam: Camera,\n): Bounds {\n  // single height\n  const width = msr.Bounds.width * duration; // value will max at 1 (entire measure)\n  const height = GetStaffHeight(msr.Staves, staff);\n  const x =\n    msr.Bounds.x +\n    msr.XOffset +\n    ((beat - 1) / msr.TimeSignature.bottom) * msr.Bounds.width;\n  const y = msr.Bounds.y + GetStaffHeightUntil(msr.Staves, staff);\n  return new Bounds(x, y, width, height);\n}\n\nfunction PositionDivByBeat(msr: Measure, divisions: Division[]): void {\n  const s0divs = divisions.filter((d) => d.Staff === 0);\n  const s1divs = divisions.filter((d) => d.Staff === 1);\n  if (s1divs.length > s0divs.length) {\n    divisions.forEach((div: Division) => {\n      div.Bounds.x = 0;\n    });\n  } else {\n  }\n}\n\nfunction ResizeDivisions(\n  msr: Measure,\n  divisions: Division[],\n  staff: number,\n): void {\n  const divs = divisions.filter((d) => d.Staff === staff);\n  const s0divs = divisions.filter((d) => d.Staff === 0);\n  const s1divs = divisions.filter((d) => d.Staff === 1);\n  let divCount = s1divs.length > s0divs.length ? s1divs.length : s0divs.length;\n  const minWidth = DivisionMinWidth * divCount;\n  const space = msr.Bounds.width - minWidth;\n  const xBuffer = space / divCount;\n  divs.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n  divs.forEach((div: Division, i: number) => {\n    //    if (div.Bounds.width < DivisionMinWidth || div.Duration < 0.25) {\n    //      div.Bounds.width = DivisionMinWidth + xBuffer;\n    //    }\n    //    if (div.Bounds.width > DivisionMaxWidth || div.Duration >= 0.25) {\n    //      div.Bounds.width = DivisionMinWidth + xBuffer;\n    //    }\n    div.Bounds.width = div.Duration * msr.Bounds.width;\n    if (i > 0) {\n      const lastDivEnd = divs[i - 1].Bounds.x + divs[i - 1].Bounds.width;\n      if (lastDivEnd !== div.Bounds.x) {\n        div.Bounds.x = lastDivEnd;\n      }\n    }\n\n    if (i === 0 && divs.length === 1) {\n      div.Bounds.width = msr.Bounds.width;\n    }\n  });\n}\n\nfunction GenerateMissingBeatDivisions(\n  msr: Measure,\n  divisions: Division[],\n  staff: number,\n): void {\n  const sortedDivs = divisions.sort((divA: Division, divB: Division) => {\n    return divA.Beat - divB.Beat;\n  });\n  let startingBeat = 1; // always start at the beginning\n  const divisionsToAdd: Division[] = [];\n  sortedDivs\n    .filter((d) => d.Staff === staff)\n    .forEach((div: Division, i: number) => {\n      const notesOnDiv = msr.Notes.filter((n) => n.Beat === div.Beat);\n      if (div.Beat === startingBeat) {\n        // there is a div for this beat, set the startingBeat to the next\n        // expected division\n        startingBeat = div.Beat + div.Duration * msr.TimeSignature.bottom;\n        if (notesOnDiv[0].Tuple) {\n          // TODO: This is not finished, currently skipping tuplet divisions\n          // But there may be cases where we need to generate missiong divisions\n          // within a tuplet group (maybe), and this will need to be revisited\n          startingBeat = notesOnDiv[0].TupleDetails.EndBeat;\n        }\n      } else if (div.Beat >= startingBeat) {\n        let val = (div.Beat - startingBeat) / msr.TimeSignature.bottom;\n        let newDivs = GetLargestValues(val);\n        let sBeat = startingBeat;\n        newDivs.sort();\n        newDivs.forEach((v) => {\n          divisionsToAdd.push({\n            Beat: sBeat,\n            Duration: v,\n            Bounds: CreateBeatBounds(msr, sBeat, v, div.Staff, msr.Camera),\n            Staff: div.Staff,\n          });\n          sBeat += v * msr.TimeSignature.bottom;\n        });\n        startingBeat = div.Beat + div.Duration * msr.TimeSignature.bottom;\n      }\n    });\n\n  // Add divisions created above and then empty\n  divisions.push(...divisionsToAdd);\n  // add RESTS to division gaps\n  divisionsToAdd.forEach((div) => {\n    const notesOnBeat = msr.Notes.find((n) => n.Beat === div.Beat);\n    if (notesOnBeat !== undefined) {\n      console.error(\"Note found in division gap\");\n    }\n    const clefType = GetNoteClefType(msr, div.Beat, staff);\n    const restProps: NoteProps = {\n      Beat: div.Beat,\n      Duration: div.Duration,\n      Line: GetStaffMiddleLine(msr.Staves, staff),\n      Rest: true,\n      Tied: false,\n      Staff: div.Staff,\n      Tuple: false,\n      Clef: clefType,\n    };\n    msr.AddNote(new Note(restProps));\n  });\n\n  // check remaining measure for empty divisions\n  const msrDuration =\n    (msr.TimeSignature.top / msr.TimeSignature.bottom) *\n      msr.TimeSignature.bottom +\n    1;\n  let reSortedDivs = divisions.filter((div) => div.Staff === staff);\n  reSortedDivs = divisions.sort((divA: Division, divB: Division) => {\n    return divA.Beat - divB.Beat;\n  });\n  const lastDiv = reSortedDivs[reSortedDivs.length - 1];\n  const lastBeat = lastDiv.Beat + lastDiv.Duration * msr.TimeSignature.bottom;\n\n  const lastDivisionsToAdd = [];\n  const rem = msrDuration - lastBeat;\n  if (rem > 0) {\n    let val = rem / msr.TimeSignature.bottom;\n    let newDivs = GetLargestValues(val);\n    let sBeat = lastBeat;\n    newDivs.sort();\n    newDivs.forEach((v) => {\n      lastDivisionsToAdd.push({\n        Beat: sBeat,\n        Duration: v,\n        Bounds: CreateBeatBounds(msr, sBeat, v, lastDiv.Staff, msr.Camera),\n        Staff: staff,\n      });\n      sBeat += v * msr.TimeSignature.bottom;\n    });\n  }\n  divisions.push(...lastDivisionsToAdd);\n  lastDivisionsToAdd.forEach((div) => {\n    const notesOnBeat = msr.Notes.find(\n      (n) => n.Beat === div.Beat && n.Staff === div.Staff,\n    );\n    if (notesOnBeat !== undefined) {\n      console.error(\"Note found in division gap\");\n    }\n\n    const clefType = GetNoteClefType(msr, div.Beat, staff);\n    const restProps: NoteProps = {\n      Beat: div.Beat,\n      Duration: div.Duration,\n      Line: GetStaffMiddleLine(msr.Staves, staff),\n      Rest: true,\n      Tied: false,\n      Staff: div.Staff,\n      Tuple: false,\n      Clef: clefType,\n    };\n    msr.AddNote(new Note(restProps));\n  });\n}\n\nfunction GetDivisionTotalWidth(divisions: Division[]): number {\n  let width = 0;\n  let staff0w = 0;\n  let staff1w = 0;\n  divisions\n    .filter((d) => d.Staff === 0)\n    .forEach((div) => {\n      staff0w += div.Bounds.width;\n    });\n  divisions\n    .filter((d) => d.Staff === 1)\n    .forEach((div) => {\n      staff1w += div.Bounds.width;\n    });\n\n  width = staff0w > staff1w ? staff0w : staff1w;\n\n  return width;\n}\n\nfunction GetDivisionGroups(msr: Measure, staff: number): DivGroups {\n  const divGroups: DivGroups = { DivGroups: [] };\n  let divs: Division[] = [];\n  let notes: Array<Note[]> = [];\n  // started creating a div group or not\n  let startFlag = false;\n\n  const mDivs = msr.Divisions.filter((d) => d.Staff === staff).sort(\n    (a: Division, b: Division) => {\n      return a.Beat - b.Beat;\n    },\n  );\n\n  mDivs.forEach((div: Division, i: number) => {\n    const divNotes = msr.Notes.filter(\n      (n) => n.Beat === div.Beat && n.Staff === staff,\n    );\n    divNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n\n    const restBeat = IsRestOnBeat(div.Beat, divNotes, staff);\n\n    // this can definitely be cleaned up but it seems to\n    // work for now, add tests later and then refactor\n    if (restBeat && startFlag) {\n      divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n      divs = [];\n      notes = [];\n      startFlag = false;\n    } else if (!restBeat) {\n      if (!startFlag) {\n        divs.push(div);\n        notes.push(divNotes);\n        if (div.Duration > 0.125) {\n          divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n          divs = [];\n          notes = [];\n        } else {\n          startFlag = true;\n          if (i === msr.Divisions.filter((d) => d.Staff === staff).length - 1) {\n            // end of measure\n            divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n            divs = [];\n            notes = [];\n          }\n        }\n      } else {\n        if (div.Duration > 0.125) {\n          startFlag = false;\n          divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n          divs = [];\n          notes = [];\n\n          divs.push(div);\n          notes.push(divNotes);\n          divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n          divs = [];\n          notes = [];\n        } else {\n          // breakpoint check TODO: Actually implement this is prototype code\n          if (div.Beat === 3) {\n            divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n            divs = [];\n            notes = [];\n          }\n          divs.push(div);\n          notes.push(divNotes);\n          if (i === msr.Divisions.filter((d) => d.Staff === staff).length - 1) {\n            divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n            divs = [];\n            notes = [];\n          }\n        }\n      }\n    }\n  });\n  return divGroups;\n}\n\nfunction IsRestOnBeat(beat: number, notes: Note[], staff: number): boolean {\n  const notesOnBeat = notes.filter((n) => n.Beat === beat && n.Staff === staff);\n  const restFound = notesOnBeat.find((n) => n.Rest);\n  if (restFound && notesOnBeat.length > 1) {\n    console.error(\"Rest found on beat with multiple notes, beat: \", beat);\n  }\n  return restFound !== undefined;\n}\n\nexport {\n  Division,\n  CreateDivisions,\n  ResizeDivisions,\n  GetDivisionTotalWidth,\n  DivGroups,\n  DivGroup,\n  IsRestOnBeat,\n  GetDivisionGroups,\n  DivisionMinWidth,\n  DivisionMaxWidth,\n};\n","import { Beam } from \"../Core/Beam.js\";\nimport { DivGroup } from \"../Core/Division.js\";\nimport { Measure } from \"../Core/Measure.js\";\nimport { Stem } from \"../Core/Stem.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\n\nfunction CreateBeams(divGroup: DivGroup, stems: Stem[], measure: Measure): Beam[] {\n  let beams: Beam[] = [];\n  stems.sort((a: Stem, b: Stem) => a.Bounds.x - b.Bounds.x);\n  \n  // TODO: We will need to revisit this to fully implement beams, doing first\n  // pass now.\n  // beam 1\n  const beamOne = new Beam(\n    new Bounds(stems[0].Bounds.x, stems[0].Bounds.y + stems[0].Bounds.height, 5, 5),\n    { x: stems[0].Bounds.x, y: stems[0].Bounds.y + stems[0].Bounds.height },\n    { x: stems[stems.length-1].Bounds.x, y: stems[stems.length-1].Bounds.y + stems[stems.length-1].Bounds.height }\n  )\n  beams.push(beamOne);\n\n  return beams;\n}\n\nexport { CreateBeams }\n","import { Note } from '../Core/Note.js';\n\nconst ACC_OFFSET = 12;\n\n// TODO: Pass in measure/key signature to determine if\n// the notes need to display accidentals\n// This will solve for accidental === 0\nfunction ReturnAccidentalOffset(notes: Note[]): number[] {\n  let offset = [];\n  const nA = notes.filter(n => n.Accidental !== 0);\n  nA.sort((a: Note, b: Note) => {\n    return a.Line - b.Line;\n  });\n  switch (nA.length) {\n    case 0:\n      return [];\n    case 1:\n      return [ACC_OFFSET];\n    case 2:\n      return [ACC_OFFSET, ACC_OFFSET * 2];\n    default:\n      let lineDiff = Math.abs(nA[0].Line - nA[nA.length-1].Line);\n      if (lineDiff > 4) {\n        // TODO: Fix mirror offset bug\n        // At this point, mirroring is bugged. Setting everything to cascade\n//        offset = MirrorOffset(nA);\n        offset = CascadingOffset(nA);\n      } else {\n        offset = CascadingOffset(nA);\n      }\n  }\n  return offset;\n}\n\nfunction MirrorOffset(notes: Note[]): number[] {\n  let offset: number[] = [];\n  notes.forEach((_: Note, i: number) => {\n    if (i === 0 || i === notes.length-1) {\n      offset.push(ACC_OFFSET);\n    } else {\n      offset.push(ACC_OFFSET * i);\n    }\n  });\n  return offset;\n}\n\nfunction CascadingOffset(notes: Note[]): number[] {\n  let offset: number[] = [];\n  notes.forEach((_: Note, i: number) => {\n    if (i === 0) {\n      offset.push(ACC_OFFSET);\n    } else {\n      offset.push((notes.length + 1 - i) * ACC_OFFSET);\n    }\n  });\n  return offset;\n}\n\nexport { ReturnAccidentalOffset }\n","import { Note } from \"../Core/Note.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { RenderSymbol, StdAccidentals } from \"./MusicFont.Renderer.js\";\n\nconst sharpPath = 'm0 0 0-5.6448 2.4-.6624 0 5.616-2.4.6912zm4.7256-1.3656-1.65.4728 0-5.616 1.65-.4608 0-2.3328-1.65.4608 0-5.7382-.6756 0 0 5.9122-2.4.69 0-5.5798-.6372 0 0 5.7922-1.65.462 0 2.3376 1.65-.4608 0 5.6052-1.65.4596 0 2.328 1.65-.4608 0 5.7058.6372 0 0-5.9098 2.4-.66 0 5.551.6756 0 0-5.7598 1.65-.462 0-2.3364z';\nconst doubleSharp = 'c-1.2495-.1955-2.5177-.1955-3.7791-.1938-.0272-.9231.1207-1.904-.2448-2.771-.2448-.5763-.7089-1.0302-1.1203-1.4977-.6579.5882-1.1985 1.3651-1.2512 2.2678-.051.6664-.0136 1.3345-.0255 2.0009-1.2614.0187-2.5347-.0425-3.7791.2057.2397-1.2376.1853-2.5024.2074-3.7553.9605-.0255 1.9873.1122 2.8798-.306.5253-.2465.9724-.6324 1.4178-.9996-.5814-.6579-1.3362-1.2376-2.2474-1.292-.6817-.0544-1.3668-.0153-2.0502-.0272-.0425-1.2444.102-2.5024-.1564-3.7315 1.2308.2227 2.4854.1649 3.7281.1819.0187.8857-.0799 1.8037.17 2.6554.1904.6511.7106 1.1526 1.1441 1.666.6137-.5338 1.1662-1.2036 1.2665-2.0417.0918-.7582.0187-1.5198.0612-2.2797 1.2529-.034 2.5432.1258 3.7553-.2703-.1802 1.2631-.1972 2.5466-.1836 3.8199-.8942.0255-1.8309-.0748-2.6809.2278-.646.2278-1.1543.7276-1.6677 1.1696.5576.5712 1.2291 1.0965 2.0587 1.1747.7616.0714 1.5266.0391 2.2899.0527.0187 1.2495-.0425 2.5109.2074 3.7434z';\nconst flatPath = 'c0 .805-.3018 1.576-1.1298 2.6109-.8772 1.0963-1.6156 1.7237-2.5886 2.4615l0-4.8049c.2212-.5586.5474-1.0108.98-1.358.4312-.3458.868-.5194 1.3104-.5194.7308 0 1.1942.4144 1.3944 1.2404.0224.0672.0336.1904.0336.3696zm-.105-3.36c-.6034 0-1.2166.1666-1.841.5012-.6244.3332-1.2152.7798-1.7724 1.3356l0-10.1804-.7882 0 0 17.4367c0 .4928.1344.7392.4032.7392.1554 0 .3485-.1302.637-.3024.8166-.4873 1.3257-.8131 1.8788-1.1567.6308-.392 1.3412-.8497 2.2806-1.7457.6482-.651 1.1172-1.3076 1.4084-1.9684.2898-.6622.4354-1.3174.4354-1.9684 0-.9632-.2562-1.6478-.7686-2.0524-.5796-.4256-1.2054-.6384-1.8732-.6384z';\nconst naturalPath = 'm0 0-.7875.2813 0-6.4406-4.5281 1.9688 0-16.7063.7594-.3375 0 6.5531 4.5563-2.0813 0 16.7625zm-.7875-9 0-4.5-3.7688 1.6594 0 4.5 3.7688-1.6594z';\n\nfunction RenderAccidental(\n    renderProps: RenderProperties,\n    note: Note,\n    type: number,\n    offset: number,\n    theme: Theme): void {\n  const { canvas, context, camera } = renderProps;\n  let posString = '';\n  let dflatString = ''; // posString for second flat\n  switch (type) {\n    case 0:\n      posString = `m ${note.Bounds.x + camera.x - 2} ${note.Bounds.y + camera.y + 16}`;\n      posString += naturalPath;\n      break;\n    case 1:\n      posString = `m ${note.Bounds.x + camera.x - 6} ${note.Bounds.y + camera.y + 8}`;\n      posString += sharpPath;\n      RenderSymbol(\n        renderProps,\n        StdAccidentals.Sharp,\n        note.Bounds.x - offset,\n        note.Bounds.y + 3,\n        theme,\n        note.Selected);\n      break;\n    case 2:\n      posString = `m ${note.Bounds.x + camera.x - 2} ${note.Bounds.y + camera.y + 10}`;\n      posString += doubleSharp;\n      break;\n    case -2:\n      dflatString = `m ${note.Bounds.x + camera.x - 15} ${note.Bounds.y + camera.y + 4}`;\n      dflatString += flatPath;\n    case -1:\n      posString = `m ${note.Bounds.x + camera.x - 5} ${note.Bounds.y + camera.y + 4}`;\n      posString += flatPath;\n      RenderSymbol(\n        renderProps,\n        StdAccidentals.Flat,\n        note.Bounds.x - offset,\n        note.Bounds.y + 3,\n        theme,\n        note.Selected);\n      break;\n    default:\n      break;\n  }\n  context.fillStyle = \"black\";\n//  context.fill(new Path2D(posString));\n//  if (type === -2) {\n//    context.fill(new Path2D(dflatString));\n//  }\n}\n\nexport { RenderAccidental, sharpPath, flatPath }\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { Camera } from \"./Camera.js\";\n\nconst KeySignatures: Map<string, string[]> = new Map<string, string[]>([\n  [\"CMaj/Amin\", []],\n\n  [\"GMaj/Emin\", [\"F#\"]],\n  [\"DMaj/Bmin\", [\"F#\", \"C#\"]],\n  [\"AMaj/F#min\", [\"F#\", \"C#\", \"G#\"]],\n  [\"EMaj/C#min\", [\"F#\", \"C#\", \"G#\", \"D#\"]],\n  [\"BMaj/G#min\", [\"F#\", \"C#\", \"G#\", \"D#\", \"A#\"]],\n  [\"F#Maj/D#min\", [\"F#\", \"C#\", \"G#\", \"D#\", \"A#\", \"E#\"]],\n  [\"C#Maj/A#min\", [\"F#\", \"C#\", \"G#\", \"D#\", \"A#\", \"E#\", \"B#\"]],\n\n  [\"FMaj/Dmin\", [\"Bb\"]],\n  [\"BbMaj/Gmin\", [\"Bb\", \"Eb\"]],\n  [\"EbMaj/Cmin\", [\"Bb\", \"Eb\", \"Ab\"]],\n  [\"AbMaj/Fmin\", [\"Bb\", \"Eb\", \"Ab\", \"Db\"]],\n  [\"DbMaj/Bbmin\", [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\"]],\n  [\"GbMaj/Ebmin\", [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\", \"Cb\"]],\n  [\"CbMaj/Abmin\", [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\", \"Cb\", \"Fb\"]],\n]);\n\ninterface KeySignature {\n  Name: string;\n  Accidentals: string[]\n}\n\nclass KeySig implements ISelectable {\n  ID: number;\n  Selected: boolean;\n  SelType: SelectableTypes = SelectableTypes.KeySig;\n  Bounds: Bounds;\n  Editable: boolean;\n  constructor() {\n    this.Bounds = new Bounds(0, 0, 0, 0);\n    this.Selected = false;\n    this.Editable = true;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n\n}\n\nexport { KeySignature, KeySignatures, KeySig }\n","import { KeySignatures } from \"../Core/KeySignatures.js\";\nimport { Measure } from \"../Core/Measure.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { flatPath, sharpPath } from \"./Accidentals.Renderer.js\";\n\ninterface keyProps {\n  Accidental: string;\n  Lines: number[];\n}\n\nfunction RenderKeySignature(\n  renderProps: RenderProperties,\n  msr: Measure,\n  keyString: string,\n  clefString: string,\n  xOff: number): void {\n    const { canvas, context, camera } = renderProps;\n    context.fillStyle = \"black\";\n    const keyProps = GetKeyProps(clefString, keyString);\n    let posString = '';\n    keyProps.Lines.forEach((l: number, i: number) => {\n      if (keyProps.Accidental === \"#\") {\n        posString = `m ${msr.Bounds.x + xOff + (i * 5) + camera.x + 5} \n          ${msr.Bounds.y + (l * 5) + camera.y + 4}`;\n        posString += sharpPath;\n      } else {\n        posString = `m ${msr.Bounds.x + xOff + (i * 5) + camera.x - 5} \n          ${msr.Bounds.y + (l * 5) + camera.y + 4}`;\n        posString += flatPath;\n      }\n      context.fill(new Path2D(posString));\n    });\n}\n\nfunction GetKeyProps(clefString: string, keyString: string): keyProps {\n  const props = { Accidental: \"\", Lines: [] };\n  const notes = KeySignatures.get(keyString);\n  let acc = \"\";\n  if (notes.length > 0) {\n    if (notes[0].includes('#')) {\n      acc = \"#\";\n    } else {\n      acc = \"b\";\n    }\n  }\n\n  props.Accidental = acc;\n  switch (clefString) {\n    case \"bass\":\n      break;\n    case \"treble\":\n      props.Lines = fromTreble(notes, acc);\n      break;\n    default:\n  }\n  return props;\n}\n\nfunction fromTreble(notes: string[], accidental: string): number[] {\n  let lines: number[] = [];\n  const sharpLines = [11, 14, 10, 13, 16, 12, 15];\n  const flatLines =  [15, 12, 16, 13, 17, 14, 18];\n  if (accidental === \"#\") {\n    lines = sharpLines.slice(0, notes.length);\n  } else {\n    lines = flatLines.slice(0, notes.length);\n  }\n  return lines;\n}\n\nexport { RenderKeySignature };\n\n\n","import { Division } from \"../Core/Division.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { BeamDirection, DetermineStemDirection, StemDirection } from \"./Note.Renderer.js\";\nimport { Note } from \"../Core/Note.js\";\nimport { Measure } from \"../Core/Measure.js\";\nimport { Theme } from \"../Types/Config.js\";\nimport { Stem } from \"../Core/Stem.js\";\nimport { Camera } from \"../Core/Camera.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { DetermineBeamDirection } from \"../Core/Beam.js\";\nimport { GetStaffActualMidLine, GetStaffHeightUntil, GetStaffMiddleLine } from \"../Core/Staff.js\";\nimport { CreateBeams } from \"../Factory/Beam.Fact.js\";\n\nfunction AlterHeightForBeam(\n  stemDir: StemDirection,\n  beamDir: BeamDirection,\n  height: number,\n  alterAmount: number): number {\n\n  if (stemDir === StemDirection.Up &&\n      beamDir === BeamDirection.UpMax ||\n      stemDir === StemDirection.Down &&\n      beamDir === BeamDirection.DownMax) {\n    height -= alterAmount; \n  } else if (stemDir === StemDirection.Down &&\n             beamDir === BeamDirection.UpMax ||\n             stemDir === StemDirection.Up &&\n             beamDir === BeamDirection.DownMax) {\n    height += alterAmount;\n  }\n  return height;\n}\n\nfunction StemToCenter(stemDir: StemDirection,\n                      lowestLine: number,\n                      highestLine: number,\n                      midLine: number): boolean {\n  const lineDist = 7;\n  if (stemDir === StemDirection.Up) {\n    return highestLine > 15 + lineDist;\n  } else {\n    return lowestLine < 15 - lineDist;\n  }\n}\n\n// Create Stem Objects (Separate from render, allow to be selectable)\nfunction CreateStems(\n  notes: Array<Note[]>,\n  divisions: Division[],\n  staff: number,\n  measure: Measure,\n  camera: Camera\n): Stem[] {\n  const stems: Stem[] = [];\n  let dynNoteXBuffer = 9;\n  const stemDir: StemDirection = DetermineStemDirection(\n    notes,\n    divisions,\n    staff,\n    measure\n  );\n\n  let highestLine: number = Number.MAX_SAFE_INTEGER;\n  let lowestLine: number = Number.MIN_SAFE_INTEGER;\n  let hNote: Note;\n  let lNote: Note;\n\n  notes.forEach((na: Note[]) => {\n    na.forEach((n: Note) => {\n      if (n.Line < highestLine) {\n        highestLine = n.Line;\n        hNote = n;\n      }\n      if (n.Line > lowestLine) {\n        lowestLine = n.Line;\n        lNote = n;\n      }\n    });\n  });\n\n  const staffMidLinePos = GetStaffHeightUntil(measure.Staves, staff) + (GetStaffMiddleLine(measure.Staves, staff) * 5);\n  const xBuffer = stemDir === StemDirection.Up ? 11.5 : 0.25;\n  const beamDir = DetermineBeamDirection(measure, { Divisions: divisions, Notes: notes }, stemDir);\n  const shouldBeam = divisions.length > 1 && divisions[0].Duration <= 0.25;\n\n  divisions.forEach((div: Division, i: number) => {\n    const beamAlt = i * (10 / divisions.length - 1);\n    const divNotes = notes[i];\n    const numOfAcc = divNotes.filter(n => n.Accidental !== 0).length;\n    if (numOfAcc > 0) {\n      dynNoteXBuffer += dynNoteXBuffer * numOfAcc - 1;\n    }\n    divNotes.sort((a: Note, b:Note) => a.Line - b.Line);\n    // TODO: Was alternating between 11 and 12 causing mismatch, may need to be\n    // adjusted later not sure.\n    const stemX = stemDir === StemDirection.Up ? \n      divNotes[0].Bounds.x + 11 : divNotes[0].Bounds.x;//Math.floor( div.Bounds.x + xBuffer + dynNoteXBuffer);\n    const stem: Stem = new Stem(new Bounds(stemX, 0, 1.5, 0));\n\n    if (stemDir === StemDirection.Up) {\n      stem.Bounds.y = divNotes[divNotes.length-1].Bounds.y + 2.5;\n      stem.Bounds.height = hNote.Bounds.y - divNotes[divNotes.length-1].Bounds.y - 35;\n    } else {\n      stem.Bounds.y = divNotes[0].Bounds.y + 2.5;\n      stem.Bounds.height = lNote.Bounds.y - divNotes[0].Bounds.y + 35;\n    }\n\n    const diff = measure.Staves[staff].TopLine < 0 ? \n      Math.abs(measure.Staves[staff].TopLine) : measure.Staves[staff].TopLine;\n    const staffRelativeMid = GetStaffActualMidLine(measure.Staves, staff) + diff;\n    if (StemToCenter(stemDir, lowestLine, highestLine, staffRelativeMid)) {\n      stem.Bounds.height = staffMidLinePos - stem.Bounds.y + measure.Bounds.y;\n    }\n    if (shouldBeam) {\n      stem.Bounds.height = AlterHeightForBeam(stemDir, beamDir, stem.Bounds.height, beamAlt);\n    }\n    stems.push(stem);\n  });\n  return stems;\n}\n\n// v3 of this bloody function\nfunction RenderStem(\n  renderProps: RenderProperties,\n  notes: Array<Note[]>,\n  divisions: Division[],\n  staff: number,\n  msr: Measure,\n  beamDir: BeamDirection,\n  theme: Theme,\n) {\n  const { canvas, context, camera } = renderProps;\n  let dynNoteXBuffer = 9;\n\n  const stemDir: StemDirection = DetermineStemDirection(\n    notes,\n    divisions,\n    staff,\n    msr);\n\n  const xBuffer = stemDir === StemDirection.Up ? 11.5 : 0.25;\n\n  divisions.forEach((div: Division, i: number) => {\n    const divNotes = notes[i];\n    divNotes.sort((a: Note, b: Note) => a.Line - b.Line );\n    let lowestNote: Note = divNotes[divNotes.length-1];\n    let highestNote: Note = divNotes[0];\n    const stemX = Math.floor(div.Bounds.x + xBuffer + camera.x + dynNoteXBuffer);\n  });\n}\n\nexport { CreateStems }\n","import { Beam, DetermineBeamDirection, GenerateBeams } from \"../Core/Beam.js\";\nimport {\n  DivGroup,\n  DivGroups,\n  GetDivisionGroups,\n  IsRestOnBeat,\n} from \"../Core/Division.js\";\n\nimport { StaffType } from \"../Core/Instrument.js\";\nimport { Clef, Division, Measure } from \"../Core/Measure.js\";\nimport { Note } from \"../Core/Note.js\";\nimport { RenderMeasureLines, RenderStaffLines, Staff } from \"../Core/Staff.js\";\nimport { CreateBeams } from \"../Factory/Beam.Fact.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { ReturnAccidentalOffset } from \"../Workers/Accidentaler.js\";\nimport { ConfigSettings, Theme } from \"../entry.js\";\nimport { RenderAccidental } from \"./Accidentals.Renderer.js\";\nimport { RenderTrebleClef } from \"./Elements/TrebleClef.js\";\nimport { RenderKeySignature } from \"./KeySignature.Renderer.js\";\nimport { Clefs, RenderSymbol, TimeSigNumbers } from \"./MusicFont.Renderer.js\";\nimport {\n  BeamDirection,\n  DetermineStemDirection,\n  RenderDots,\n  RenderNote,\n  RenderRest,\n  RenderStemRevise,\n  RenderTies,\n  RenderTuplets,\n  StemDirection,\n  renderLedgerLines,\n} from \"./Note.Renderer.js\";\nimport { CreateStems } from \"./Stem.Fact.js\";\n\nconst line_space = 10;\nconst line_width = 1;\nconst endsWidth = 2;\n\nconst debug = true;\nconst noteXBuffer = 9;\n\nfunction RenderMeasure(\n  measure: Measure,\n  renderProps: RenderProperties,\n  hovId: number,\n  mousePos: { x: number; y: number },\n  lastMeasure: boolean,\n  noteInput: boolean,\n  index: number,\n  restInput: boolean,\n  noteValue: number,\n  config: ConfigSettings,\n) {\n  //    if (hovId === measure.ID)\n  RenderHovered(\n    measure,\n    renderProps,\n    hovId,\n    mousePos,\n    noteInput,\n    restInput,\n    noteValue,\n    config.Theme,\n  );\n  //    if (debug)\n  // RenderDebug(measure, renderProps, index, mousePos);\n  RenderMeasureBase(measure, renderProps, mousePos, lastMeasure, config.Theme);\n  measure.Staves.forEach((s: Staff) => {\n    RenderNotes(measure, renderProps, s.Num, config.Theme);\n  });\n}\n\n// TODO: move this function elsewhere\nfunction MiddleLineBounds(measure: Measure): Bounds {\n  // Temporary\n  // This is really bad TODO: Remove this method\n  if (measure.Staves.length === 0) {\n    return new Bounds(0, 0, 0, 0);\n  }\n  let b = new Bounds(\n    measure.Bounds.x,\n    0,\n    measure.GetBoundsWithOffset().width,\n    5,\n  );\n  let actualLine = 15; // middle line number\n  const diff = actualLine - measure.Staves[0].BotLine;\n  b.y = measure.Bounds.y + measure.GetMeasureHeight() + (diff * 5 - 2.5);\n  return b;\n}\n\nfunction RenderHovered(\n  measure: Measure,\n  renderProps: RenderProperties,\n  hovId: number,\n  mousePos: { x: number; y: number },\n  noteInput: boolean,\n  restInput: boolean,\n  noteValue: number,\n  theme: Theme,\n) {\n  const { canvas, context, camera } = renderProps;\n\n  if (noteInput) {\n    // context.fillStyle = \"rgb(0, 0, 255, 0.1)\";\n    // const lineY = measure.Bounds.y + (line.num * (line_space / 2) - (line_space / 4));\n    // context.fillRect(line.bounds.x + camera.x, lineY + camera.y, line.bounds.width, line.bounds.height);\n  }\n  // now we are going to test \"Sections\" as they were in v2\n  const divisions = measure.Divisions;\n  divisions.forEach((s) => {\n    if (s.Bounds.IsHovered(mousePos.x, mousePos.y, camera)) {\n      let line = measure.GetLineHovered(mousePos.y, s.Staff);\n      if (measure.Instrument.Staff === StaffType.Rhythm) {\n        line.num = 15;\n        line.bounds = MiddleLineBounds(measure);\n      }\n      // context.fillStyle=\"rgb(0, 0, 255, 0.1)\";\n      // context.fillRect(s.Bounds.x + camera.x,\n      //                  s.Bounds.y + camera.y,\n      //                  s.Bounds.width,\n      //                  s.Bounds.height);\n\n      if (noteInput) {\n        const noteY = measure.Bounds.y + line.num * (line_space / 2); // + (line_space / 2));\n        // temp note\n        const tempNoteProps = {\n          Beat: s.Beat,\n          Duration: noteValue,\n          Line: line.num,\n          Rest: restInput,\n          Tied: false,\n          Staff: s.Staff,\n          Tuple: false,\n          TupleIndex: 0,\n          TupleCount: 1,\n          Clef: \"treble\",\n        };\n        const tempNote = new Note(tempNoteProps);\n        if (!restInput) {\n          RenderNote(\n            tempNote,\n            renderProps,\n            new Bounds(s.Bounds.x + noteXBuffer, line.bounds.y, 0, 0),\n            true,\n            false,\n            StemDirection.Up,\n            theme,\n          );\n          // RenderStemRevise(\n          //   renderProps,\n          //   [[tempNote]],\n          //   [s],\n          //   s.Staff,\n          //   measure,\n          //   BeamDirection.Flat,\n          //   theme);\n\n          renderLedgerLines(\n            [tempNote],\n            s,\n            renderProps,\n            s.Staff,\n            measure,\n            theme,\n          );\n        } else {\n          RenderRest(\n            renderProps.context,\n            s,\n            renderProps.camera,\n            tempNote,\n            measure,\n            theme,\n          );\n        }\n      }\n    }\n  });\n}\n\n// Renders the basic lines and bar endings of the measure, no notes or clefs or time\n// time signatures\nfunction RenderMeasureBase(\n  msr: Measure,\n  renderProps: RenderProperties,\n  mousePos: { x: number; y: number },\n  lastMeasure: boolean,\n  theme: Theme,\n): void {\n  const { canvas, context, camera } = renderProps;\n\n  // prob move elsewhere I don't know\n  if (msr.Selected) {\n    context.fillStyle = theme.SelectColour;\n    context.fillRect(\n      msr.Bounds.x + camera.x,\n      msr.Bounds.y + camera.y,\n      msr.Bounds.width + msr.XOffset,\n      msr.Bounds.height,\n    );\n  }\n  context.fillStyle = theme.NoteElements;\n  RenderMeasureLines(renderProps, msr, lastMeasure, theme);\n  msr.Staves.forEach((s: Staff) => {\n    RenderStaffLines(renderProps, msr, s);\n  });\n\n  if (msr.RenderClef) {\n    RenderMeasureClef(renderProps, msr, theme);\n  }\n  if (msr.RenderKey) {\n    const key = \"CMaj/Amin\";\n    if (key !== \"CMaj/Amin\") {\n      const xOff = msr.RenderClef ? 24 : 4;\n      RenderKeySignature(renderProps, msr, \"CMaj/Amin\", \"treble\", xOff);\n    } else {\n      msr.RenderKey = false;\n      // This is a temporary fix for dev\n    }\n  }\n  if (msr.RenderTimeSig) {\n    const xOff = msr.RenderClef ? (msr.RenderKey ? 48 : 36) : 4;\n    RenderTimeSig(renderProps, msr, \"4\", \"4\", xOff, theme);\n  }\n}\n\n// TODO: Move this\nconst bassClef =\n  \"m0 0c0-1.276 1.012-2.288 2.288-2.288s2.288 1.012 2.288 2.288-1.012 2.288-2.288 2.288-2.288-1.012-2.288-2.288zm0-11c0-1.276 1.012-2.288 2.288-2.288s2.288 1.012 2.288 2.288-1.012 2.288-2.288 2.288-2.288-1.012-2.288-2.288zm-14.212-5.984c7.524 0 12.848 3.784 12.848 10.912 0 11.572-11.616 18.26-22.748 22.924-.088.088-.22.132-.352.132-.264 0-.484-.22-.484-.484 0-.132.044-.264.132-.352 8.932-5.192 18.26-11.66 18.26-21.736 0-5.324-2.816-10.428-7.656-10.428-3.476 0-6.072 2.508-7.216 5.852.616-.352 1.232-.572 1.892-.572 2.42 0 4.4 1.98 4.4 4.4 0 2.552-1.936 4.708-4.4 4.708-2.64 0-4.928-2.112-4.928-4.708 0-5.808 4.532-10.648 10.252-10.648z\";\nconst bassClefSmall =\n  \"m0 0c0-1.0208.8096-1.8304 1.8304-1.8304s1.8304.8096 1.8304 1.8304-.8096 1.8304-1.8304 1.8304-1.8304-.8096-1.8304-1.8304zm0-8.8c0-1.0208.8096-1.8304 1.8304-1.8304s1.8304.8096 1.8304 1.8304-.8096 1.8304-1.8304 1.8304-1.8304-.8096-1.8304-1.8304zm-11.3696-4.7872c6.0192 0 10.2784 3.0272 10.2784 8.7296 0 9.2576-9.2928 14.608-18.1984 18.3392-.0704.0704-.176.1056-.2816.1056-.2112 0-.3872-.176-.3872-.3872 0-.1056.0352-.2112.1056-.2816 7.1456-4.1536 14.608-9.328 14.608-17.3888 0-4.2592-2.2528-8.3424-6.1248-8.3424-2.7808 0-4.8576 2.0064-5.7728 4.6816.4928-.2816.9856-.4576 1.5136-.4576 1.936 0 3.52 1.584 3.52 3.52 0 2.0416-1.5488 3.7664-3.52 3.7664-2.112 0-3.9424-1.6896-3.9424-3.7664 0-4.6464 3.6256-8.5184 8.2016-8.5184z\";\n\nfunction RenderMeasureClef(\n  renderProps: RenderProperties,\n  msr: Measure,\n  theme: Theme,\n): void {\n  // TODO: Rewrite clef rendering code\n\n  const { canvas, context, camera } = renderProps;\n\n  msr.Clefs.forEach((clef: Clef) => {\n    if (clef.Beat === 1) {\n      clef.render(renderProps, theme);\n    } else {\n      const div = msr.Divisions.find((d) => d.Beat === clef.Beat);\n      if (clef.Type === \"treble\") {\n        // const clefPath = RenderTrebleClef(\n        //     div.Bounds.x + camera.x,\n        //     msr.Bounds.y + camera.y + (5 * msrMidLine + (line_space * 2)));\n        //   context.fill(new Path2D(clefPath));\n      } else if (clef.Type === \"bass\") {\n      }\n    }\n  });\n}\n\nfunction RenderTimeSig(\n  renderProps: RenderProperties,\n  msr: Measure,\n  top: string,\n  bottom: string,\n  xOffset: number,\n  theme: Theme,\n): void {\n  msr.TimeSignature.render(renderProps, msr, theme);\n}\n\nfunction RenderNotes(\n  msr: Measure,\n  renderProps: RenderProperties,\n  staff: number,\n  theme: Theme,\n) {\n  const { canvas, context, camera } = renderProps;\n  const mDivs = msr.Divisions.filter((d) => d.Staff === staff);\n  mDivs.forEach((div: Division, i: number) => {\n    const divNotes = msr.Notes.filter(\n      (note: Note) => note.Beat === div.Beat && note.Staff === div.Staff,\n    );\n    divNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n\n    if (IsRestOnBeat(div.Beat, divNotes, div.Staff)) {\n      RenderRest(context, div, camera, divNotes[0], msr, theme);\n      return;\n    }\n    renderLedgerLines(msr.Notes, div, renderProps, staff, msr, theme);\n  });\n  const dGroups = GetDivisionGroups(msr, staff);\n  dGroups.DivGroups.forEach((group: DivGroup, i: number) => {\n    if (group.Divisions.length > 0) {\n      const stemDir = DetermineStemDirection(\n        group.Notes,\n        group.Divisions,\n        staff,\n        msr,\n      );\n      const beamAngle = DetermineBeamDirection(msr, group, stemDir);\n\n      //      const beam = GenerateBeams(msr, group, stemDir);\n      //      beam.Render(context, camera);\n      //RenderStemRevise(renderProps, group.Notes, group.Divisions, staff, msr, beamAngle, theme);\n      const stems = CreateStems(\n        group.Notes,\n        group.Divisions,\n        staff,\n        msr,\n        camera,\n      );\n      let beams: Beam[] = [];\n      if (group.Divisions.length > 1 && group.Divisions[0].Duration < 0.25) {\n        beams = CreateBeams(group, stems, msr);\n        beams.forEach((b) =>\n          b.Render(context, camera, 1, StemDirection.Up, theme),\n        );\n      }\n      stems.forEach((s) => s.Render(context, camera, theme));\n      group.Divisions.forEach((div) => {\n        let hasFlipped = false;\n\n        const dN = msr.Notes.filter(\n          (note: Note) => note.Beat === div.Beat && note.Staff === staff,\n        );\n        dN.sort((a: Note, b: Note) => {\n          return a.Line - b.Line;\n        });\n\n        dN.forEach((n: Note, i: number) => {\n          const isFlipped = IsFlippedNote(dN, i, stemDir);\n          if (isFlipped) {\n            hasFlipped = true;\n          }\n          let flipNoteOffset = isFlipped\n            ? stemDir === StemDirection.Up\n              ? 11\n              : -11\n            : 0;\n\n          if (n.Rest) {\n            RenderRest(context, div, camera, n, msr, theme);\n          } else {\n            RenderNote(\n              n,\n              renderProps,\n              n.Bounds,\n              n.Selected,\n              isFlipped,\n              stemDir,\n              theme,\n            );\n\n            const accNotes = dN.filter((n) => n.Accidental !== 0);\n            accNotes.sort((a: Note, b: Note) => {\n              return a.Line - b.Line;\n            });\n            const offsets = ReturnAccidentalOffset(accNotes);\n            accNotes.forEach((n: Note, i: number) => {\n              RenderAccidental(renderProps, n, n.Accidental, offsets[i], theme);\n            });\n          }\n        });\n        // render dots\n        dN.forEach((n: Note) => {\n          let flipNoteOffset = hasFlipped\n            ? stemDir === StemDirection.Up\n              ? 11\n              : 0\n            : 0;\n          RenderDots(\n            renderProps,\n            n,\n            div.Bounds.x + noteXBuffer + flipNoteOffset,\n          );\n        });\n      });\n    }\n  });\n  RenderTies(renderProps, msr.Divisions, msr.Notes, StaffType.Single, msr);\n  RenderTuplets(\n    renderProps,\n    msr.Divisions,\n    msr.Notes,\n    StaffType.Single,\n    msr,\n    theme,\n  );\n\n  if (msr.Instrument.Staff === StaffType.Grand) {\n    RenderTies(renderProps, msr.Divisions, msr.Notes, StaffType.Grand, msr);\n    RenderTuplets(\n      renderProps,\n      msr.Divisions,\n      msr.Notes,\n      StaffType.Grand,\n      msr,\n      theme,\n    );\n  }\n}\n\nfunction IsFlippedNote(\n  notes: Note[],\n  index: number,\n  dir: StemDirection,\n): boolean {\n  let flipped = false;\n  let countAbove = 0;\n  let countBelow = 0;\n  const nLine = notes[index].Line;\n  if (notes.length <= 1) {\n    return flipped;\n  }\n\n  for (let b = index + 1; b <= notes.length - 1; b++) {\n    const line = notes[b].Line;\n    if (line - nLine === b - index || line - nLine === index - index) {\n      countBelow++;\n    } else {\n      break;\n    }\n  }\n\n  for (let a = index - 1; a >= 0; a--) {\n    const line = notes[a].Line;\n    if (nLine - line === index - a || nLine - line === index - index) {\n      countAbove++;\n    } else {\n      break;\n    }\n  }\n\n  const totalCount = countAbove + countBelow + 1;\n  const notePos = countAbove + 1;\n  if (totalCount % 2 === 0) {\n    flipped = dir === StemDirection.Up ? notePos % 2 !== 0 : notePos % 2 === 0;\n  } else {\n    flipped = notePos % 2 === 0;\n  }\n\n  return flipped;\n}\n\ninterface NoteGroup {\n  startBeat: number;\n  endBeat: number;\n}\n\nfunction GetNoteGroups(msr: Measure): NoteGroup[] {\n  let startBeat = -1;\n  let endBeat = -1;\n  const noteGroups = [];\n\n  return noteGroups;\n}\n\nexport { RenderMeasure, IsFlippedNote };\n","import { Camera } from '../Core/Camera.js';\nimport { Measure } from '../Core/Measure.js';\nimport { Page } from '../Core/Page.js';\nimport { ConfigSettings } from '../Types/Config.js';\nfunction RenderPage(\n  page: Page,\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  cam: Camera,\n  formatting: boolean,\n  config: ConfigSettings,\n  measures: Measure[]): void {\n    const scale = 6;\n    // TODO: Change these variable names\n    let a4w = page.Bounds.width;//210 * scale;\n    let a4h = page.Bounds.height;//297 * scale;\n    const x = page.Bounds.x;\n    const y = page.Bounds.y;\n\n    if (config.PageSettings?.AutoSize) {\n      a4h = measures[measures.length-1].Bounds.y + measures[measures.length-1].GetMeasureHeight() + 40;\n      if (measures.length < 4) {\n        a4w = measures[measures.length-1].Bounds.x + measures[measures.length-1].GetBoundsWithOffset().width + 40;\n      }\n    }\n\n//    context.save();\n\n //   context.setTransform(1, 0, 0, 1, 0, 0);\n    context.filter = \"blur(4px)\";\n//    context.fillStyle = \"rgb(71, 71, 71)\";\n    context.fillStyle = config.Theme.PageShadowColour;// \"#0e1114\";\n    context.fillRect(x + cam.x - 4, y + cam.y + 4, a4w, a4h);\n    context.filter = \"none\";\n\n    context.fillStyle = config.Theme.PageColour;;\n    context.fillRect(x + cam.x, y + cam.y, a4w, a4h);\n\n    if (formatting) {\n    context.strokeStyle = \"rgba(51, 2, 16, 0.2)\";\n\n    // Render Margin Lines\n    // Left\n    context.beginPath();\n    context.setLineDash([10, 10]);\n    context.moveTo(x + page.Margins.left + cam.x, y + cam.y);\n    context.lineTo(x + page.Margins.left + cam.x, y + a4h + cam.y);\n    context.stroke();\n\n    // Right\n    context.beginPath();\n    context.setLineDash([10, 10]);\n    context.moveTo(x + a4w - page.Margins.right + cam.x, y + cam.y);\n    context.lineTo(x + a4w - page.Margins.right + cam.x, y + a4h + cam.y);\n    context.stroke();\n\n    // Top\n    context.beginPath();\n    context.setLineDash([10, 10]);\n    context.moveTo(x + cam.x, y + page.Margins.top + cam.y);\n    context.lineTo(x + a4w + cam.x, y + page.Margins.top + cam.y);\n    context.stroke();\n\n    // Bottom\n    context.beginPath();\n    context.setLineDash([10, 10]);\n    context.moveTo(x + cam.x, y + a4h - page.Margins.bottom + cam.y);\n    context.lineTo(x + a4w + cam.x, y + a4h - page.Margins.bottom + cam.y);\n    context.stroke();\n\n    // Reset stroke style\n    context.strokeStyle = \"black\";\n    const adjusterColour = \"rgba(51, 2, 16, 0.8)\";\n    const lineColour = \"rgba(2,51,16,0.8)\";\n\n    RenderAdjuster(x + page.Margins.right + cam.x, y + cam.y, \"down\", adjusterColour, context);\n    RenderAdjuster(x + a4w - page.Margins.left + cam.x, y + cam.y, \"down\", adjusterColour, context);\n\n    RenderAdjuster(x + cam.x, y + page.Margins.top + cam.y, \"right\", adjusterColour, context);\n    RenderAdjuster(x + a4w + cam.x, y + page.Margins.top + cam.y, \"left\", adjusterColour, context);\n\n    RenderAdjuster(x + cam.x, y + a4h - page.Margins.bottom + cam.y, \"right\", adjusterColour, context);\n    RenderAdjuster(x + a4w + cam.x, y + a4h - page.Margins.bottom + cam.y, \"left\", adjusterColour, context);\n\n    // Render Lines\n    page.PageLines.forEach(line => {\n      RenderAdjuster(x + cam.x - 25, y + line.LineBounds.y + cam.y + 12.5, \"right\", lineColour, context);\n      context.strokeStyle = lineColour;\n      context.beginPath();\n      context.setLineDash([10, 10]);\n      context.moveTo(x + cam.x, y + line.LineBounds.y + 12.5 + cam.y);\n      context.lineTo(x + a4w + cam.x, y + line.LineBounds.y + 12.5 + cam.y);\n      context.stroke();\n    });\n\n    // Render bounds\n    context.strokeRect(page.MarginAdj[0].Bounds.x + cam.x, page.MarginAdj[0].Bounds.y + cam.y,\n                       page.MarginAdj[0].Bounds.width, page.MarginAdj[0].Bounds.height);\n    context.stroke();\n    \n    }\n//    context.restore();\n  }\n\nfunction RenderAdjuster(x: number,\n                        y: number,\n                        dir: string,\n                        colour: string,\n                        context: CanvasRenderingContext2D): void {\n  const size = 9;\n  const buffer = 8;\n  const scale = 1.7;\n  context.fillStyle = colour;\n  context.beginPath();\n  // TODO: This is a little bit heeeinous\n  switch (dir) {\n    case \"down\":\n      context.moveTo(x, y - buffer);\n      context.lineTo(x - size, y - buffer - size * scale);\n      context.lineTo(x + size, y - buffer - size * scale);\n      break;\n    case \"right\":\n      context.moveTo(x - buffer, y);\n      context.lineTo(x - buffer - size * scale, y - size);\n      context.lineTo(x - buffer - size * scale, y + size);\n      break;\n    case \"left\":\n      context.moveTo(x + buffer, y);\n      context.lineTo(x + buffer + size * scale, y - size);\n      context.lineTo(x + buffer + size * scale, y + size);\n      break;\n    case \"up\":\n      context.moveTo(x, y + buffer);\n      context.lineTo(x - size, y + buffer + size * scale);\n      context.lineTo(x + size, y + buffer + size * scale);\n      break;\n    default:\n  }\n  context.fill();\n}\n\nexport { RenderPage }\n","import { RenderPanel } from \"../Renderers/Debug.Renderer.js\";\nimport { RenderMeasure } from \"../Renderers/Measure.Renderer.js\";\nimport { RenderPage } from \"../Renderers/Page.Renderer.js\";\nimport { ConfigSettings } from \"../Types/Config.js\";\nimport { Selector } from \"../Workers/Selector.js\";\nimport { Camera } from \"./Camera.js\";\nimport { Measure } from \"./Measure.js\";\nimport { Page } from \"./Page.js\";\nimport { Sheet } from \"./Sheet.js\";\n\nconst renderDebug = false;\nconst scaleV = 1;\n\nconst Renderer = (\n  c: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  measures: Measure[],\n  pages: Page[],\n  hovElements: { MeasureID: number },\n  mousePos: { x: number; y: number },\n  cam: Camera,\n  noteInput: boolean,\n  restInput: boolean,\n  formatting: boolean,\n  config: ConfigSettings,\n  noteValue: number,\n) => {\n  // reset\n  ctx.fillStyle = config.Theme.BackgroundColour; //\"grey\";252c38 16191f\n\n  ctx.save();\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.clearRect(0, 0, c.width, c.height);\n  if (config.PageSettings?.RenderBackground) {\n    ctx.fillRect(0, 0, c.width, c.height);\n  }\n  ctx.restore();\n  if (config.PageSettings?.RenderPage) {\n    pages.forEach((page) => {\n      RenderPage(page, c, ctx, cam, formatting, config, measures);\n    });\n  }\n  ctx.fillStyle = config.Theme.NoteElements;\n\n  measures.forEach((m: Measure, i: number) => {\n    const renderProps = {\n      canvas: c,\n      context: ctx,\n      camera: cam,\n    };\n    const lastMeasure =\n      i ===\n      measures.filter((msr: Measure) => m.Instrument === msr.Instrument)\n        .length -\n        1;\n\n    RenderMeasure(\n      m,\n      renderProps,\n      hovElements.MeasureID,\n      mousePos,\n      lastMeasure,\n      noteInput,\n      i,\n      restInput,\n      noteValue,\n      config,\n    );\n  });\n};\n\nconst RenderDebug = (\n  c: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  sheet: Sheet,\n  mousePos: { x: number; y: number },\n  cam: Camera,\n  selector: Selector,\n): void => {\n  const renderProps = {\n    canvas: c,\n    context: ctx,\n    camera: cam,\n  };\n  //                 RenderPanel(renderProps);\n};\n\nexport { Renderer, RenderDebug };\n","enum MessageType {\n  None,\n  Selection,\n  Deletion,\n  InputChange,\n  AddNote,\n}\ntype MessageData = {\n  MessageType: MessageType;\n  Message: { msg: string, obj: any };\n}\ninterface Message {\n  messageString: string;\n  messageData: MessageData;\n}\n\nfunction ClearMessage(): Message {\n  return {\n    messageString: \"\",\n    messageData: {\n      MessageType: MessageType.None,\n      Message: { msg: \"\", obj: {} }\n    }\n  }\n}\n\nexport { Message, ClearMessage, MessageType }\n","import { RenderSymbol, TimeSigNumbers } from \"../Renderers/MusicFont.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\nimport { StaffType } from \"./Instrument.js\";\nimport { Measure } from \"./Measure.js\";\nimport { GetStaffMiddleLine, Staff } from \"./Staff.js\";\n//const Key: Map<string, string[]> = new Map<string, string[]>([\n//  [\"amin\", \"\"],\n//  [\"\n//])\n//\n\n// Returns beats that should separate note groupings etc.\nfunction ReturnBreakPoints(timeSig: { top: number, bottom: number }): number[] {\n  const bPoints: number[] = [];\n  const timeSigString = timeSig.top.toString() + \"/\" + timeSig.bottom.toString();\n  switch (timeSigString) {\n    case \"4/4\":\n    default:\n      bPoints.push(3);\n  }\n  return bPoints;\n}\n\nclass TimeSignature implements ISelectable {\n  ID: number;\n  Selected: boolean;\n  SelType: SelectableTypes;\n  Bounds: Bounds[];\n  Editable: boolean;\n  top: number;\n  bottom: number;\n\n  TopPosition: { x: number, y: number }[];\n  BotPosition: { x: number, y: number }[];\n\n  constructor(top: number, bottom: number, useSymbol: boolean = false) {\n    this.Selected = false;\n    this.SelType = SelectableTypes.TimeSig;\n    this.top = top;\n    this.bottom = bottom;\n    this.Editable = true;\n    this.TopPosition = [{ x: 0, y: 0 }];\n    this.BotPosition = [{ x: 0, y: 0 }];\n    this.Bounds = [new Bounds(0, 0, 0, 0)];\n    // use symbol? (bad name) for things like common and cut common\n  }\n\n  render(renderProps: RenderProperties, msr: Measure, theme: Theme): void {\n    let tGlyph: TimeSigNumbers = GetTimeSignatureGlyph(this.top);\n    let bGlyph: TimeSigNumbers = GetTimeSignatureGlyph(this.bottom);\n    msr.Staves.forEach(s => {\n//      if (this.TopPosition.length > msr.Staves.length || this.BotPosition.length >= msr.Staves.length) { return ;}\n      RenderSymbol( renderProps, tGlyph, this.TopPosition[s.Num].x, this.TopPosition[s.Num].y, theme, this.Selected);\n      RenderSymbol( renderProps, bGlyph, this.BotPosition[s.Num].x, this.BotPosition[s.Num].y, theme, this.Selected);\n    });\n  }\n\n  SetBounds(msr: Measure, staff: number): void {\n    // Delete and recreate, potential for optimisation later\n    this.Bounds = [];\n    this.TopPosition = [];\n    this.BotPosition = [];\n    //\n    msr.Staves.forEach((s: Staff) => {\n      // TODO: These probably shouldn't be recreated every single time \n      this.Bounds.push(new Bounds(0, 0, 0, 0));\n      this.TopPosition.push({x: 0, y: 0});\n      this.BotPosition.push({x: 0, y: 0});\n      //\n      const divY = msr.Divisions.find(div => div.Staff === s.Num).Bounds.y;\n      const msrMidLine = GetStaffMiddleLine(msr.Staves, s.Num);\n      this.Bounds[s.Num].x = msr.Bounds.x + msr.XOffset - 25;\n      this.Bounds[s.Num].y = divY + ((msrMidLine - 4) * 5);\n      this.Bounds[s.Num].width = 30;\n      this.Bounds[s.Num].height = 50;\n      this.TopPosition[s.Num].x = this.Bounds[s.Num].x;\n      this.TopPosition[s.Num].y = divY + ((msrMidLine - 2) * 5);\n      this.BotPosition[s.Num].x = this.Bounds[s.Num].x;\n      this.BotPosition[s.Num].y = divY + ((msrMidLine + 2) * 5);\n    });\n    }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.filter(b => b.IsHovered(x, y, cam)).length > 0;\n  }\n}\n\nfunction GetTimeSignatureGlyph(n: number): TimeSigNumbers {\n  let glyph: TimeSigNumbers;\n  switch (n) {\n    case 0:\n      glyph = TimeSigNumbers.Zero;\n      break;\n    case 1:\n      glyph = TimeSigNumbers.One;\n      break;\n   case 2:\n      glyph = TimeSigNumbers.Two;\n      break;\n   case 3:\n      glyph = TimeSigNumbers.Three;\n      break;\n   case 4:\n      glyph = TimeSigNumbers.Four;\n      break;\n   case 5:\n      glyph = TimeSigNumbers.Five;\n      break;\n  case 6:\n      glyph = TimeSigNumbers.Six;\n      break;\n  case 7:\n      glyph = TimeSigNumbers.Seven;\n      break;\n  case 8:\n      glyph = TimeSigNumbers.Eight;\n      break;\n  case 9:\n      glyph = TimeSigNumbers.Nine;\n      break;\n  }\n  return glyph;\n}\n\nfunction CreateTimeSignature(props: {top: number, bottom: number}): TimeSignature {\n  return new TimeSignature(props.top, props.bottom);\n}\n\nexport { TimeSignature, CreateTimeSignature }\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { Message, MessageType } from \"../Types/Message.js\";\nimport { UpdateNoteBounds } from \"../Workers/NoteInput.js\";\nimport { MeasureSettings } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\nimport { Clef, GetNoteClefType } from \"./Clef.js\";\nimport {\n  CreateDivisions,\n  type Division,\n  ResizeDivisions,\n  DivisionMinWidth,\n} from \"./Division.js\";\nimport { Instrument, StaffType } from \"./Instrument.js\";\nimport { Note, NoteProps } from \"./Note.js\";\nimport { Page } from \"./Page.js\";\nimport {\n  GetStaffActualMidLine,\n  GetStaffHeight,\n  GetStaffHeightUntil,\n  GetStaffMiddleLine,\n  Staff,\n} from \"./Staff.js\";\nimport { CreateTimeSignature, TimeSignature } from \"./TimeSignatures.js\";\n\ninterface MeasureProps {\n  Instrument: Instrument;\n  Bounds: Bounds;\n  TimeSignature: { top: number; bottom: number };\n  KeySignature: string;\n  Notes: Note[];\n  Staves: Staff[];\n  Clefs: Clef[];\n  RenderClef: boolean;\n  RenderTimeSig: boolean;\n  RenderKey: boolean;\n  Camera: Camera;\n  Page: Page;\n  Message: (msg: Message) => void;\n  Settings?: MeasureSettings;\n}\n\nclass Measure implements ISelectable {\n  ID: number;\n  Selected: boolean;\n  SelType: SelectableTypes;\n  Instrument: Instrument;\n  Bounds: Bounds;\n  Editable: boolean;\n  // TODO: Clefs should just be one array, each clef should have which staff they are\n  // on\n  Clefs: Clef[] = [];\n  TimeSignature: TimeSignature;\n  KeySignature: string;\n  Notes: Note[];\n  Divisions: Division[];\n  RenderClef: boolean;\n  RenderKey: boolean;\n  RenderTimeSig: boolean;\n  Camera: Camera;\n  Page: Page;\n  PageLine: Number;\n  Message: (msg: Message) => void;\n  Staves: Staff[];\n\n  XOffset: number; // not sure if this is what we want to go with\n\n  // Grouping of measures on a line/for formatting\n  Line: number;\n  RunningID: { count: number };\n\n  constructor(properties: MeasureProps, runningId: { count: number }) {\n    this.Staves = properties.Staves;\n    //    this.Staves.push(new Staff(1));\n    this.Message = properties.Message;\n    this.RunningID = runningId;\n    this.ID = 0;\n    this.Selected = false;\n    this.Editable = true;\n    this.SelType = SelectableTypes.Measure;\n    this.Instrument = properties.Instrument;\n    this.Line = 0;\n    this.Bounds = properties.Bounds;\n    // TODO: This is not where measure bounds will be set\n    this.Bounds.height = GetStaffHeightUntil(this.Staves);\n    //\n    this.TimeSignature = CreateTimeSignature(properties.TimeSignature);\n    this.KeySignature = properties.KeySignature;\n    this.Notes = properties.Notes;\n    this.Divisions = [];\n    this.RenderClef = properties.RenderClef;\n    if (this.Instrument.Staff === StaffType.Rhythm) {\n      this.RenderClef = false;\n    }\n    this.RenderKey = properties.RenderKey;\n    this.Camera = properties.Camera;\n    this.RenderTimeSig = properties.RenderTimeSig;\n    this.Page = properties.Page;\n    this.PageLine = properties.Page.PageLines[0].Number;\n\n    this.SetXOffset();\n\n    this.CreateDivisions(this.Camera);\n\n    this.Staves.forEach((s: Staff, i: number) => {\n      const clef = new Clef(0, properties.Clefs[i].Type, 1, s.Num);\n      clef.SetBounds(this, s.Num);\n      this.Clefs.push(clef);\n    });\n    this.TimeSignature.SetBounds(this, 0);\n    this.TimeSignature.SetBounds(this, 1);\n  }\n\n  // Gets line hovered relative to staff (15 will always be middle of staff for\n  // example)\n  GetLineHovered(y: number, staffNum: number): { num: number; bounds: Bounds } {\n    const cam = this.Camera;\n    const relYPos = y - this.Bounds.y - cam.y; //TODO: Dunno about scaling by zoom here\n    let line = Math.floor(relYPos / 5); // this should be a constant, line_height (defined somewhere)\n    let actualLine = line;\n    const bounds = new Bounds(\n      this.Bounds.x,\n      0,\n      this.Bounds.width + this.XOffset,\n      5,\n    );\n    const staff: Staff = this.Staves.find((s) => s.Num === staffNum);\n    const prevStaffLines = GetStaffHeightUntil(this.Staves, staffNum) / 5;\n    actualLine = line + staff.TopLine;\n    const testLine = actualLine - prevStaffLines;\n    const relativeLine =\n      staff.TopLine < 0\n        ? actualLine + Math.abs(staff.TopLine)\n        : actualLine - staff.TopLine;\n    bounds.y = 5 * actualLine;\n    return { num: testLine, bounds: bounds };\n  }\n\n  // Get note position relative to staff/measure\n  GetNotePositionOnLine(line: number, staff: number): number {\n    const staffYPos = GetStaffHeightUntil(this.Staves, staff);\n    let y = staffYPos + this.Bounds.y + (line - this.Staves[staff].TopLine) * 5;\n    return y - 2.5;\n  }\n\n  GetBoundsWithOffset(): Bounds {\n    return new Bounds(\n      this.Bounds.x,\n      this.Bounds.y,\n      this.Bounds.width + this.XOffset,\n      this.Bounds.height,\n    );\n  }\n\n  SetXOffset(): void {\n    this.XOffset = 0;\n    if (this.RenderClef) {\n      this.XOffset += 30;\n    }\n    if (this.RenderKey) {\n      this.XOffset += 30;\n    }\n    if (this.RenderTimeSig) {\n      this.XOffset += 30;\n    }\n  }\n\n  CreateDivisions(cam: Camera, afterInput: boolean = false) {\n    this.Divisions = [];\n    this.Staves.forEach((s: Staff) => {\n      this.Divisions.push(...CreateDivisions(this, this.Notes, s.Num, cam));\n      ResizeDivisions(this, this.Divisions, s.Num);\n      UpdateNoteBounds(this, s.Num);\n    });\n  }\n\n  Reposition(prevMsr: Measure): void {\n    this.Bounds.x = prevMsr.Bounds.x + prevMsr.Bounds.width + prevMsr.XOffset;\n    this.CreateDivisions(this.Camera);\n  }\n\n  // set height of measure based off of notes in measure\n  // eventually will be determined by instrument / row etc.\n\n  // TODO: Remove these three methods (doing now)\n  GetMeasureHeight(): number {\n    return GetStaffHeightUntil(this.Staves);\n  }\n\n  GetGrandMeasureHeight(): number {\n    return 0;\n  }\n\n  GetGrandMeasureMidLine(): number {\n    return 0;\n  }\n\n  /* End TODO\n   */\n\n  // Gets total height of measure (all staffs)\n  NEW_GetMeasureHeight(): number {\n    return GetStaffHeightUntil(this.Staves);\n  }\n\n  AddNote(note: Note, fromInput: boolean = false): void {\n    if (note.Rest) {\n      this.ClearNonRestNotes(note.Beat, note.Staff);\n    } else {\n      this.ClearRestNotes(note.Beat, note.Staff);\n    }\n    note.SetID(this.RunningID.count);\n    this.RunningID.count++;\n    this.Notes.push(note);\n\n    if (fromInput) {\n      const msg: Message = {\n        messageString: \"AddNote\",\n        messageData: {\n          Message: {\n            msg: \"AddingNote\",\n            obj: note,\n          },\n          MessageType: MessageType.AddNote,\n        },\n      };\n      this.Message(msg);\n    }\n  }\n\n  ClearNonRestNotes(beat: number, staff: number): void {\n    for (let n = this.Notes.length - 1; n >= 0; n--) {\n      if (\n        this.Notes[n].Beat === beat &&\n        this.Notes[n].Rest === false &&\n        this.Notes[n].Staff === staff\n      ) {\n        this.Notes.splice(n, 1);\n      }\n    }\n  }\n\n  ClearRestNotes(beat: number, staff: number): void {\n    for (let n = this.Notes.length - 1; n >= 0; n--) {\n      if (\n        this.Notes[n].Beat === beat &&\n        this.Notes[n].Rest === true &&\n        this.Notes[n].Staff === staff\n      ) {\n        this.Notes.splice(n, 1);\n      }\n    }\n  }\n\n  ClearMeasure(ignoreNotes?: Note[]): void {\n    for (let n = this.Notes.length - 1; n >= 0; n--) {\n      if (this.Notes[n].Editable && !ignoreNotes.includes(this.Notes[n])) {\n        this.Notes.splice(n, 1);\n      }\n    }\n  }\n\n  DeleteSelected(): void {\n    for (let n = this.Notes.length - 1; n >= 0; n--) {\n      if (this.Notes[n].Selected && this.Notes[n].Editable) {\n        let beat = this.Notes[n].Beat;\n        let duration = this.Notes[n].Duration;\n        let staff = this.Notes[n].Staff;\n        let tuple = this.Notes[n].Tuple;\n        let tupleDetails = this.Notes[n].TupleDetails;\n        this.Notes.splice(n, 1);\n        const notesOnBeat = this.Notes.filter((n) => n.Beat === beat);\n        if (notesOnBeat.length === 0) {\n          const clefType = GetNoteClefType(this, beat, staff);\n          // beat is empty and requires a rest note\n          const restProps: NoteProps = {\n            Beat: beat,\n            Duration: duration,\n            Line: 15,\n            Rest: true,\n            Tied: false,\n            Staff: staff,\n            Tuple: tuple,\n            TupleDetails: tupleDetails,\n            Clef: clefType,\n          };\n\n          this.AddNote(new Note(restProps));\n        }\n      }\n    }\n  }\n\n  GetMinimumWidth(): number {\n    if (this.Notes.filter((n) => n.Rest !== true).length === 0) {\n      return DivisionMinWidth * 4;\n    }\n    const staffZeroDivs = this.Divisions.filter((div) => div.Staff === 0);\n    const staffOneDivs = this.Divisions.filter((div) => div.Staff === 1);\n    const lowestValue = this.Divisions.sort((a: Division, b: Division) => {\n      return a.Duration - b.Duration;\n    })[0].Duration;\n    //const count = 1 / lowestValue;\n\n    const count =\n      staffZeroDivs.length > staffOneDivs.length\n        ? staffZeroDivs.length\n        : staffOneDivs.length;\n    return count * DivisionMinWidth;\n  }\n\n  ReturnSelectableElements(): ISelectable[] {\n    const sel: ISelectable[] = [];\n    sel.push(...this.Notes);\n    sel.push(...this.Clefs);\n    return sel;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.GetBoundsWithOffset().IsHovered(x, y, cam);\n  }\n\n  ChangeTimeSignature(top: number, bottom: number, transpose: boolean): void {\n    this.TimeSignature.top = top;\n    this.TimeSignature.bottom = bottom;\n  }\n}\n\nexport { Measure, MeasureProps, Division, Clef };\n","import { Camera } from \"../Core/Camera.js\";\nimport { Instrument, StaffType } from \"../Core/Instrument.js\";\nimport { Clef, Measure, MeasureProps } from \"../Core/Measure.js\";\nimport { Page } from \"../Core/Page.js\";\nimport { Staff } from \"../Core/Staff.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { Message } from \"../Types/Message.js\";\nimport { ConfigSettings, MeasureSettings } from \"../entry.js\";\n\n// Defaults, these will be moved somewhere else but fine here for now\nconst sTopLine = 5;\nconst sBotLine = 24;\nconst lineHeight = 5;\n\nconst mh = (sBotLine - sTopLine) * lineHeight;\n\nconst CreateDefaultPiano = (): Instrument => {\n  const defaultPiano: Instrument = {\n    Position: { x: 0, y: 5 },\n    Staff: StaffType.Grand,\n    Staves: [new Staff(0), new Staff(1)],\n  };\n\n  return defaultPiano;\n};\n\nfunction CreateInstrument(y: number, config: ConfigSettings): Instrument {\n  let staff: StaffType = StaffType.Single;\n  if (config.DefaultStaffType) {\n    switch (config.DefaultStaffType) {\n      case \"rhythm\":\n        staff = StaffType.Rhythm;\n        break;\n      case \"grand\":\n        staff = StaffType.Grand;\n        break;\n      case \"single\":\n      default:\n        staff = StaffType.Single;\n    }\n  }\n  const instr: Instrument = {\n    Position: { x: 0, y: y },\n    Staff: staff,\n    Staves: [new Staff(0)],\n  };\n\n  return instr;\n}\n\nconst CreateDefaultMeasure = (\n  id: { count: number },\n  instr: Instrument,\n  page: Page,\n  cam: Camera,\n  callback: (msg: Message) => void,\n  settings?: MeasureSettings,\n): Measure => {\n  const msrHeight = instr.Staff === StaffType.Single ? mh * 2 : mh;\n\n  const props: MeasureProps = {\n    Instrument: instr,\n    Bounds: new Bounds(\n      instr.Position.x,\n      page.PageLines[0].LineBounds.y,\n      150,\n      msrHeight,\n    ),\n    TimeSignature: { top: 4, bottom: 4 },\n    KeySignature: \"CMaj/Amin\",\n    Notes: [],\n    Clefs: [new Clef(0, \"treble\", 1, 0)],\n    Staves: [new Staff(0)],\n    RenderClef: true,\n    RenderTimeSig: true,\n    RenderKey: false,\n    Camera: cam,\n    Page: page,\n    Message: callback,\n    Settings: settings,\n  };\n  return new Measure(props, id);\n};\n\nconst CreateMeasure = (\n  instr: Instrument,\n  bounds: Bounds,\n  timeSignature: { top: number; bottom: number },\n  keySignature: string,\n  clef: Clef[],\n  staves: Staff[],\n  cam: Camera,\n  runningId: { count: number },\n  page: Page,\n  renderClef: boolean = false,\n  callback: (msg: Message) => void,\n  settings?: MeasureSettings,\n): Measure => {\n  const props: MeasureProps = {\n    Instrument: instr,\n    Bounds: bounds,\n    TimeSignature: timeSignature,\n    KeySignature: keySignature,\n    Notes: [],\n    Clefs: clef,\n    Staves: staves,\n    RenderClef: false,\n    RenderTimeSig: false,\n    RenderKey: false,\n    Camera: cam,\n    Page: page,\n    Message: callback,\n    Settings: settings,\n  };\n  return new Measure(props, runningId);\n};\n\nexport {\n  CreateDefaultPiano,\n  CreateDefaultMeasure,\n  CreateMeasure,\n  CreateInstrument,\n};\n","import { ConfigSettings } from \"../Types/Config\";\n\nclass Camera {\n  x: number;\n  y: number;\n  oldX: number;\n  oldY: number;\n  Zoom: number;\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    this.oldX = x;\n    this.oldY = y;\n    this.Zoom = 1;\n  }\n}\n\nexport { Camera };\n","import { Camera } from \"../Core/Camera.js\";\nimport { Clef, Division, Measure } from \"../Core/Measure.js\";\nimport { Note } from \"../Core/Note.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { Message, MessageType } from \"../Types/Message.js\";\nimport { UpdateNoteBounds } from \"./NoteInput.js\";\nimport { ReturnMidiNumber } from \"./Pitcher.js\";\nclass Selector {\n  Measures: Measure[];\n  Clefs: Clef[];\n  // Notes: { msr: Measure, note: Note }[];\n  Notes: Map<Measure, Note[]>;\n  // Selectable { msr: Measure, sel: Selectable[]>\n  // Currently having these mapped to a measure is okay but may need a refactor\n  // later down the line\n  Elements: Map<Measure, ISelectable[]>;\n  constructor() {\n    this.Measures = [];\n    this.Clefs = [];\n    this.Notes = new Map<Measure, Note[]>();\n    this.Elements = new Map<Measure, ISelectable[]>();\n  }\n\n  TrySelectElement(\n    msr: Measure,\n    x: number,\n    y: number,\n    cam: Camera,\n    shiftKey: boolean,\n    msg: (msg: Message) => void,\n    elems: Map<Measure, ISelectable[]>,\n  ): ISelectable {\n    let elem: ISelectable; // element we have selected\n    let elements: ISelectable[] = [];\n    let selectedElements: ISelectable[] = this.Elements.get(msr)\n      ? this.Elements.get(msr)\n      : [];\n    // if (!shiftKey) {\n    //   this.DeselectAllElements();\n    // }\n    UpdateNoteBounds(msr, 0);\n    elements.push(...msr.Notes);\n    elements.push(...msr.Clefs);\n    elements.push(msr.TimeSignature);\n    elements.forEach((e: ISelectable) => {\n      if (e.IsHovered(x, y, cam) && e.Selected === false) {\n        //        if (e.Editable !== undefined && e.Editable === false) {\n        //          return;\n        //        }\n        e.Selected = true;\n        selectedElements.push(e);\n        if (e.SelType === SelectableTypes.Note) {\n          const n = e as Note;\n          const m: Message = {\n            messageData: {\n              MessageType: MessageType.Selection,\n              Message: {\n                msg: \"selected\",\n                obj: n,\n              },\n            },\n            messageString: \"Selected Note\",\n          };\n          msg(m);\n          if (n.Tied) {\n            const tiedNotes = SelectTiedNotes(n, msr) as ISelectable[];\n            selectedElements.push(...tiedNotes);\n          }\n        }\n        elem = e;\n        this.Elements.set(msr, selectedElements);\n      }\n    });\n    return elem;\n  }\n\n  DeselectAllElements(\n    elems: Map<Measure, ISelectable[]>,\n  ): Map<Measure, ISelectable[]> {\n    for (let [measure, elem] of elems) {\n      elem.forEach((e: ISelectable) => {\n        e.Selected = false;\n      });\n      elems.delete(measure);\n    }\n\n    return new Map<Measure, ISelectable[]>();\n  }\n\n  SelectElement(): ISelectable {\n    let elem: ISelectable; // element we have selected\n\n    return elem;\n  }\n\n  DeselectAll(): void {\n    // TODO: Measure selection\n    for (let [measure, notes] of this.Notes) {\n      notes.forEach((note) => {\n        note.Selected = false;\n      });\n      this.Notes.delete(measure);\n    }\n\n    // This should replace the above eventually\n    for (let [measure, elem] of this.Elements) {\n      elem.forEach((e) => {\n        e.Selected = false;\n      });\n      this.Elements.delete(measure);\n    }\n  }\n\n  DeselectNote(note: Note): void {\n    let noteIndex = -1;\n    for (let [msr, notes] of this.Notes) {\n      notes.forEach((note: Note, i: number) => {\n        if (note === note) {\n          noteIndex = i;\n        }\n      });\n      if (noteIndex >= 0) {\n        this.RemoveDeselected([noteIndex], msr);\n      }\n    }\n  }\n\n  RemoveDeselected(indexes: number[], key: Measure): void {\n    indexes.sort();\n    for (let i = indexes.length - 1; i >= 0; i--) {\n      this.Notes.get(key).splice(i, 1);\n    }\n    if (this.Notes.get(key).length === 0) {\n      this.Notes.delete(key);\n    }\n  }\n\n  SelectById(measures: Measure[], id: number): ISelectable {\n    let selectable: ISelectable;\n    this.DeselectAll();\n    measures.forEach((m) => {\n      // check here for measure selection when implemented\n      // maybe also div/beam/stem/clef/sig/artic etc.\n      m.Notes.forEach((n) => {\n        if (n.ID === id) {\n          n.Selected = true;\n          selectable = n;\n          let nArray = [];\n          nArray.push(n);\n          if (n.Tied) {\n            nArray.push(...SelectTiedNotes(n, m));\n          }\n          this.Elements.set(m, nArray);\n        }\n      });\n    });\n    return selectable;\n  }\n\n  SelectMeasure(msr: Measure): void {\n    if (this.Measures.find((m) => m.ID === msr.ID)) {\n      const index = this.Measures.indexOf(msr);\n      msr.Selected = false;\n      this.Measures.splice(index, 1);\n    } else {\n      this.Measures.push(msr);\n      msr.Selected = true;\n    }\n  }\n\n  // This should all be fairly generic eventually?\n  SelectClef(clef: Clef): void {\n    if (this.Clefs.find((c) => c.ID === clef.ID)) {\n      const index = this.Clefs.indexOf(clef);\n      clef.Selected = false;\n      this.Clefs.splice(index, 1);\n    } else {\n      this.Clefs.map((c) => (c.Selected = false));\n      this.Clefs = [];\n      this.Clefs.push(clef);\n      clef.Selected = true;\n    }\n  }\n\n  SelectNote(\n    msr: Measure,\n    x: number,\n    y: number,\n    cam: Camera,\n    shiftKey: boolean,\n  ): boolean {\n    let noteHit = false;\n    msr.Divisions.forEach((div: Division) => {\n      const divNotes = msr.Notes.filter((note: Note) => note.Beat === div.Beat);\n      divNotes.forEach((n: Note) => {\n        const noteBounds = n.Bounds;\n        if (noteBounds.IsHovered(x, y, cam)) {\n          n.Selected = true;\n          if (this.Notes.has(msr)) {\n            let nArray = this.Notes.get(msr);\n            if (!nArray.find((na) => na === n)) {\n              nArray.push(n);\n              if (n.Tied) {\n                nArray.push(...SelectTiedNotes(n, msr));\n              }\n              this.Notes.set(msr, nArray);\n            }\n          } else {\n            let nArray = [];\n            nArray.push(n);\n            if (n.Tied) {\n              nArray.push(...SelectTiedNotes(n, msr));\n            }\n            this.Notes.set(msr, nArray);\n          }\n          noteHit = true;\n        } else {\n          if (n.Selected && !shiftKey) {\n            let deselect = true;\n            if (n.Tied) {\n              const tiedNotes = msr.Notes.filter((note) => {\n                return (\n                  note !== n &&\n                  note.Beat >= n.TiedStart &&\n                  note.Beat <= n.TiedEnd &&\n                  note.Line === n.Line &&\n                  note.Staff === n.Staff &&\n                  note.Selected === true\n                );\n              });\n              deselect = tiedNotes.length === 0;\n            }\n            if (deselect) {\n              this.DeselectNote(n);\n              n.Selected = false;\n            }\n          }\n        }\n      });\n    });\n    if (!noteHit && !shiftKey) {\n      this.DeselectAll();\n      return false;\n    }\n    return true;\n  }\n}\n\nfunction SelectTiedNotes(n: Note, msr: Measure): Note[] {\n  let nArray: Note[] = [];\n  let tStart = n.TiedStart;\n  let tEnd = n.TiedEnd;\n  const tiedNotes = msr.Notes.filter((note) => {\n    return (\n      note !== n &&\n      note.Beat >= tStart &&\n      note.Beat <= tEnd &&\n      note.Staff === n.Staff &&\n      note.Line === n.Line\n    );\n  });\n  tiedNotes.forEach((tn) => {\n    tn.Selected = true;\n    nArray.push(tn);\n  });\n  return nArray;\n}\n\nexport { Selector };\n","const canonSave = '{\"Measures\":[{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":2,\"Beat\":1,\"Duration\":0.5,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":5,\"Beat\":1,\"Duration\":0.5,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":66,\"Beat\":1,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":70,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":71,\"Beat\":2,\"Duration\":0.125,\"Line\":1037,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":73,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":6,\"Beat\":3,\"Duration\":0.25,\"Line\":13,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":8,\"Beat\":3,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":9,\"Beat\":3,\"Duration\":0.25,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":74,\"Beat\":3,\"Duration\":0.125,\"Line\":1047,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":77,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":10,\"Beat\":4,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":78,\"Beat\":4,\"Duration\":0.125,\"Line\":1038,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":80,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":100,\"y\":87.5,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":17,\"Beat\":1,\"Duration\":0.25,\"Line\":19,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":20,\"Beat\":1,\"Duration\":0.25,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":21,\"Beat\":1,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":81,\"Beat\":1,\"Duration\":0.125,\"Line\":1048,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":84,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":22,\"Beat\":2,\"Duration\":0.25,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":85,\"Beat\":2,\"Duration\":0.125,\"Line\":1039,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":87,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":23,\"Beat\":3,\"Duration\":0.25,\"Line\":10,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":25,\"Beat\":3,\"Duration\":0.25,\"Line\":13,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":26,\"Beat\":3,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":88,\"Beat\":3,\"Duration\":0.125,\"Line\":1049,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":91,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":27,\"Beat\":4,\"Duration\":0.25,\"Line\":9,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":92,\"Beat\":4,\"Duration\":0.125,\"Line\":1040,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":94,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":423.3333333333333,\"y\":87.5,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":30,\"Beat\":1,\"Duration\":0.25,\"Line\":11,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":33,\"Beat\":1,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":34,\"Beat\":1,\"Duration\":0.25,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":95,\"Beat\":1,\"Duration\":0.125,\"Line\":1050,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":99,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":35,\"Beat\":2,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":100,\"Beat\":2,\"Duration\":0.125,\"Line\":1041,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":102,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":36,\"Beat\":3,\"Duration\":0.5,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":37,\"Beat\":3,\"Duration\":0.5,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":38,\"Beat\":3,\"Duration\":0.5,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":103,\"Beat\":3,\"Duration\":0.125,\"Line\":1051,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":106,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":107,\"Beat\":4,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":109,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":686.6666666666666,\"y\":87.5,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":41,\"Beat\":1,\"Duration\":0.25,\"Line\":21,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":44,\"Beat\":1,\"Duration\":0.25,\"Line\":18,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":45,\"Beat\":1,\"Duration\":0.25,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":110,\"Beat\":1,\"Duration\":0.125,\"Line\":1050,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":114,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":46,\"Beat\":2,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":115,\"Beat\":2,\"Duration\":0.125,\"Line\":1041,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":117,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":52,\"Beat\":3,\"Duration\":0.25,\"Line\":20,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":53,\"Beat\":3,\"Duration\":0.25,\"Line\":19,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":118,\"Beat\":3,\"Duration\":0.125,\"Line\":1049,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":121,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":55,\"Beat\":4,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":122,\"Beat\":4,\"Duration\":0.125,\"Line\":1040,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":57,\"Beat\":4.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":124,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":100,\"y\":375,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":125,\"Beat\":1,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":173,\"Beat\":1,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":129,\"Beat\":1.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":177,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":130,\"Beat\":2,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":178,\"Beat\":2,\"Duration\":0.125,\"Line\":1037,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":180,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":131,\"Beat\":3,\"Duration\":0.25,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":181,\"Beat\":3,\"Duration\":0.125,\"Line\":1047,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":184,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":133,\"Beat\":4,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":185,\"Beat\":4,\"Duration\":0.125,\"Line\":1038,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":187,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":423.3333333333333,\"y\":375,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":134,\"Beat\":1,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":188,\"Beat\":1,\"Duration\":0.125,\"Line\":1048,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":192,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":137,\"Beat\":2,\"Duration\":0.25,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":193,\"Beat\":2,\"Duration\":0.125,\"Line\":1039,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":195,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":138,\"Beat\":3,\"Duration\":0.125,\"Line\":10,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":196,\"Beat\":3,\"Duration\":0.125,\"Line\":1049,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":141,\"Beat\":3.5,\"Duration\":0.125,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":199,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":142,\"Beat\":4,\"Duration\":0.125,\"Line\":10,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":200,\"Beat\":4,\"Duration\":0.125,\"Line\":1040,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":144,\"Beat\":4.5,\"Duration\":0.125,\"Line\":9,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":202,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":686.6666666666666,\"y\":375,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":145,\"Beat\":1,\"Duration\":0.125,\"Line\":11,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":203,\"Beat\":1,\"Duration\":0.125,\"Line\":1050,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":149,\"Beat\":1.5,\"Duration\":0.125,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":207,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":150,\"Beat\":2,\"Duration\":0.125,\"Line\":13,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":208,\"Beat\":2,\"Duration\":0.125,\"Line\":1041,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":152,\"Beat\":2.5,\"Duration\":0.125,\"Line\":11,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":210,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":153,\"Beat\":3,\"Duration\":0.125,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":211,\"Beat\":3,\"Duration\":0.125,\"Line\":1051,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":156,\"Beat\":3.5,\"Duration\":0.125,\"Line\":13,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":214,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":157,\"Beat\":4,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":215,\"Beat\":4,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":159,\"Beat\":4.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":217,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":100,\"y\":662.5,\"width\":395,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":160,\"Beat\":1,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":218,\"Beat\":1,\"Duration\":0.125,\"Line\":1050,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":164,\"Beat\":1.5,\"Duration\":0.125,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":222,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":165,\"Beat\":2,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":223,\"Beat\":2,\"Duration\":0.125,\"Line\":1041,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":167,\"Beat\":2.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":225,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":168,\"Beat\":3,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":226,\"Beat\":3,\"Duration\":0.125,\"Line\":1049,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":229,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":170,\"Beat\":4,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":230,\"Beat\":4,\"Duration\":0.125,\"Line\":1040,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":172,\"Beat\":4.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":232,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":555,\"y\":662.5,\"width\":395,\"height\":190},\"ShowClef\":false,\"ShowTime\":false}]}';\nconst randomSaveOne = '{\"Measures\":[{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":2,\"Beat\":1,\"Duration\":0.03125,\"Line\":18,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":54,\"Beat\":1,\"Duration\":0.125,\"Line\":1047,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":8,\"Beat\":1.125,\"Duration\":0.03125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":9,\"Beat\":1.5,\"Duration\":0.03125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":12,\"Beat\":1.625,\"Duration\":0.03125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":13,\"Beat\":2,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":58,\"Beat\":2,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":15,\"Beat\":2.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":16,\"Beat\":3,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":60,\"Beat\":3,\"Duration\":0.125,\"Line\":1047,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":19,\"Beat\":3.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0}],\"Bounds\":{\"x\":100,\"y\":87.5,\"width\":383.3333333333333,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":22,\"Beat\":1,\"Duration\":0.0625,\"Line\":18,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":63,\"Beat\":1,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":27,\"Beat\":1.25,\"Duration\":0.0625,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":28,\"Beat\":1.5,\"Duration\":0.0625,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":30,\"Beat\":1.75,\"Duration\":0.0625,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":67,\"Beat\":2,\"Duration\":0.125,\"Line\":1048,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":69,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":543.3333333333333,\"y\":87.5,\"width\":233.33333333333334,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":33,\"Beat\":1,\"Duration\":0.25,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":70,\"Beat\":1,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":74,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":36,\"Beat\":2,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":37,\"Beat\":3,\"Duration\":0.25,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0}],\"Bounds\":{\"x\":776.6666666666666,\"y\":87.5,\"width\":173.33333333333334,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":41,\"Beat\":1,\"Duration\":0.25,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":75,\"Beat\":1,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":44,\"Beat\":2,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":89,\"Beat\":2,\"Duration\":0.25,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":46,\"Beat\":2.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":47,\"Beat\":3,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":91,\"Beat\":3,\"Duration\":0.25,\"Line\":1043,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":50,\"Beat\":3.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":51,\"Beat\":4,\"Duration\":0.125,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":92,\"Beat\":4,\"Duration\":0.25,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":53,\"Beat\":4.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0}],\"Bounds\":{\"x\":100,\"y\":375,\"width\":485,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":85,\"Beat\":1,\"Duration\":1,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":86,\"Beat\":1,\"Duration\":1,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0}],\"Bounds\":{\"x\":645,\"y\":375,\"width\":305,\"height\":190},\"ShowClef\":false,\"ShowTime\":false}]}';\nconst intervalTest = '{\"Measures\":[{\"Clef\":\"treble\",\"TimeSignature\":{\"Selected\":false,\"SelType\":3,\"top\":4,\"bottom\":4,\"TopPosition\":{\"x\":35,\"y\":37.5},\"BotPosition\":{\"x\":35,\"y\":57.5},\"GTopPosition\":{\"x\":35,\"y\":132.5},\"GBotPosition\":{\"x\":35,\"y\":152.5},\"Bounds\":{\"x\":35,\"y\":27.5,\"width\":30,\"height\":50},\"GBounds\":{\"x\":35,\"y\":122.5,\"width\":30,\"height\":50}},\"Notes\":[{\"ID\":1,\"Beat\":1,\"Duration\":0.5,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0,\"Clef\":\"treble\"},{\"ID\":3,\"Beat\":3,\"Duration\":0.5,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0,\"Clef\":\"treble\"}],\"Bounds\":{\"x\":0,\"y\":-2.5,\"width\":250,\"height\":95},\"ShowClef\":true,\"ShowTime\":true}]}'\n\ninterface saveFile {\n  name: string;\n  file: string;\n}\nconst allSaves: saveFile[] = [\n  {name: \"Canon in C\", file: canonSave},\n  {name: \"Random FIle One\", file: randomSaveOne}\n]\n\nexport { canonSave, randomSaveOne, intervalTest, allSaves, saveFile }\n","import { App } from \"../App.js\";\nimport { allSaves } from \"../testsaves.js\";\n\ninterface KeyMapping {\n  addmeasure: string,\n  changeinputmode: string,\n  value1: string,\n  value2: string,\n  value3: string,\n  value4: string,\n  value5: string,\n  value6: string,\n  restInput: string,\n  delete: string,\n  sharpen: string,\n  flatten: string,\n  scaleToggle: string,\n  save: string,\n  load: string,\n  test_triplet: string,\n}\n\nfunction KeyPress(app: App, key: string, keyMaps: KeyMapping): void {\n  switch (key) {\n    case keyMaps.addmeasure:\n      app.AddMeasure();\n      break;\n    case keyMaps.changeinputmode:\n      app.ChangeInputMode();\n      break;\n    //TODO: change value1-6 to note types (crotchet, quaver etc.)\n    case keyMaps.value1:\n      app.SetNoteValue(0.03125);\n      break;\n    case keyMaps.value2:\n      app.SetNoteValue(0.0625);\n      break;\n    case keyMaps.value3:\n      app.SetNoteValue(0.125);\n      break;\n    case keyMaps.value4:\n      app.SetNoteValue(0.25);\n      break;\n    case keyMaps.value5:\n      app.SetNoteValue(0.5);\n      break;\n    case keyMaps.value6:\n      app.SetNoteValue(1);\n      break;\n    case keyMaps.restInput:\n      //TODO: Prob change this\n      app.RestInput = !app.RestInput;\n      break;\n    case keyMaps.delete:\n      app.Delete();\n      break;\n    case keyMaps.sharpen:\n      app.Sharpen();\n      break;\n    case keyMaps.flatten:\n      app.Flatten();\n      break;\n    case keyMaps.scaleToggle:\n      //app.ScaleToggle();\n      break;\n    case keyMaps.save:\n      app.Save();\n      break;\n    case keyMaps.load:\n      app.LoadSheet(allSaves[0].file);\n    case keyMaps.test_triplet:\n      app.CreateTriplet();\n    default:\n  }\n}\n\nexport { KeyMapping, KeyPress }\n","import { Bounds } from \"../Types/Bounds.js\";\n\ninterface Margins {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n}\n\nconst defaultMargins: Margins = {\n  left: 40,\n  right: 40,\n  top: 40,\n  bottom: 40\n}\n\ninterface PageLine {\n  Number: number;\n  YPos: number;\n  LineBounds: Bounds;\n}\n\ninterface MarginAdjuster {\n  Name: string;\n  Direction: string;\n  Bounds: Bounds;\n}\n\nconst scale = 6;\nconst a4w = 210 * scale;\nconst a4h = 297 * scale;\n\nclass Page {\n  Margins: Margins;\n  // TODO: Change to bounds later\n  Bounds: Bounds;\n  Number: number;\n  PageLines: PageLine[];\n  MarginAdj: MarginAdjuster[];\n  constructor(x: number, y: number, pageNum: number) {\n    this.Margins = defaultMargins;\n    this.MarginAdj = [];\n    this.Number = pageNum;\n    this.Bounds = new Bounds(x, y, a4w, a4h); \n    // left margin\n    this.MarginAdj.push({\n      Name: \"left\",\n      Direction: \"horizontal\",\n      Bounds: new Bounds(this.Bounds.x + this.Margins.left - 12.5,\n                        this.Bounds.y - 25, 25, 25)\n    });\n    this.PageLines = []; \n    this.PageLines.push(\n      {Number: 1,\n        YPos: y + this.Margins.top,\n        LineBounds: new Bounds(this.Bounds.x - 50, (y + this.Margins.top) - 12.5, 25, 25)});\n//    this.PageLines.push(\n//      {Number: 2,\n//        YPos: y + this.Margins.top,\n//        LineBounds: new Bounds(this.Bounds.x - 50, (y + this.Margins.top + 300) - 12.5, 25, 25)});\n  }\n\n  // TODO Later will need to add ability to add lines in between others\n  // TODO Later will need to make line height adjustable/have formattable\n  // settings\n  AddLine(lineHeight: number): PageLine {\n    const latestLine = this.PageLines[this.PageLines.length-1];\n    const newLine: PageLine = {\n      Number: latestLine.Number + 1,\n      YPos: this.Bounds.y + this.Margins.top,\n      LineBounds: new Bounds(this.Bounds.x - 50, latestLine.LineBounds.y + lineHeight - 12.5, 25, 25)};\n      this.PageLines.push(newLine);\n      return newLine;\n    }\n}\n\nexport { Page, MarginAdjuster }\n","import { Camera } from \"../Core/Camera.js\";\nimport { StaffType } from \"../Core/Instrument.js\";\nimport { Measure } from \"../Core/Measure.js\";\nimport { MarginAdjuster, Page } from \"../Core/Page.js\";\nimport { ConfigSettings } from \"../Types/Config.js\";\n\n// TODO: Add pages when necessary but for now we do just lines\nfunction SetPagesAndLines(\n  measures: Measure[],\n  pages: Page,\n  usePage: boolean | null,\n  defaultLineHeight: number = 150,\n): void {\n  let page: Page = pages;\n  if (!page) {\n    console.error(\"No page found!\");\n    return;\n  }\n  let runningWidth = 0;\n  let currentPage = 0;\n  let currentLine = 1;\n  let msrsOnLine = 0;\n  let pageWidth = page.Bounds.width - (page.Margins.left + page.Margins.right);\n\n  if (usePage === false && usePage !== null) {\n    // set each measure to line 1\n    measures.forEach((m) => {\n      m.PageLine = currentLine;\n    });\n    return;\n  }\n  measures.forEach((msr: Measure, i: number) => {\n    msrsOnLine++;\n    const msrWidth = msr.GetMinimumWidth() + msr.XOffset;\n    if (runningWidth + msrWidth > pageWidth || msrsOnLine > 4) {\n      currentLine++;\n      msrsOnLine = 1;\n      if (pages.PageLines.length < currentLine) {\n        pages.AddLine(defaultLineHeight);\n      }\n      runningWidth = 0;\n    }\n    runningWidth += msrWidth;\n    msr.Page = pages[currentPage];\n    msr.PageLine = currentLine;\n  });\n}\n\nfunction GetMaxWidth(page: Page, config: ConfigSettings, cam: Camera): number {\n  let maxWidth = 0;\n  if (config.FormatSettings?.MeasureFormatSettings?.MaxWidth) {\n    maxWidth = config.FormatSettings.MeasureFormatSettings.MaxWidth;\n  } else {\n    maxWidth = 350; //= (page.Bounds.width * cam.Zoom) - 50;\n  }\n  return maxWidth;\n}\n\nfunction ResizeMeasuresOnPage(\n  measures: Measure[],\n  page: Page,\n  cam: Camera,\n  config: ConfigSettings,\n): void {\n  const pageSize = page.Bounds.width - (page.Margins.left + page.Margins.right);\n  page.PageLines.forEach((line) => {\n    const msrs = measures.filter((m) => m.PageLine === line.Number);\n    let msrsLineWidth = 0;\n    msrs.forEach((m: Measure, i: number) => {\n      msrsLineWidth += m.GetMinimumWidth() + m.XOffset;\n    });\n    const fillWidth = pageSize - msrsLineWidth;\n    msrs.forEach((m: Measure, i: number) => {\n      m.Bounds.y = line.LineBounds.y;\n      // TODO: We have removed prefboundsY, will likely have to reimplement\n      //     m.PrefBoundsY = m.Bounds.y;\n      if (i === 0) {\n        m.Bounds.x = page.Bounds.x + page.Margins.left;\n        m.RenderClef = m.Instrument.Staff === StaffType.Rhythm ? false : true;\n        m.RenderTimeSig = true;\n        // TODO: When we work on keys\n        m.RenderKey = false;\n        m.SetXOffset();\n        // the calculated new width of the measure, may need to be overwritten\n        // by config settings if they are set (maxWidth in\n        // measureformatsettings)\n        const maxWidth = GetMaxWidth(page, config, cam);\n        const calculatedWidth = m.GetMinimumWidth() + fillWidth / msrs.length;\n        const msrWidth = maxWidth\n          ? calculatedWidth > maxWidth\n            ? maxWidth\n            : calculatedWidth\n          : calculatedWidth;\n        m.Bounds.width = msrWidth;\n        m.CreateDivisions(cam);\n      } else {\n        m.RenderClef = false;\n        m.RenderTimeSig = false;\n        // TODO: When we work on keys\n        m.RenderKey = false;\n        m.SetXOffset();\n        const maxWidth = GetMaxWidth(page, config, cam);\n        const calculatedWidth = m.GetMinimumWidth() + fillWidth / msrs.length;\n        const msrWidth = maxWidth\n          ? calculatedWidth > maxWidth\n            ? maxWidth\n            : calculatedWidth\n          : calculatedWidth;\n        m.Bounds.width = msrWidth;\n        msrs[i].Reposition(msrs[i - 1]);\n        m.CreateDivisions(cam);\n      }\n      m.Clefs.forEach((c) => {\n        c.SetBounds(m, c.Staff);\n      });\n      m.TimeSignature.SetBounds(m, 0);\n      if (m.Instrument.Staff === StaffType.Grand) {\n        m.TimeSignature.SetBounds(m, 1);\n      }\n    });\n  });\n}\n\nfunction GetAdjuster(\n  x: number,\n  y: number,\n  page: Page,\n  cam: Camera,\n): MarginAdjuster | undefined {\n  let adjuster: MarginAdjuster;\n  page.MarginAdj.forEach((adj: MarginAdjuster) => {\n    if (adj.Bounds.IsHovered(x, y, cam)) {\n      // TODO: Complete\n    }\n  });\n  return adjuster;\n}\n\nexport { SetPagesAndLines, ResizeMeasuresOnPage };\n","import { Camera } from \"../Core/Camera.js\";\nimport { Instrument, StaffType } from \"../Core/Instrument.js\";\nimport { Clef, Measure } from \"../Core/Measure.js\";\nimport { Note, NoteProps } from \"../Core/Note.js\";\nimport { Page } from \"../Core/Page.js\";\nimport { Sheet } from \"../Core/Sheet.js\";\nimport { Staff } from \"../Core/Staff.js\";\nimport {\n  CreateDefaultMeasure,\n  CreateMeasure,\n} from \"../Factory/Instrument.Factory.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { Message } from \"../Types/Message.js\";\n\ninterface lNote {\n  ID: number;\n  Beat: number;\n  Duration: number;\n  Line: number;\n  Rest: boolean;\n  Tied: boolean;\n  Staff: number;\n  Clef: string;\n  Editable?: boolean;\n}\ninterface lMeasure {\n  Clefs: Clef[];\n  Staves: Staff[];\n  TimeSignature: { top: number; bottom: number };\n  Notes: lNote[];\n  Bounds: Bounds;\n  ShowClef: boolean;\n  ShowTime: boolean;\n}\ninterface LoadStructure {\n  Measures: lMeasure[];\n}\n\nconst LoadSheet = (\n  sheet: Sheet,\n  page: Page,\n  cam: Camera,\n  instr: Instrument,\n  savedJson: string,\n  callback: (msg: Message) => void,\n) => {\n  let runningId = { count: 0 };\n  // TODO: this could error\n  const loaded: LoadStructure = JSON.parse(savedJson);\n  // loading onto a single instrument to begin with\n  loaded.Measures.forEach((m: lMeasure, i: number) => {\n    //   const msr = CreateDefaultMeasure(runningId, instr, page, cam);\n    // TODO: Temporary\n    if (instr.Staff === StaffType.Rhythm) {\n      m.ShowClef = false;\n    }\n    const notes: Note[] = [];\n    m.Notes.forEach((n: lNote, i: number) => {\n      const noteProps: NoteProps = {\n        Beat: n.Beat,\n        Duration: n.Duration,\n        Line: n.Line,\n        Rest: n.Rest,\n        Tied: n.Tied,\n        Staff: n.Staff,\n        Tuple: false,\n        Clef: n.Clef,\n        Editable: false,\n      };\n      const newNote = new Note(noteProps);\n      notes.push(newNote);\n    });\n    const msr = CreateMeasure(\n      instr,\n      m.Bounds,\n      m.TimeSignature,\n      \"CMaj/Amin\",\n      m.Clefs,\n      m.Staves,\n      cam,\n      runningId,\n      page,\n      m.ShowClef,\n      callback,\n    );\n    msr.Notes = notes;\n    sheet.Measures.push(msr);\n    msr.CreateDivisions(cam);\n  });\n};\n\nconst SaveSheet = (sheet: Sheet): string => {\n  let saved: LoadStructure = {\n    Measures: [],\n  };\n  sheet.Measures.forEach((m: Measure, i: number) => {\n    let notes: lNote[] = [];\n    m.Notes.forEach((n: Note, i: number) => {\n      if (n.Rest) {\n        return;\n      }\n      notes.push({\n        ID: n.ID,\n        Beat: n.Beat,\n        Duration: n.Duration,\n        Line: n.Line,\n        Rest: n.Rest,\n        Tied: n.Tied,\n        Staff: n.Staff,\n        Clef: n.Clef,\n        Editable: false,\n      });\n    });\n    saved.Measures.push({\n      Clefs: m.Clefs,\n      Staves: m.Staves,\n      TimeSignature: m.TimeSignature,\n      Notes: notes,\n      Bounds: m.Bounds,\n      ShowClef: m.RenderClef,\n      ShowTime: m.RenderTimeSig,\n    });\n  });\n\n  console.log(JSON.stringify(saved));\n  return JSON.stringify(saved);\n};\n\nexport { LoadSheet, SaveSheet, LoadStructure, lNote, lMeasure };\n","import { Sheet, SheetProps } from \"./Core/Sheet.js\";\nimport { RenderDebug, Renderer } from \"./Core/Renderer.js\";\nimport {\n  CreateDefaultMeasure,\n  CreateDefaultPiano,\n  CreateInstrument,\n  CreateMeasure,\n} from \"./Factory/Instrument.Factory.js\";\nimport { Clef, Division, Measure } from \"./Core/Measure.js\";\nimport { Bounds } from \"./Types/Bounds.js\";\nimport { Note } from \"./Core/Note.js\";\nimport { Camera } from \"./Core/Camera.js\";\nimport {\n  AddNoteOnMeasure,\n  CreateTuplet,\n  InputOnMeasure,\n  UpdateNoteBounds,\n} from \"./Workers/NoteInput.js\";\nimport { Selector } from \"./Workers/Selector.js\";\nimport { GetDivisionTotalWidth } from \"./Core/Division.js\";\nimport { Instrument, StaffType } from \"./Core/Instrument.js\";\nimport { KeyMapping, KeyPress } from \"./Workers/Mappings.js\";\nimport { ISelectable, SelectableTypes } from \"./Types/ISelectable.js\";\nimport { Page } from \"./Core/Page.js\";\nimport { ResizeMeasuresOnPage, SetPagesAndLines } from \"./Workers/Formatter.js\";\nimport { LoadSheet, SaveSheet } from \"./Workers/Loader.js\";\nimport { allSaves, canonSave, intervalTest, saveFile } from \"./testsaves.js\";\nimport { ClearMessage, Message, MessageType } from \"./Types/Message.js\";\nimport {\n  FromPitchMap,\n  GeneratePitchMap,\n  MappedMidi,\n} from \"./Workers/Pitcher.js\";\nimport { ConfigSettings } from \"./Types/Config.js\";\nimport { GetStaffHeightUntil, Staff } from \"./Core/Staff.js\";\n\nclass App {\n  Config: ConfigSettings;\n  Message: Message;\n  Canvas: HTMLCanvasElement;\n  Container: HTMLElement;\n  Context: CanvasRenderingContext2D;\n  Load: boolean;\n  Sheet: Sheet;\n  HoveredElements: { MeasureID: number };\n  NoteInput: boolean;\n  RestInput: boolean;\n  Formatting: boolean;\n  Zoom: number;\n  Camera: Camera;\n  CamDragging: boolean;\n  DraggingPositions: { x1: number; y1: number; x2: number; y2: number };\n  NoteValue: number;\n  Selector: Selector;\n  NotifyCallback: (msg: Message) => void;\n  RunningID: { count: number };\n  PitchMap: Map<number, MappedMidi>;\n\n  // TODO: Off load some of this work to other classes/functions\n  // For now we prototype here\n  DraggingNote: boolean;\n  StartLine: number;\n  EndLine: number;\n\n  // TODO: Move this to a formatter\n  StartDragY: number;\n  EndDragY: number;\n  DragLining: boolean;\n  LinerBounds: Bounds;\n  LineNumber: Number;\n\n  Debug: boolean;\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    container: HTMLElement,\n    context: CanvasRenderingContext2D,\n    notifyCallback: (msg: Message) => void,\n    config: ConfigSettings,\n    load = false,\n  ) {\n    this.Config = config;\n    this.PitchMap = GeneratePitchMap();\n    this.Message = ClearMessage();\n    this.NotifyCallback = notifyCallback;\n    this.Debug = true;\n    this.Canvas = canvas;\n    this.Container = container;\n    this.Selector = new Selector();\n    this.Context = context;\n    this.Load = load;\n    this.HoveredElements = { MeasureID: -1 };\n    this.Zoom = 1;\n    this.RunningID = { count: 0 };\n    this.CamDragging = false;\n    this.DraggingPositions = { x1: 0, y1: 0, x2: 0, y2: 0 };\n    let camStartX = 0;\n    let camStartY = 20;\n    if (this.Config.CameraSettings?.StartingPosition) {\n      camStartX = this.Config.CameraSettings.StartingPosition.x;\n      camStartY = this.Config.CameraSettings.StartingPosition.y;\n    }\n    this.Camera = new Camera(camStartX, camStartY);\n    this.Camera.Zoom = 1; //this.Config.CameraSettings.Zoom ? this.Config.CameraSettings.Zoom : 1;\n    this.NoteValue = 0.5; //this.Config?.NoteSettings?.InputValue ?\n    //      this.Config.NoteSettings.InputValue : 0.25;\n\n    // TODO: Remove to formatter\n    this.StartDragY = 0;\n    this.EndDragY = 0;\n    this.DragLining = false;\n\n    if (!this.Load) {\n      // Create New Sheet Properties\n      let newPage: Page = new Page(0, 0, 1);\n      if (this.Config.PageSettings?.PageWidth) {\n        newPage.Bounds.width = this.Config.PageSettings.PageWidth;\n      }\n\n      const sProps: SheetProps = {\n        Instruments: [],\n        KeySignature: [{ key: \"CMaj\", measureNo: 0 }],\n        Measures: [],\n        Pages: [newPage],\n      };\n\n      const page = sProps.Pages[0];\n\n      sProps.Instruments.push(CreateInstrument(20, this.Config));\n      sProps.Measures.push(\n        CreateDefaultMeasure(\n          this.RunningID,\n          sProps.Instruments[0],\n          page,\n          this.Camera,\n          this.NotifyCallback,\n          this.Config.MeasureSettings,\n        ),\n      );\n      this.Sheet = new Sheet(sProps);\n    }\n    this.NoteInput = false;\n    this.RestInput = false;\n    this.Formatting = false;\n\n    if (this.Config.CameraSettings?.Zoom) {\n      this.Camera.Zoom = this.Config.CameraSettings.Zoom;\n      this.SetCameraZoom(this.Camera.Zoom);\n      this.ResizeMeasures(this.Sheet.Measures);\n    }\n\n    this.Update(0, 0);\n  }\n\n  Hover(x: number, y: number): void {\n    x = x / this.Camera.Zoom;\n    y = y / this.Camera.Zoom;\n\n    if (this.CamDragging) {\n      this.Camera.x = Math.floor(\n        this.Camera.oldX + x - this.DraggingPositions.x1,\n      );\n      this.Camera.y = Math.floor(\n        this.Camera.oldY + y - this.DraggingPositions.y1,\n      );\n      this.Update(x, y);\n      return;\n    }\n    if (this.DraggingNote) {\n      this.DragNote(x, y);\n      this.Update(x, y);\n    }\n    if (this.Formatting && this.DragLining) {\n      this.DragLiner(x, y);\n      this.Update(x, y);\n    }\n    this.HoveredElements.MeasureID = -1;\n    // TODO: Move all this elsewhere\n    if (this.NoteInput) {\n      this.Sheet.Measures.forEach((m: Measure) => {\n        if (m.GetBoundsWithOffset().IsHovered(x, y, this.Camera)) {\n          m.Divisions.forEach((d: Division) => {\n            if (d.Bounds.IsHovered(x, y, this.Camera)) {\n              //ManageHeight(m, d.Staff, x, y, this.Camera, this.Sheet.Measures);\n              // TODO: Move this so it only is called\n              // at the appropriate time\n              UpdateNoteBounds(m, 0);\n              UpdateNoteBounds(m, 1);\n            }\n          });\n        } else {\n          //         m.ResetHeight();\n        }\n      });\n    }\n    // This shouldn't always update but will need to do serious work to figure\n    // out all bugs involved when it doesn't\n    this.Update(x, y);\n  }\n\n  Delete(): void {\n    for (let [msr, elem] of this.Selector.Elements) {\n      msr.DeleteSelected();\n      msr.CreateDivisions(this.Camera);\n    }\n  }\n\n  Input(x: number, y: number, shiftKey: boolean): void {\n    // will move this code elsewhere, testing note input\n    x = x / this.Camera.Zoom;\n    y = y / this.Camera.Zoom;\n\n    //TODO: NOT FINAL THIS IS PROTOTYPING NOT FINAL\n    if (!this.NoteInput && this.Formatting) {\n      this.SelectLiner(x, y);\n    }\n\n    this.HoveredElements.MeasureID = -1;\n    const msrOver: Measure | undefined = this.Sheet.Measures.find(\n      (msr: Measure) => msr.GetBoundsWithOffset().IsHovered(x, y, this.Camera),\n    );\n\n    if (msrOver === undefined) {\n      if (!shiftKey) {\n        this.Selector.DeselectAll();\n        this.Message = ClearMessage();\n        this.Message.messageString = \"msr undefined\";\n        this.NotifyCallback(this.Message);\n        this.Update(x, y);\n      }\n      return;\n    } // no measure over\n\n    if (!this.NoteInput) {\n      let selectedMeasureElement: boolean = false;\n      // Measure Element selection, should be moved elsewhere eventually\n      // (probably Measure? Maybe somewhere else)\n      if (!shiftKey) {\n        this.Selector.Elements = this.Selector.DeselectAllElements(\n          this.Selector.Elements,\n        );\n      }\n      const elem = this.Selector.TrySelectElement(\n        msrOver,\n        x,\n        y,\n        this.Camera,\n        shiftKey,\n        this.NotifyCallback,\n        this.Selector.Elements,\n      );\n      if (\n        (elem === undefined &&\n          this.Config.FormatSettings.MeasureFormatSettings.Selectable ===\n            true) ||\n        this.Config.FormatSettings.MeasureFormatSettings.Selectable ===\n          undefined\n      ) {\n        this.Selector.SelectMeasure(msrOver);\n      }\n      if (!this.DraggingNote) {\n        this.DraggingNote = true;\n      }\n      const divOver = msrOver.Divisions.find((d) =>\n        d.Bounds.IsHovered(x, y, this.Camera),\n      );\n      if (divOver) {\n        this.StartLine = msrOver.GetLineHovered(y, divOver.Staff).num;\n      }\n    } else if (this.NoteInput) {\n      InputOnMeasure(\n        msrOver,\n        this.NoteValue,\n        x,\n        y,\n        this.Camera,\n        this.RestInput,\n      );\n      this.ResizeMeasures(\n        this.Sheet.Measures.filter((m) => m.Instrument === msrOver.Instrument),\n      );\n    }\n    //  this.NotifyCallback(this.Message);\n    this.Update(x, y);\n  }\n  Update(x: number, y: number): void {\n    // this should be the only place that calls render\n    // this.NotifyCallback(this.Message);\n    this.Render({ x: x, y: y });\n  }\n  Render(mousePos: { x: number; y: number }): void {\n    Renderer(\n      this.Canvas,\n      this.Context,\n      this.Sheet.Measures,\n      this.Sheet.Pages,\n      this.HoveredElements,\n      mousePos,\n      this.Camera,\n      this.NoteInput,\n      this.RestInput,\n      this.Formatting,\n      this.Config,\n      this.NoteValue,\n    );\n    if (this.Debug) {\n      RenderDebug(\n        this.Canvas,\n        this.Context,\n        this.Sheet,\n        mousePos,\n        this.Camera,\n        this.Selector,\n      );\n    }\n  }\n\n  AddMeasure(): void {\n    const newMeasureID = this.Sheet.Measures.length;\n    const prevMsr = this.Sheet.Measures[this.Sheet.Measures.length - 1];\n    let x = 0;\n    this.Sheet.Instruments.forEach((i) => {\n      let latestLine =\n        this.Sheet.Pages[0].PageLines[this.Sheet.Pages[0].PageLines.length - 1];\n      //    const msrCountOnLine = this.Sheet.Measures.filter(m => m.PageLine === latestLine.Number);\n      //    if (msrCountOnLine.length > 3) {\n      //      latestLine = this.Sheet.Pages[0].AddLine();\n      //    }\n      const newMeasureBounds = new Bounds(\n        x,\n        latestLine.LineBounds.y,\n        150,\n        prevMsr.Bounds.height,\n      );\n      const newMsr = CreateMeasure(\n        i,\n        newMeasureBounds,\n        prevMsr.TimeSignature,\n        prevMsr.KeySignature,\n        prevMsr.Clefs,\n        prevMsr.Staves,\n        this.Camera,\n        this.RunningID,\n        this.Sheet.Pages[0], // Page will need to be determined\n        false,\n        this.NotifyCallback,\n        this.Config.MeasureSettings,\n      );\n      //      newMsr.PageLine = latestLine.Number;\n      this.Sheet.Measures.push(newMsr);\n      this.ResizeMeasures(\n        this.Sheet.Measures.filter((m) => m.Instrument === i),\n      );\n    });\n  }\n\n  ChangeInputMode(): void {\n    this.NoteInput = !this.NoteInput;\n  }\n\n  //TODO: Prototype page line formatting nonsense\n\n  SelectLiner(x: number, y: number): Bounds | undefined {\n    // get liner here\n    let liner: Bounds;\n    if (!this.DragLining) {\n      this.LineNumber = -1;\n    }\n    this.Sheet.Pages.forEach((page) => {\n      page.PageLines.forEach((line) => {\n        if (line.LineBounds.IsHovered(x, y, this.Camera)) {\n          liner = line.LineBounds;\n          if (!this.DragLining) {\n            this.StartDragY = y;\n            this.DragLining = true;\n            this.LinerBounds = liner;\n            this.LineNumber = line.Number;\n          }\n        }\n      });\n    });\n    return liner;\n  }\n\n  DragLiner(x: number, y: number): void {\n    if (this.LinerBounds) {\n      this.LinerBounds.y = this.LinerBounds.y + (y - this.StartDragY);\n      const page = this.Sheet.Pages[0];\n      if (this.LinerBounds.y + 12.5 <= page.Bounds.y + page.Margins.top) {\n        this.LinerBounds.y = page.Bounds.y + page.Margins.top - 12.5;\n      }\n      this.StartDragY = y;\n      // TODO: Super SCUFFED TEST PROTOTYPE NOT FINAL\n      this.Sheet.Measures.forEach((m) => {\n        if (m.PageLine === this.LineNumber) {\n          m.Bounds.y = this.LinerBounds.y;\n        }\n      });\n      this.ResizeMeasures(this.Sheet.Measures);\n    }\n  }\n\n  DragNote(x: number, y: number): void {\n    const msrOver = this.Sheet.Measures.find((m) =>\n      m.GetBoundsWithOffset().IsHovered(x, y, this.Camera),\n    );\n\n    if (msrOver === undefined) {\n      this.DraggingNote = false;\n      this.StartLine = -1;\n      this.EndLine = -1;\n      return;\n    }\n\n    const divOver = msrOver.Divisions.find((d) =>\n      d.Bounds.IsHovered(x, y, this.Camera),\n    );\n    if (divOver) {\n      this.EndLine = msrOver.GetLineHovered(y, divOver.Staff).num;\n    }\n    const lineDiff = this.EndLine - this.StartLine;\n    for (let [msr, elem] of this.Selector.Elements) {\n      elem\n        .filter((e: ISelectable) => e.SelType === SelectableTypes.Note)\n        .forEach((n: Note) => {\n          // Should never be selected, currently band-aid fix for bug. Address\n          // when re-implementing dragging notes/selectables\n          if (n.Selected && n.Editable) {\n            n.Line += lineDiff;\n            UpdateNoteBounds(msr, n.Staff);\n            // send message about note update\n            if (lineDiff !== 0) {\n              const m: Message = {\n                messageData: {\n                  MessageType: MessageType.Selection,\n                  Message: {\n                    msg: \"selected\",\n                    obj: n,\n                  },\n                },\n                messageString: \"Selected Note\",\n              };\n              this.Message = m;\n              this.NotifyCallback(this.Message);\n            }\n          }\n        });\n    }\n    this.StartLine = this.EndLine;\n  }\n\n  StopNoteDrag(x: number, y: number): void {\n    if (this.DraggingNote) {\n      this.StartLine = -1;\n      this.EndLine = -1;\n      this.DraggingNote = false;\n    }\n    if (this.DragLining) {\n      this.DragLining = false;\n    }\n  }\n\n  SetCameraDragging(dragging: boolean, x: number, y: number): void {\n    if (this.Config.CameraSettings?.DragEnabled === false) {\n      this.CamDragging = false;\n      return;\n    }\n    this.CamDragging = dragging;\n    if (this.CamDragging) {\n      // set initial drag position\n      this.DraggingPositions.x1 = x / this.Camera.Zoom;\n      this.DraggingPositions.y1 = y / this.Camera.Zoom;\n    } else {\n      // reset drag positions\n      this.DraggingPositions.x1 = 0;\n      this.DraggingPositions.y1 = 0;\n      this.DraggingPositions.x2 = 0;\n      this.DraggingPositions.y2 = 0;\n      this.Camera.oldX = this.Camera.x;\n      this.Camera.oldY = this.Camera.y;\n    }\n  }\n\n  AlterZoom(num: number): void {\n    this.Zoom += num;\n    this.Camera.Zoom = this.Zoom;\n    this.Context.setTransform(this.Camera.Zoom, 0, 0, this.Camera.Zoom, 0, 0);\n    this.Update(0, 0);\n  }\n\n  SetCameraZoom(num: number): void {\n    this.Zoom = num;\n    this.Camera.Zoom = this.Zoom;\n    this.Context.setTransform(this.Camera.Zoom, 0, 0, this.Camera.Zoom, 0, 0);\n    this.Update(0, 0);\n  }\n\n  // TEST FUNCTION\n  ResizeFirstMeasure(): void {\n    //    this.Sheet.Measures[0].Bounds.width += 50;\n    this.Sheet.Measures[0].CreateDivisions(this.Camera);\n    for (let i = 1; i < this.Sheet.Measures.length; i++) {\n      this.Sheet.Measures[i].Reposition(this.Sheet.Measures[i - 1]);\n    }\n    this.Update(0, 0);\n  }\n\n  ResizeMeasures(measures: Measure[]): void {\n    // TODO: Prototyping stuff so refactor later\n    const maxMeasuresPerLine = 4;\n    const minMeasuresPerLine = 3;\n    const lineHeight =\n      measures[0].Instrument.Staff === StaffType.Rhythm ? 200 : 200;\n    SetPagesAndLines(\n      measures,\n      this.Sheet.Pages[0],\n      this.Config.PageSettings?.UsePages,\n      lineHeight,\n    );\n    ResizeMeasuresOnPage(\n      measures,\n      this.Sheet.Pages[0],\n      this.Camera,\n      this.Config,\n    );\n    if (this.Config.CameraSettings?.CenterMeasures) {\n      this.CenterMeasures();\n    } else if (this.Config.CameraSettings?.CenterPage) {\n      this.CenterPage();\n    }\n\n    this.Update(0, 0);\n  }\n\n  SetNoteValue(val: number): void {\n    this.NoteValue = val;\n  }\n\n  SetAccidental(acc: number): void {\n    for (let [msr, elem] of this.Selector.Elements) {\n      elem.forEach((n) => {\n        if (n.SelType === SelectableTypes.Note) {\n          const note = n as Note;\n          note.Accidental = acc;\n          this.Message = ClearMessage();\n          const m: Message = {\n            messageData: {\n              MessageType: MessageType.Selection,\n              Message: {\n                msg: \"selected\",\n                obj: note,\n              },\n            },\n            messageString: \"Selected Note\",\n          };\n          this.Message = m;\n          this.NotifyCallback(m);\n        }\n      });\n    }\n    this.Update(0, 0);\n  }\n\n  Sharpen(): void {\n    for (let [msr, elem] of this.Selector.Elements) {\n      elem.forEach((n) => {\n        if (n.SelType === SelectableTypes.Note) {\n          const note = n as Note;\n          note.Accidental += 1;\n          if (note.Accidental > 2) {\n            note.Accidental = 2;\n          }\n        }\n      });\n    }\n    this.Update(0, 0);\n  }\n  Flatten(): void {\n    for (let [msr, elem] of this.Selector.Elements) {\n      elem.forEach((e) => {\n        if (e.SelType === SelectableTypes.Note) {\n          const n = e as Note;\n          n.Accidental -= 1;\n          if (n.Accidental < -2) {\n            n.Accidental = -2;\n          }\n        }\n      });\n    }\n    this.Update(0, 0);\n  }\n\n  //TODO: Remove this test function\n  ScaleToggle(): number {\n    if (this.Camera.Zoom !== 1) {\n      this.Camera.Zoom = 1;\n      this.Zoom = 1;\n    } else {\n      this.Camera.Zoom = 1;\n    }\n    return this.Camera.Zoom;\n  }\n\n  // Test_AddClefMiddle(): void {\n  //   const msr = this.Sheet.Measures[0];\n  //   const clef: Clef = {Type: \"bass\", Beat: 3};\n  //   let clefExist = false;\n  //   msr.Clefs.forEach((c: Clef) => {\n  //     if (c.Beat === clef.Beat && c.Type === clef.Type) {\n  //       clefExist = true;\n  //     }\n  //   });\n  //   if (!clefExist)\n  //     msr.Clefs.push(clef);\n  // }\n\n  KeyInput(key: string, keymaps: KeyMapping): void {\n    KeyPress(this, key, keymaps);\n    //    this.NotifyCallback(this.Message);\n  }\n\n  SelectById(id: number): ISelectable {\n    const sel = this.Selector.SelectById(this.Sheet.Measures, id);\n    this.Update(0, 0);\n    return sel;\n  }\n\n  ToggleFormatting(): void {\n    this.Formatting = !this.Formatting;\n    if (this.Formatting) {\n      this.NoteInput = false;\n      this.RestInput = false;\n    }\n  }\n\n  Save(): void {\n    SaveSheet(this.Sheet);\n  }\n\n  LoadSheet(sheet: string): void {\n    //Clear measures\n    this.Sheet.Measures = [];\n    LoadSheet(\n      this.Sheet,\n      this.Sheet.Pages[0],\n      this.Camera,\n      this.Sheet.Instruments[0],\n      sheet,\n      this.NotifyCallback,\n    );\n    this.ResizeMeasures(this.Sheet.Measures);\n    this.Update(0, 0);\n  }\n\n  GetSaveFiles(): saveFile[] {\n    return allSaves;\n  }\n\n  // TODO: Prototype code\n  CreateTriplet(): void {\n    this.NoteValue = CreateTuplet(this.Selector.Notes, 3);\n    this.ResizeMeasures(this.Sheet.Measures);\n    this.Update(0, 0);\n  }\n\n  ChangeTimeSignature(\n    top: number,\n    bottom: number,\n    transpose: boolean = false,\n  ): void {\n    for (let [msr, elem] of this.Selector.Elements) {\n      msr.ChangeTimeSignature(top, bottom, transpose);\n    }\n  }\n\n  CenterMeasures(): void {\n    // This measure is currently only being used for mtrainer\n    let msrWidth = 100;\n    if (this.Config.FormatSettings?.MeasureFormatSettings?.MaxWidth) {\n      msrWidth = this.Config.FormatSettings.MeasureFormatSettings.MaxWidth;\n    }\n    const padding =\n      (this.Canvas.clientWidth - (msrWidth + msrWidth / 2) * this.Camera.Zoom) /\n      4;\n    this.Camera.x = padding;\n    if (this.Canvas.clientWidth < msrWidth * this.Camera.Zoom) {\n      this.SetCameraZoom(this.Canvas.clientWidth / msrWidth);\n    } else {\n      const z = this.Config.CameraSettings?.Zoom\n        ? this.Config.CameraSettings.Zoom\n        : 1;\n      this.SetCameraZoom(z);\n    }\n  }\n\n  CenterPage(): void {\n    const page = this.Sheet.Pages[0];\n    const pageW = page.Bounds.width;\n    const sidePadding = 20;\n    const totalWidth = pageW + sidePadding;\n    if (this.Canvas.clientWidth < totalWidth) {\n      //set zoom of camera\n      this.SetCameraZoom(this.Canvas.clientWidth / totalWidth);\n    } else {\n      const z = this.Config.CameraSettings?.Zoom\n        ? this.Config.CameraSettings.Zoom\n        : 1;\n      this.SetCameraZoom(z);\n    }\n\n    const emptySpace = this.Canvas.clientWidth - totalWidth * this.Camera.Zoom;\n    this.Camera.x = emptySpace / 2;\n  }\n\n  // Maybe instead of duplicate function we can expose note input function,\n  // doesn't matter atm\n  AddNoteOnMeasure(\n    msr: Measure,\n    noteValue: number,\n    line: number,\n    beat: Division,\n    rest: boolean,\n  ): void {\n    AddNoteOnMeasure(msr, noteValue, line, beat, rest);\n  }\n\n  AddStaff(instrNum: number, clef: string): void {\n    const instr = this.Sheet.Instruments[instrNum];\n    if (!instr) {\n      return;\n    }\n    const newStaff = new Staff(instr.Staves.length);\n    instr.Staves.push(new Staff(instr.Staves.length));\n    const msrs: Measure[] = this.Sheet.Measures.filter(\n      (m) => m.Instrument === instr,\n    );\n    msrs.forEach((m) => {\n      m.Staves.push(newStaff);\n      m.Clefs.push(new Clef(m.Clefs.length - 1, clef, 1, newStaff.Num));\n      // TODO: Temporarry measure height being set\n      m.Bounds.height = GetStaffHeightUntil(m.Staves);\n    });\n  }\n\n  // TODO: Move\n  FromPitchMap(midiNote: number, clef: string): MappedMidi {\n    const midiMapped: MappedMidi = FromPitchMap(midiNote, this.PitchMap, clef);\n    return midiMapped;\n  }\n}\n\nexport { App };\n","import { App } from \"./App.js\";\nimport { Division, Measure } from \"./Core/Measure.js\";\nimport { ConfigSettings, Theme } from \"./Types/Config.js\";\nimport { ISelectable } from \"./Types/ISelectable.js\";\nimport { Message } from \"./Types/Message.js\";\nimport { KeyMapping } from \"./Workers/Mappings.js\";\n\nlet gSheet: App;\n\nconst keymaps: KeyMapping = {\n  addmeasure: \"a\",\n  changeinputmode: \"n\",\n  value1: \"1\",\n  value2: \"2\",\n  value3: \"3\",\n  value4: \"4\",\n  value5: \"5\",\n  value6: \"6\",\n  restInput: \"r\",\n  delete: \"d\",\n  sharpen: \"+\",\n  flatten: \"-\",\n  scaleToggle: \"'\",\n  save: \"s\",\n  load: \"l\",\n  test_triplet: \"t\",\n};\n\nconst defaultTheme: Theme = {\n  NoteElements: \"black\",\n  SelectColour: \"blue\",\n  UneditableColour: \"gray\",\n  LineColour: \"black\",\n  BackgroundColour: \"gray\",\n  PageColour: \"white\",\n  PageShadowColour: \"darkgray\",\n};\n\nconst test_CONFIG: ConfigSettings = {\n  CameraSettings: {\n    DragEnabled: true,\n    ZoomEnabled: true,\n    Zoom: 4,\n    StartingPosition: { x: 0, y: 0 },\n    CenterMeasures: false,\n  },\n  FormatSettings: {\n    MeasureFormatSettings: { MaxWidth: 100, Selectable: false },\n  },\n  NoteSettings: {\n    InputValue: 0.5,\n  },\n  PageSettings: {\n    UsePages: false,\n    RenderPage: false,\n    RenderBackground: false,\n    ContainerWidth: false,\n  },\n  Theme: defaultTheme,\n};\n\nfunction mouseMove(app: App, canvas: HTMLCanvasElement, e: MouseEvent): void {\n  let rect = canvas.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const y = e.clientY - rect.top;\n  app.Hover(x, y);\n}\n\nfunction mouseDown(app: App, canvas: HTMLCanvasElement, e: MouseEvent): void {\n  e.preventDefault();\n  let rect = canvas.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const y = e.clientY - rect.top;\n  if (e.buttons === 1) {\n    app.Input(x, y, e.shiftKey);\n  } else if (e.buttons === 4) {\n    app.SetCameraDragging(true, x, y);\n  }\n}\n\nfunction mouseUp(app: App, canvas: HTMLCanvasElement, e: MouseEvent): void {\n  let rect = canvas.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const y = e.clientY - rect.top;\n  app.SetCameraDragging(false, 0, 0);\n  app.StopNoteDrag(x, y);\n}\n\nfunction keyDown(app: App, keymaps: any, e: KeyboardEvent): void {\n  const key = e.key;\n  app.KeyInput(key, keymaps);\n}\n\nfunction zoom(app: App, e: WheelEvent): void {\n  if (e.ctrlKey) {\n    e.preventDefault();\n    const scale = e.deltaY * -0.01;\n    scale > 0 ? app.AlterZoom(0.05) : app.AlterZoom(-0.05);\n  }\n}\n\nfunction resize(\n  app: App,\n  context: CanvasRenderingContext2D,\n  canvas: HTMLCanvasElement,\n  container: HTMLElement,\n): void {\n  canvas.width = container.clientWidth - 50;\n  if (app.Config.CameraSettings?.CenterMeasures === true) {\n    app.CenterMeasures();\n  } else if (app.Config.CameraSettings?.CenterPage) {\n    app.CenterPage();\n  }\n  app.AlterZoom(0);\n  app.Update(0, 0);\n}\n\nexport module sheet {\n  export function CreateApp(\n    canvas: HTMLCanvasElement,\n    container: HTMLElement,\n    doc: Document,\n    keyMap: any,\n    notifyCallBack: (msg: Message) => void,\n    config: ConfigSettings,\n  ): App {\n    const ctx = canvas.getContext(\"2d\");\n    const app = new App(canvas, container, ctx, notifyCallBack, config);\n    canvas.addEventListener(\"mousemove\", (e) => mouseMove(app, canvas, e));\n    canvas.addEventListener(\"mousedown\", (e) => mouseDown(app, canvas, e));\n    canvas.addEventListener(\"mouseup\", (e) => mouseUp(app, canvas, e));\n    doc.addEventListener(\"keydown\", (e) => keyDown(app, keyMap, e));\n    window.addEventListener(\"resize\", () =>\n      resize(app, app.Context, canvas, container),\n    );\n    canvas.addEventListener(\"wheel\", (e) => zoom(app, e));\n    screen.orientation.addEventListener(\"change\", (e) =>\n      resize(app, app.Context, canvas, container),\n    );\n    gSheet = app;\n    canvas.width = container.clientWidth;\n    canvas.height = container.clientHeight;\n    app.Update(0, 0);\n    if (config.CameraSettings?.Zoom) {\n      app.SetCameraZoom(config.CameraSettings.Zoom);\n    }\n    if (config.CameraSettings?.CenterMeasures) {\n      app.CenterMeasures();\n    }\n    return app;\n  }\n\n  // API\n  export function ChangeInputMode(): void {\n    gSheet.ChangeInputMode();\n  }\n\n  export function SetAccidental(acc: number): void {\n    gSheet.SetAccidental(acc);\n  }\n\n  export function Sharpen(): void {\n    gSheet.Sharpen();\n  }\n\n  export function Flatten(): void {\n    gSheet.Flatten();\n  }\n\n  export function SetNoteValue(value: number): void {\n    gSheet.SetNoteValue(value);\n  }\n\n  export function AddMeasure(): void {\n    gSheet.AddMeasure();\n  }\n\n  export function AddStaff(instrIndex: number, clefString: string): void {\n    gSheet.AddStaff(instrIndex, clefString);\n  }\n\n  export function AddNoteOnMeasure(\n    msr: Measure,\n    noteVal: number,\n    line: number,\n    div: Division,\n    rest: boolean,\n  ): void {\n    gSheet.AddNoteOnMeasure(msr, noteVal, line, div, rest);\n  }\n\n  export function Delete(): void {\n    gSheet.Delete();\n  }\n\n  export function SelectById(id: number): ISelectable {\n    return gSheet.SelectById(id);\n  }\n\n  export function ToggleFormatting(): void {\n    gSheet.ToggleFormatting();\n  }\n\n  export function DeleteSelected(): void {\n    gSheet.Delete();\n  }\n\n  export function ChangeTimeSignature(\n    top: number,\n    bottom: number,\n    transpose: boolean = false,\n  ): void {\n    gSheet.ChangeTimeSignature(top, bottom, transpose);\n  }\n}\n//public exports\nexport * from \"./Workers/Mappings.js\";\nexport * from \"./App.js\";\nexport * from \"./Workers/Loader.js\";\nexport * from \"./Core/Note.js\";\nexport * from \"./Workers/Pitcher.js\";\nexport * from \"./Types/Message.js\";\nexport * from \"./Types/Config.js\";\n"],"mappings":"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","names":["Sheet","properties","Staff","num","RenderMeasureLines","renderProps","measure","lastMeasure","theme","context","camera","endsWidth","startWidth","staves","staffHeight","GetStaffHeightUntil","yStart","GetStaffMiddleLine","measureBegin","measureEnd","measureEndDouble","staffNum","height","s","i","lineCount","GetStaffHeight","staff","GetStaffActualMidLine","linesBefore","RenderStaffLines","msr","canvas","line_space","line_width","staffMidLine","l","lineString","linePath","Stem","bounds","x","y","cam","context","theme","ValueMap","GetLargestValues","duration","remainingDiff","values","key","val","Bounds","x","y","width","height","ix","iy","cam","stdFontSize","RenderSymbol","renderProps","symbol","x","y","theme","selected","canvas","context","camera","stdFontSize","crotchetRest","quaverRest","semiQuaverRest","demiSemiQuaverRest","noteXBuffer","RenderNote","note","renderProps","Bounds","selected","flipNote","stemDir","theme","colour","x","y","width","height","canvas","context","camera","flipNoteOffset","posString","noteString","RenderSymbol","RenderDots","dotXStart","dotCount","circle","d","lineY","cpath","RenderRest","ctx","div","cam","msr","path","demiSemiQuaverRest","semiQuaverRest","quaverRest","crotchetRest","RenderTupletAnnotation","coords","count","GetTupletGlyph","RenderTuplets","divisions","notes","staff","divs","a","b","foundTuplet","tupleX","tupleXEnd","tupleY","tupleCount","i","notesInDiv","n","nArray","DetermineStemDirection","RenderTies","divNotes","nextDivNotes","tiedTo","nextNote","x1","y1","x2","y2","curveOffset","curveStartOffset","measure","dir","match","middleLine","highestLine","lowestLine","na","renderLedgerLines","notes","division","renderProps","staff","msr","theme","colour","canvas","context","camera","dynNoteXBuffer","noteXBuffer","numOfAcc","n","ledgerX","ledgerString","bdNotes","note","midLine","a","b","highestLine","lowestLine","l","ledgerY","path","h","Beam","bounds","start","end","context","cam","count","stemDir","theme","baseThickness","svgLine","yBuffer","flagBuffer","i","line","DetermineBeamDirection","measure","divGroup","divisions","a","b","firstDivTopLine","lastDivTopLine","firstDivBotLine","lastDivBotLine","Clef","id","type","beat","staff","Bounds","renderProps","theme","clefSymbol","RenderSymbol","msr","div","d","xPosition","xBuffer","lineBuffer","yBuffer","msrMidLine","x","y","cam","GetNoteClefType","noteBeat","clefType","a","b","c","NoteNames","ClefPitchRef","calcPitch","midiNumber","ReturnLineFromMidi","clef","midi","staff","onNote","a4Midi","accidental","a4Line","line","i","ReturnMidiNumber","acc","a4line","midiNote","GeneratePitchMap","map","midiMap","noteNameCount","noteNumberCount","lineNum","lineCounter","lineMax","n","NoteNames","calcPitch","FromPitchMap","midiNote","clef","mapped","alteredNote","Note","props","Bounds","bounds","id","s","e","x","y","cam","line","ReturnMidiNumber","noteXBuffer","AddNoteOnMeasure","msr","noteValue","line","beat","rest","InputNote","Bounds","InputOnMeasure","x","y","cam","inputtingNote","beatOver","b","division","tupleCount","notesInDiv","n","addingToTuple","clefType","GetNoteClefType","noteProps","newNote","Note","MeasureHasRoom","AddToDivision","UpdateNoteBounds","staff","GetDivisionGroups","g","Divisions","Notes","stemDir","DetermineStemDirection","div","divNotes","a","i","flipNoteOffset","IsFlippedNote","dynNoteXBuffer","numOfAcc","duration","tuple","IsRestOnBeat","notes","notesOnBeat","restFound","remainingValue","GetStaffMiddleLine","tying","tStart","tEnd","d","newNoteProps","note","remValue","tiedNoteValues","GetLargestValues","tiedStart","tiedEnd","nextBeat","dur","shouldTie","tiedNote","noteObj","CreateTuplet","selNotes","count","measure","tupleDuration","newDuration","lastBeat","details","DivisionMinWidth","CreateDivisions","msr","notes","staff","cam","divisions","nextBeat","runningValue","a","b","n","restProps","GetStaffMiddleLine","Note","div","CreateBeatBounds","GenerateMissingBeatDivisions","UpdateNoteBounds","beat","duration","width","height","GetStaffHeight","x","y","GetStaffHeightUntil","Bounds","ResizeDivisions","msr","divisions","staff","divs","d","s0divs","s1divs","divCount","minWidth","DivisionMinWidth","xBuffer","a","b","div","i","lastDivEnd","GenerateMissingBeatDivisions","sortedDivs","divA","divB","startingBeat","divisionsToAdd","notesOnDiv","n","val","newDivs","GetLargestValues","sBeat","v","CreateBeatBounds","clefType","GetNoteClefType","restProps","GetStaffMiddleLine","Note","msrDuration","reSortedDivs","lastDiv","lastBeat","lastDivisionsToAdd","rem","GetDivisionGroups","msr","staff","divGroups","divs","notes","startFlag","d","a","b","div","i","divNotes","n","restBeat","IsRestOnBeat","beat","notesOnBeat","restFound","CreateBeams","divGroup","stems","measure","beams","a","b","beamOne","Beam","Bounds","ACC_OFFSET","ReturnAccidentalOffset","notes","offset","nA","n","a","b","CascadingOffset","CascadingOffset","notes","offset","_","ACC_OFFSET","sharpPath","doubleSharp","flatPath","naturalPath","RenderAccidental","renderProps","note","type","offset","theme","canvas","context","camera","posString","dflatString","RenderSymbol","KeySignatures","RenderKeySignature","renderProps","msr","keyString","clefString","xOff","canvas","context","camera","keyProps","GetKeyProps","posString","i","sharpPath","flatPath","props","notes","KeySignatures","acc","fromTreble","accidental","lines","AlterHeightForBeam","stemDir","beamDir","height","alterAmount","StemToCenter","lowestLine","highestLine","midLine","CreateStems","notes","divisions","staff","measure","camera","stems","dynNoteXBuffer","DetermineStemDirection","hNote","lNote","na","n","staffMidLinePos","GetStaffHeightUntil","GetStaffMiddleLine","xBuffer","DetermineBeamDirection","shouldBeam","div","i","beamAlt","divNotes","numOfAcc","a","b","stemX","stem","Stem","Bounds","diff","staffRelativeMid","GetStaffActualMidLine","line_space","noteXBuffer","RenderMeasure","measure","renderProps","hovId","mousePos","lastMeasure","noteInput","index","restInput","noteValue","config","RenderHovered","RenderMeasureBase","s","RenderNotes","MiddleLineBounds","Bounds","b","diff","theme","canvas","context","camera","line","noteY","line_space","tempNoteProps","tempNote","Note","RenderRest","RenderNote","renderLedgerLines","msr","RenderMeasureLines","RenderStaffLines","RenderMeasureClef","xOff","RenderKeySignature","RenderTimeSig","RenderMeasureClef","renderProps","msr","theme","canvas","context","camera","clef","div","d","RenderTimeSig","top","bottom","xOffset","RenderNotes","staff","i","divNotes","note","a","b","IsRestOnBeat","RenderRest","renderLedgerLines","GetDivisionGroups","group","stemDir","DetermineStemDirection","beamAngle","DetermineBeamDirection","stems","CreateStems","beams","CreateBeams","s","hasFlipped","dN","n","isFlipped","IsFlippedNote","flipNoteOffset","RenderNote","accNotes","offsets","ReturnAccidentalOffset","RenderAccidental","RenderDots","noteXBuffer","RenderTies","RenderTuplets","notes","index","dir","flipped","countAbove","countBelow","nLine","line","totalCount","notePos","RenderPage","page","canvas","context","cam","formatting","config","measures","_a","a4w","a4h","x","y","adjusterColour","lineColour","RenderAdjuster","line","dir","colour","Renderer","c","ctx","measures","pages","hovElements","mousePos","cam","noteInput","restInput","formatting","config","noteValue","_a","_b","page","RenderPage","m","i","renderProps","lastMeasure","msr","RenderMeasure","RenderDebug","sheet","selector","MessageType","ClearMessage","TimeSignature","top","bottom","useSymbol","Bounds","renderProps","msr","theme","tGlyph","GetTimeSignatureGlyph","bGlyph","s","RenderSymbol","staff","divY","div","msrMidLine","GetStaffMiddleLine","x","y","cam","b","glyph","CreateTimeSignature","props","Measure","properties","runningId","GetStaffHeightUntil","CreateTimeSignature","s","i","clef","Clef","y","staffNum","cam","relYPos","line","actualLine","bounds","Bounds","staff","prevStaffLines","testLine","relativeLine","afterInput","CreateDivisions","ResizeDivisions","UpdateNoteBounds","prevMsr","note","fromInput","msg","beat","n","ignoreNotes","duration","tuple","tupleDetails","clefType","GetNoteClefType","restProps","Note","DivisionMinWidth","staffZeroDivs","div","staffOneDivs","lowestValue","a","b","sel","x","top","bottom","transpose","sTopLine","sBotLine","lineHeight","mh","CreateInstrument","y","config","staff","Staff","CreateDefaultMeasure","id","instr","page","cam","callback","settings","msrHeight","mh","props","Bounds","Clef","Measure","CreateMeasure","bounds","timeSignature","keySignature","clef","staves","runningId","renderClef","Camera","x","y","Selector","msr","x","y","cam","shiftKey","msg","elems","elem","elements","selectedElements","UpdateNoteBounds","e","n","m","tiedNotes","SelectTiedNotes","measure","notes","note","noteIndex","i","indexes","key","measures","id","selectable","nArray","index","clef","c","noteHit","div","na","deselect","tStart","tEnd","tn","canonSave","randomSaveOne","allSaves","canonSave","randomSaveOne","KeyPress","app","key","keyMaps","allSaves","defaultMargins","scale","a4w","a4h","Page","x","y","pageNum","Bounds","lineHeight","latestLine","newLine","SetPagesAndLines","measures","pages","usePage","defaultLineHeight","page","runningWidth","currentPage","currentLine","msrsOnLine","pageWidth","m","msr","i","msrWidth","GetMaxWidth","config","cam","_a","_b","maxWidth","ResizeMeasuresOnPage","pageSize","line","msrs","msrsLineWidth","fillWidth","calculatedWidth","c","LoadSheet","sheet","page","cam","instr","savedJson","callback","runningId","m","i","notes","n","noteProps","newNote","Note","msr","CreateMeasure","SaveSheet","saved","App","canvas","container","context","notifyCallback","config","load","_a","_b","_c","GeneratePitchMap","ClearMessage","Selector","camStartX","camStartY","Camera","newPage","Page","sProps","page","CreateInstrument","CreateDefaultMeasure","Sheet","x","y","m","d","UpdateNoteBounds","msr","elem","shiftKey","msrOver","InputOnMeasure","selectedMeasureElement","divOver","mousePos","Renderer","RenderDebug","newMeasureID","prevMsr","i","latestLine","newMeasureBounds","Bounds","newMsr","CreateMeasure","liner","line","lineDiff","e","n","dragging","num","measures","lineHeight","SetPagesAndLines","ResizeMeasuresOnPage","val","acc","note","key","keymaps","KeyPress","id","sel","SaveSheet","sheet","LoadSheet","allSaves","CreateTuplet","top","bottom","transpose","msrWidth","padding","z","totalWidth","emptySpace","noteValue","beat","rest","AddNoteOnMeasure","instrNum","clef","instr","newStaff","Staff","Clef","GetStaffHeightUntil","midiNote","FromPitchMap","gSheet","mouseMove","app","canvas","e","rect","x","y","mouseDown","mouseUp","keyDown","keymaps","key","zoom","resize","context","container","_a","_b","sheet","CreateApp","doc","keyMap","notifyCallBack","config","ctx","App","gSheet","ChangeInputMode","SetAccidental","acc","Sharpen","Flatten","SetNoteValue","value","AddMeasure","AddStaff","instrIndex","clefString","AddNoteOnMeasure","msr","noteVal","line","div","rest","Delete","SelectById","id","ToggleFormatting","DeleteSelected","ChangeTimeSignature","top","bottom","transpose"]}