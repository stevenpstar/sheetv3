{"version":3,"sources":["../src/Core/Sheet.ts","../src/Types/Bounds.ts","../src/Types/Message.ts","../src/Renderers/MusicFont.Renderer.ts","../src/Core/Clef.ts","../src/Workers/Pitcher.ts","../src/Core/Note.ts","../src/Core/Values.ts","../src/Core/Division.ts","../src/Workers/NoteInput.ts","../src/Core/TimeSignatures.ts","../src/Core/Measure.ts","../src/Core/Stem.ts","../src/Renderers/Accidentals.Renderer.ts","../src/Renderers/Note.Renderer.ts","../src/Core/Beam.ts","../src/Renderers/Elements/TrebleClef.ts","../src/Core/KeySignatures.ts","../src/Renderers/KeySignature.Renderer.ts","../src/Renderers/Measure.Renderer.ts","../src/Renderers/Page.Renderer.ts","../src/Core/Renderer.ts","../src/Factory/Instrument.Factory.ts","../src/Core/Camera.ts","../src/Workers/Selector.ts","../src/testsaves.ts","../src/Workers/Mappings.ts","../src/Core/Page.ts","../src/Workers/Formatter.ts","../src/Workers/Loader.ts","../src/App.ts","../src/entry.ts"],"sourcesContent":["import { Instrument } from './Instrument.js';\nimport { Measure } from './Measure.js';\nimport { Page } from './Page.js';\n\ninterface SheetProps {\n  Instruments: Instrument[];\n  KeySignature: { key: string, measureNo: number }[];\n  Measures: Measure[];\n  Pages: Page[];\n}\nclass Sheet {\n  Instruments: Instrument[];\n  KeySignature: { key: string, measureNo: number}[];\n  Measures: Measure[];\n  Pages: Page[];\n\n  constructor(properties: SheetProps) {\n    this.Instruments = properties.Instruments; \n    this.KeySignature = properties.KeySignature;\n    this.Measures = properties.Measures;\n    this.Pages = properties.Pages;\n  }\n}\n\nexport { Sheet, SheetProps };\n","import { Camera } from \"../Core/Camera\";\n\nclass Bounds {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  constructor(x: number, y: number, width: number, height: number) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  IsHovered(ix: number, iy: number, cam: Camera): boolean {\n      return (ix >= this.x + cam.x && ix <= this.x + cam.x + (this.width) &&\n            iy >= this.y + cam.y && iy <= this.y + cam.y + (this.height));\n  }\n}\n\nexport { Bounds };\n","enum MessageType {\n  None,\n  Selection,\n  Deletion,\n  InputChange,\n  AddNote,\n}\ntype MessageData = {\n  MessageType: MessageType;\n  Message: { msg: string, obj: any };\n}\ninterface Message {\n  messageString: string;\n  messageData: MessageData;\n}\n\nfunction ClearMessage(): Message {\n  return {\n    messageString: \"\",\n    messageData: {\n      MessageType: MessageType.None,\n      Message: { msg: \"\", obj: {} }\n    }\n  }\n}\n\nexport { Message, ClearMessage, MessageType }\n","import { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\n\nconst stdFontSize = 42; enum Clefs {\n  G = \"\\u{1D11E}\",\n  GOttavaBassa = \"\\u{1D120}\",\n  GOttavaAlta = \"\\u{1D11F}\",\n  GQuindicesimaBassa = \"\\u{E051}\",\n  F = \"\\u{1D122}\",\n}\n\nenum NoteHeads {\n  whole = \"\\u{E0A2}\",\n  minim = \"\\u{E0A3}\",\n  crotchet = \"\\u{E0A4}\",\n}\n\nenum TimeSigNumbers {\n  Zero = \"\\u{E080}\",\n  One = \"\\u{E081}\",\n  Two = \"\\u{E082}\",\n  Three = \"\\u{E083}\",\n  Four = \"\\u{E084}\",\n  Five = \"\\u{E085}\",\n  Six = \"\\u{E086}\",\n  Seven = \"\\u{E087}\",\n  Eight = \"\\u{E088}\",\n  Nine = \"\\u{E089}\",\n  Common = \"\\u{E08A}\",\n  CutCommon = \"\\u{E08B}\"\n}\n\nenum TupletNumbers {\n  Zero = \"\\u{E880}\",\n  One = \"\\u{E881}\",\n  Two = \"\\u{E882}\",\n  Three = \"\\u{E883}\",\n  Four = \"\\u{E884}\",\n  Five = \"\\u{E885}\",\n  Six = \"\\u{E886}\",\n  Seven = \"\\u{E887}\",\n  Eight = \"\\u{E888}\",\n  Nine = \"\\u{E889}\",\n  Colon = \"\\u{E88A}\",\n}\n\nenum StdAccidentals {\n  Natural = \"\\u{E261}\",\n  NaturalSharp = \"\\u{E268}\",\n  NaturalFlat = \"\\u{E267}\",\n  Flat = \"\\u{E260}\",\n  DoubleFlat = \"\\u{E264}\",\n  TripleFlat = \"\\u{E266}\",\n  Sharp = \"\\u{E262}\",\n  DoubleSharp = \"\\u{E263}\",\n  TripleSharp = \"\\u{E265}\",\n  ParenthLeft = \"\\u{E26A}\",\n  ParenthRight = \"\\u{E26B}\",\n  ParenthNatural = \"\\u{E26A}\\u{E261}\\u{E26B}\",\n  ParenthSharp = \"\\u{E26A}\\u{E262}\\u{E26B}\",\n  ParenthFlat = \"\\u{E26A}\\u{E260}\\u{E26B}\",\n}\n\nfunction RenderSymbol(\n  renderProps: RenderProperties,\n  symbol: string,\n  x: number, y: number,\n  theme: Theme,\n  selected: boolean): void {\n\n    const { canvas, context, camera } = renderProps;\n    context.fillStyle = selected ? theme.SelectColour : theme.NoteElements;\n    context.font = `${stdFontSize}px Bravura`;\n    context.fillText(symbol, x + camera.x, y + camera.y);\n}\n\nexport { \n  Clefs,\n  NoteHeads,\n  StdAccidentals,\n  TimeSigNumbers,\n  TupletNumbers,\n  RenderSymbol }\n","import { Clefs, RenderSymbol } from \"../Renderers/MusicFont.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\nimport { StaffType } from \"./Instrument.js\";\nimport { Measure } from \"./Measure.js\";\n\n// TODO: Move this somewhere central\nconst lineSpace = 10;\n\nclass Clef implements ISelectable {\n  ID: number;\n  Selected: boolean;\n  Position: { x: number, y: number };\n  Bounds: Bounds;\n  SelType: SelectableTypes;\n  Type: string;\n  Beat: number;\n  Editable: boolean;\n  constructor(id: number, pos: { x: number, y: number }, type: string, beat: number) {\n    this.ID = id;\n    this.Position = pos;\n    this.Bounds = new Bounds(0, 0, 0, 0);\n    this.Type = type;\n    this.SelType = SelectableTypes.Clef;\n    this.Beat = beat;\n    this.Selected = false;\n    // TODO: shouldn't only be true\n    this.Editable = true;\n  }\n\n  render(renderProps: RenderProperties, theme: Theme): void {\n    let clefSymbol: Clefs;\n    switch (this.Type) {\n      case \"treble\":\n        clefSymbol = Clefs.G;\n        break;\n      case \"bass\":\n        clefSymbol = Clefs.F;\n        break;\n      default:\n        clefSymbol = Clefs.G;\n    }\n\n    RenderSymbol(renderProps,\n                 clefSymbol,\n                 this.Position.x,\n                 this.Position.y,\n                  theme,\n                  this.Selected);\n  //  renderProps.context.strokeStyle = \"green\";\n  //  renderProps.context.strokeRect(\n  //    this.Bounds.x + renderProps.camera.x,\n  //    this.Bounds.y + renderProps.camera.y,\n  //    this.Bounds.width,\n  //    this.Bounds.height);\n  }\n\n  SetBounds(msr: Measure, staff: number): void {\n    // There is a difference between position and bounds\n    // Position is for visually positioning the clef glyph, bounds is for selection\n    const div = msr.Divisions.find(d => d.Beat === this.Beat && d.Staff === staff);\n    const xPosition: number = this.Beat === 1 ? \n      msr.Bounds.x : div.Bounds.x;\n    const xBuffer = 3;\n    // Treble as default, 2\n    let lineBuffer = 2;\n//    let yBuffer = staff === 0 ? 0 : msr.GetMeasureHeight();\n    let yBuffer = 0;\n    const msrMidLine = staff === StaffType.Single ?\n      Measure.GetMeasureMidLine(msr) : msr.GetGrandMeasureMidLine();\n    this.Position.x = xPosition + xBuffer;\n    this.Bounds.x = xPosition + xBuffer;\n    switch (this.Type) {\n      case \"bass\":\n        lineBuffer = -2;\n    }\n    this.Position.y = div.Bounds.y + yBuffer + ((msrMidLine + lineBuffer) * 5);\n    this.Bounds.y = div.Bounds.y;\n    this.Bounds.width = 30;\n    this.Bounds.height = 85;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n}\n\nfunction GetNoteClefType(msr: Measure, noteBeat: number, staff: StaffType): string {\n  let clefType: string = staff === StaffType.Single ?\n    \"treble\" : \"bass\";\n  if (staff === StaffType.Single) {\n    msr.Clefs.sort((a: Clef, b: Clef) => {\n      return a.Beat - b.Beat;\n    })\n    msr.Clefs.forEach((c: Clef) => {\n      // clefs can change part way through measure\n      // need to find latest clef to pass on to note (by beat)\n      if (c.Beat <= noteBeat) {\n        clefType = c.Type;\n        return;\n      }\n    });\n  } else {\n    msr.GrandClefs.sort((a: Clef, b: Clef) => {\n      return a.Beat - b.Beat;\n    })\n    msr.GrandClefs.forEach((c: Clef) => {\n      // clefs can change part way through measure\n      // need to find latest clef to pass on to note (by beat)\n      if (c.Beat <= noteBeat) {\n        clefType = c.Type;\n        return;\n      }\n    });\n  }\n  return clefType;\n}\n\nexport { Clef, GetNoteClefType }\n","const MIDI_START = 21;\nconst MIDI_END = 127;\n\nconst A4Midi: number = 69;\nconst A4Hz: number = 440;\n\n//const NoteNames = [\n//  \"C\",\n//  \"C#\",\n//  \"D\",\n//  \"D#\",\n//  \"E\",\n//  \"F\",\n//  \"F#\",\n//  \"G\",\n//  \"G#\",\n//  \"A\",\n//  \"A#\",\n//  \"B\"\n//];\n\nconst NoteNames = [\n  \"A\",\n  \"A#\",\n  \"B\",\n  \"C\",\n  \"C#\",\n  \"D\",\n  \"D#\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"G\",\n  \"G#\",\n];\n\n\n// Clef type to line number of A4 (440hz)\nconst ClefPitchRef: Map<string, number> = new Map<string, number>(\n  [\n    [\"treble\", 16],\n    [\"bass\", 3], \n  ]\n)\n\n// midiNumber = the integer assigned to the note value, A4 = 69 = 440hz\nfunction calcPitch(midiNumber: number): number {\n  return Math.floor(A4Hz * Math.pow(2, ((midiNumber-A4Midi)/12)) * 1000) / 1000; \n}\n\nfunction ReturnLineFromMidi(clef: string, midi: number, staff: number = 0): number {\n  let onNote = 0; // A note entry in NoteNames array\n  let a4Midi = 69;\n  let accidental = 0;\n  const a4Line = staff === 0 ? 16 : 34;\n  let line = a4Line;\n  if (midi === a4Midi) {\n    return a4Line;\n  }\n  if (midi > a4Midi) {\n    for (let i=a4Midi;i<midi;i++) {\n      console.log(\"starting\");\n      console.log(NoteNames[onNote]);\n      if (NoteNames[onNote] === \"C\" || NoteNames[onNote] === \"F\") {\n        line -= 0;\n        if (onNote === 0) {\n          onNote = NoteNames.length-1;\n        } else {\n          onNote -= 1;\n        }\n      } else {\n        line -= 1;\n        onNote -= 1;\n      }\n    }\n  }\n  else if (a4Midi > midi) {\n    for (let i=a4Midi;i>midi;i--) {\n      console.log(\"starting\");\n      console.log(NoteNames[onNote]);\n\n      if (NoteNames[onNote] === \"B\" || NoteNames[onNote] === \"E\") {\n        line += 0;\n        if (onNote === NoteNames.length-1) {\n          onNote = 0;\n        } else {\n          onNote += 1;\n        }\n      } else {\n        line += 1;\n        onNote += 1;\n      }\n    }\n  }\n\n  console.log(\"midiNote: \", midi);\n  console.log(\"line: \", line);\n  console.log(\"accidental\");\n\n  return line;\n}\n\nfunction ReturnMidiNumber(clef: string, line: number, acc: number = 0, staff: number = 0): number {\n\n  let onNote = 0; // A entry in NoteNames array\n  let a4line = ClefPitchRef.get(clef);\n  if (staff === 1) {\n    a4line = 34;\n  } else {\n    a4line = 16;\n  }\n  let midiNumber = 69;\n  let midiNote = midiNumber;\n  if (line === a4line) { \n    return midiNumber + acc; }\n\n  else if (line > a4line) {\n    for (let i=a4line;i<line;i++) {\n      if (NoteNames[onNote] === \"C\" || NoteNames[onNote] === \"F\") {\n        midiNote -= 1;\n        onNote -= 1;\n      } else {\n        if (onNote === 0) {\n          onNote = NoteNames.length-2;\n        } else {\n          onNote -= 2;\n        }\n        midiNote -= 2;\n      }\n    }\n  } else {\n    for (let i=a4line;i>line;i--) {\n\n        console.log(\"midiNote+1\");\n      if (NoteNames[onNote] === \"B\" || NoteNames[onNote] === \"E\") {\n        midiNote += 1;\n        if (onNote === NoteNames.length-1) {\n          onNote = 0;\n        } else {\n          onNote += 1;\n        }\n      } else {\n        midiNote += 2;\n        onNote += 2;\n      }\n    }\n  }\n\n  midiNote += acc;\n\n  return midiNote;\n}\n\nfunction ReturnFrequency(clef: string, line: number): number {\n  const a4line = ClefPitchRef.get(clef);\n  let diff = 0;\n  let midiNumber = 69;\n  if (line === a4line) { return A4Hz; }\n\n  if (line > a4line) {\n    diff = line - a4line;\n    midiNumber += diff;\n  } else {\n    if (line <= 0) {\n      diff = a4line - line;\n      midiNumber -= diff;\n    } else {\n      diff = a4line + -line;\n      midiNumber -= diff;\n    }\n  }\n\n  return calcPitch(midiNumber);\n}\n\ntype MappedMidi = {\n  NoteString: string;\n  Frequency: number;\n  // only for treble clef atm\n  Line: number;\n  Accidental: number;\n}\n\nfunction nextLineCounter(counter: number): number {\n  let next = counter + 1;\n  if (counter + 1 > 11) {\n    next = 0;\n  }\n  return next;\n}\n\nfunction GeneratePitchMap(): Map<number, MappedMidi> {\n  let map = new Map<string, number>();\n  let midiMap = new Map<number, MappedMidi>();\n  let noteNameCount = 0;\n  let noteNumberCount = 0;\n  let lineNum = 16 + 30 - 1;\n  let lineCounter = 0;\n  let lineMax = 11;\n  for (let n=MIDI_START;n<=MIDI_END;n++) {\n    if (noteNameCount >= NoteNames.length) {\n      noteNameCount = 0;\n      noteNumberCount++;\n    }\n    lineNum = [0, 2, 3, 5, 7, 8, 10].includes(lineCounter) ? lineNum - 1 : lineNum;\n    map.set((NoteNames[noteNameCount] + noteNumberCount).toString(), calcPitch(n));\n    midiMap.set(n, {\n      NoteString: (NoteNames[noteNameCount] + noteNumberCount).toString(),\n      Frequency: calcPitch(n),\n      Line: lineNum,\n      Accidental: NoteNames[noteNameCount].includes(\"#\") ? 1 : 0,\n    })\n    noteNameCount++;\n\n    if (lineCounter >= lineMax) {\n      lineCounter = 0;\n    } else {\n      lineCounter++;\n    }\n  }\n\n  return midiMap;\n}\n\nexport { GeneratePitchMap, ReturnMidiNumber, ReturnLineFromMidi,MappedMidi };\n\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { ReturnMidiNumber } from \"../Workers/Pitcher.js\";\nimport { Camera } from \"./Camera.js\";\n\ninterface TupleDetails {\n  StartBeat: number;\n  EndBeat: number;\n  Value: number; // Total tuple value, not value of individual note\n  Count: number; // Total tuple count (3 for triplet etc.)\n}\ninterface NoteProps {\n  Beat: number;\n  Duration: number;\n  Line: number;\n  Rest: boolean;\n  Tied: boolean;\n  Staff: number;\n  Tuple: boolean;\n  TupleDetails?: TupleDetails;\n  Clef: string;\n  Editable?: boolean;\n}\n\nclass Note implements ISelectable {\n  Beat: number;\n  Duration: number;\n  Line: number;\n  Rest: boolean;\n  Tied: boolean;\n  Accidental: number\n  ID: number;\n  SelType: SelectableTypes;\n  Clef: string;\n  Editable: boolean;\n\n  TiedStart: number; // beat\n  TiedEnd: number; // beat\n\n  Bounds: Bounds;\n  Selected: boolean;\n\n  Staff: number;\n\n  Tuple: boolean;\n  TupleDetails?: TupleDetails;\n\n  constructor(props: NoteProps) {\n    this.Beat = props.Beat;\n    this.Duration = props.Duration;\n    this.Line = props.Line;\n    this.Rest = props.Rest;\n    this.Tied = props.Tied;\n    this.Accidental = 0;\n    this.Staff = props.Staff;\n    this.Clef = props.Clef;\n\n    this.Selected = false;\n    this.SelType = SelectableTypes.Note;\n    this.Bounds = new Bounds(0, 0, 0, 0);\n    this.Bounds.width = 12;\n    this.Bounds.height = 10;\n    this.Editable = props.Editable !== undefined ? props.Editable : true;\n    this.ID = -1;\n\n    this.Tuple = props.Tuple;\n    if (props.TupleDetails) {\n      this.TupleDetails = props.TupleDetails;\n    }\n    // note position is not based on bounds property\n  }\n\n  SetBounds(bounds: Bounds): void {\n    this.Bounds = bounds;\n  }\n\n  SetID(id: number): void {\n    this.ID = id;\n  }\n\n  SetTiedStartEnd(s: number, e: number): void {\n    this.TiedStart = s;\n    this.TiedEnd = e;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n\n  GetMidiNumber(): number {\n    const line = this.Staff === 0 ? this.Line : \n      this.Line - 1000;\n    return ReturnMidiNumber(this.Clef, line, this.Staff);\n  }\n}\n\nexport { Note, NoteProps, TupleDetails }\n","enum NoteValues {\n  n32 = 0.03125,\n  n32d = n32 + (n32 / 2),\n  n32dd = n32d + (n32 / 4),\n  n32ddd = n32dd + (n32 / 8),\n  n16 = 0.0625,\n  n16d = n16 + (n16 / 2),\n  n16dd = n16d + (n16 / 4),\n  n16ddd = n16dd + (n16 / 8),\n  n8 = 0.125,\n  n8d = n8 + (n8 / 2),\n  n8dd = n8d + (n8 / 4),\n  n8ddd = n8dd + (n8 / 8),\n  n4 = 0.25,\n  n4d = n4 + (n4 / 2),\n  n4dd = n4d + (n4 / 4),\n  n4ddd = n4dd + (n4 / 8),\n  n2 = 0.5,\n  n2d = n2 + (n2 / 2),\n  n2dd = n2d + (n2 / 4),\n  n2ddd = n2dd + (n2 / 8),\n  n1 = 1,\n  n1d = n1 + (n1 / 2),\n  n1dd = n1d + (n1 / 4),\n  n1ddd = n1dd + (n1 / 8 )\n}\n\nconst ValueMap = new Map<number, number>([\n  [1, NoteValues.n1],\n  [0.5, NoteValues.n2],\n  [0.25, NoteValues.n4],\n  [0.125, NoteValues.n8],\n  [0.0625, NoteValues.n16],\n  [0.03125, NoteValues.n32],\n]);\n\nfunction GetLargestValues(duration: number): number[] {\n  let remainingDiff = duration;\n  let values: number[] = [];\n  const divByStdVal = duration % NoteValues.n32 === 0;\n  if (!divByStdVal) {\n    console.error(\"Not divisible by standard value, not implemented\");\n  }\n  // check if the duration matches a standard value perfectly\n  if (ValueMap.has(duration)) {\n    values.push(duration);\n    remainingDiff -= duration;\n    if (remainingDiff !== 0) { console.error(\"HUH?\"); }\n  }\n  while (remainingDiff > 0) {\n    for (let [key, val] of ValueMap) {\n      if (ValueMap.get(key) <= remainingDiff) {\n        values.push(ValueMap.get(key));\n        remainingDiff -= ValueMap.get(key);\n      }\n    }\n    // Emergency exit\n    if (remainingDiff < NoteValues.n32) {\n      remainingDiff = 0;\n    }\n  }\n\n  return values;\n}\n\nexport { NoteValues, GetLargestValues }\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { UpdateNoteBounds } from \"../Workers/NoteInput.js\";\nimport { Camera } from \"./Camera.js\";\nimport { GetNoteClefType } from \"./Clef.js\";\nimport { StaffType } from \"./Instrument.js\";\nimport { Clef, Measure } from \"./Measure.js\";\nimport { Note, NoteProps } from \"./Note.js\";\nimport { GetLargestValues } from \"./Values.js\";\n\ninterface Division {\n  Beat: number;\n  Duration: number;\n  Bounds: Bounds;\n  Staff: number;\n}\n\ninterface DivGroup {\n  Divisions: Division[];\n  Notes: Array<Note[]>;\n};\n\ninterface DivGroups {\n  DivGroups: DivGroup[];\n}\n\nconst DivisionMinWidth = 30;\nconst DivisionMaxWidth = 40;\n\n\nfunction CreateDivisions(msr: Measure, notes: Note[], staff: number, cam: Camera): Division[] {\n  const divisions: Division[] = [];\n  let nextBeat = 0;\n  let runningValue = 0; \n\n  notes.sort((a: Note, b: Note) => {\n    return a.Beat - b.Beat;\n  });\n\n  if (notes.filter(n => n.Staff === staff).length === 0) {\n      const restProps: NoteProps = {\n      Beat: 1,\n      Duration: 1,\n      Line: staff === 0 ? msr.SALineMid : msr.SBLineMid,\n      Rest: true,\n      Tied: false,\n      Staff: staff,\n      Tuple: false,\n      Clef: staff === 0 ? \"treble\" : \"bass\",\n    };\n    msr.AddNote(new Note(restProps));\n  }\n  notes.filter(n => n.Staff === staff).forEach(n => {\n    if (!divisions.find(div => div.Beat === n.Beat && div.Staff === n.Staff)) {\n      divisions.push(\n        {\n          Beat: n.Beat,\n          Duration: n.Duration,\n          Bounds: CreateBeatBounds(msr, n.Beat, n.Duration, staff, cam),\n          Staff: staff\n        });\n        if (!n.Tuple) {\n          nextBeat = n.Beat + (n.Duration * msr.TimeSignature.bottom);\n        } else {\n          nextBeat = n.Beat + (n.Duration / n.TupleDetails.Count * msr.TimeSignature.bottom);\n        }\n        runningValue += n.Duration;\n    }\n  });\n  if (runningValue > 0 && (nextBeat - 1) < msr.TimeSignature.bottom) {\n    GenerateMissingBeatDivisions(msr, divisions, staff);\n  }\n  GenerateMissingBeatDivisions(msr, divisions, staff);\n  UpdateNoteBounds(msr, staff);\n  return divisions;\n}\n\nfunction CreateBeatBounds(msr: Measure, beat: number, duration: number, staff: number, cam: Camera): Bounds {\n  // single height\n  const singleHeight = msr.GetMeasureHeight();\n  const grandHeight = msr.GetGrandMeasureHeight() - singleHeight;\n    const height = staff === StaffType.Grand ? \n    grandHeight : singleHeight; // height will always be max\n    const width = msr.Bounds.width * duration; // value will max at 1 (entire measure)\n  const y = staff === 0 ? msr.Bounds.y : \n    msr.Bounds.y + singleHeight;\n  const x = msr.Bounds.x + msr.XOffset + ((beat - 1) / msr.TimeSignature.bottom) * msr.Bounds.width;\n  return new Bounds(x, y, width, height);\n}\n\nfunction PositionDivByBeat(msr: Measure, divisions: Division[]): void {\n  const s0divs = divisions.filter(d => d.Staff === 0);\n  const s1divs = divisions.filter(d => d.Staff === 1);\n  if (s1divs.length > s0divs.length) {\n    divisions.forEach((div: Division) => {\n      div.Bounds.x = 0;\n    });\n  }\n  else {}\n}\n\nfunction ResizeDivisions(msr: Measure, divisions: Division[], staff: number): void {\n  const divs = divisions.filter(d => d.Staff === staff);\n  const s0divs = divisions.filter(d => d.Staff === 0);\n  const s1divs = divisions.filter(d => d.Staff === 1);\n  let divCount = s1divs.length > s0divs.length ? s1divs.length : s0divs.length;\n  const minWidth = DivisionMinWidth * divCount;\n  const space = msr.Bounds.width - minWidth;\n  const xBuffer = space / divCount;\n  divs.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n  divs.forEach((div: Division, i: number) => {\n//    if (div.Bounds.width < DivisionMinWidth || div.Duration < 0.25) {\n//      div.Bounds.width = DivisionMinWidth + xBuffer;\n//    }\n//    if (div.Bounds.width > DivisionMaxWidth || div.Duration >= 0.25) {\n//      div.Bounds.width = DivisionMinWidth + xBuffer;\n//    }\n    div.Bounds.width = (div.Duration) * msr.Bounds.width;\n    if (i > 0) {\n      const lastDivEnd = divs[i-1].Bounds.x + divs[i-1].Bounds.width;\n      if (lastDivEnd !== div.Bounds.x) {\n        div.Bounds.x = lastDivEnd;\n      }\n    }\n\n    if (i === 0 && divs.length === 1) {\n      div.Bounds.width = msr.Bounds.width;\n    }\n  });\n}\n\nfunction GenerateMissingBeatDivisions(msr: Measure, divisions: Division[], staff: number): void {\n  const sortedDivs = divisions.sort((divA: Division, divB: Division) => {\n    return divA.Beat - divB.Beat;\n  });\n  let startingBeat = 1; // always start at the beginning\n  const divisionsToAdd: Division[] = [];\n  sortedDivs.filter(d => d.Staff === staff).forEach((div: Division, i: number) => {\n    const notesOnDiv = msr.Notes.filter(n => n.Beat === div.Beat);\n    if (div.Beat === startingBeat) {\n      // there is a div for this beat, set the startingBeat to the next\n      // expected division\n      startingBeat = div.Beat + div.Duration * msr.TimeSignature.bottom;\n      if (notesOnDiv[0].Tuple) {\n        // TODO: This is not finished, currently skipping tuplet divisions\n        // But there may be cases where we need to generate missiong divisions\n        // within a tuplet group (maybe), and this will need to be revisited\n        startingBeat = notesOnDiv[0].TupleDetails.EndBeat;\n      }\n    } else if (div.Beat >= startingBeat) {\n      let val = (div.Beat - startingBeat) / msr.TimeSignature.bottom;\n      let newDivs = GetLargestValues(val);\n      let sBeat = startingBeat;\n      newDivs.sort();\n      newDivs.forEach(v => {\n        divisionsToAdd.push(\n          {\n            Beat: sBeat,\n            Duration: v,\n            Bounds: CreateBeatBounds(msr, sBeat, v, div.Staff, msr.Camera),\n            Staff: div.Staff\n          });\n          sBeat += v * msr.TimeSignature.bottom;\n      });\n      startingBeat = div.Beat + div.Duration * msr.TimeSignature.bottom;\n    }\n  });\n\n  // Add divisions created above and then empty\n  divisions.push(...divisionsToAdd);\n  // add RESTS to division gaps\n  divisionsToAdd.forEach(div => {\n    const notesOnBeat = msr.Notes.find(n => n.Beat === div.Beat);\n    if (notesOnBeat !== undefined) {\n      console.error(\"Note found in division gap\");\n    }\n    const clefType = GetNoteClefType(msr, div.Beat, staff);\n    const restProps: NoteProps = {\n      Beat: div.Beat,\n      Duration: div.Duration,\n      Line: div.Staff === 0 ? msr.SALineMid : msr.SBLineMid,\n      Rest: true,\n      Tied: false,\n      Staff: div.Staff,\n      Tuple: false,\n      Clef: clefType,\n    };\n    msr.AddNote(new Note(restProps));\n  });\n\n  // check remaining measure for empty divisions\n  const msrDuration = (msr.TimeSignature.top / msr.TimeSignature.bottom) * msr.TimeSignature.bottom + 1;\n  let reSortedDivs = divisions.filter(div => div.Staff === staff);\n  reSortedDivs = divisions.sort((divA: Division, divB: Division) => {\n    return divA.Beat - divB.Beat;\n  });\n  const lastDiv = reSortedDivs[reSortedDivs.length-1];\n  const lastBeat = lastDiv.Beat +\n    lastDiv.Duration * msr.TimeSignature.bottom;\n\n  const lastDivisionsToAdd = [];\n  const rem = (msrDuration - lastBeat);\n  if (rem > 0) {\n    let val = rem / msr.TimeSignature.bottom;\n    let newDivs = GetLargestValues(val);\n    let sBeat = lastBeat;\n    newDivs.sort();\n    newDivs.forEach(v => {\n      lastDivisionsToAdd.push(\n        {\n          Beat: sBeat,\n          Duration: v,\n          Bounds: CreateBeatBounds(msr, sBeat, v, lastDiv.Staff, msr.Camera),\n          Staff: staff\n        });\n        sBeat += v * msr.TimeSignature.bottom;\n    });\n  }\n  divisions.push(...lastDivisionsToAdd);\n  lastDivisionsToAdd.forEach(div => {\n    const notesOnBeat = msr.Notes.find(n => n.Beat === div.Beat && n.Staff === div.Staff);\n    if (notesOnBeat !== undefined) {\n      console.error(\"Note found in division gap\");\n    }\n\n    const clefType = GetNoteClefType(msr, div.Beat, staff);\n    const restProps: NoteProps = {\n      Beat: div.Beat,\n      Duration: div.Duration,\n      Line: div.Staff === 0 ? msr.SALineMid : msr.SBLineMid,\n      Rest: true,\n      Tied: false,\n      Staff: div.Staff,\n      Tuple: false,\n      Clef: clefType,\n    };\n    msr.AddNote(new Note(restProps));\n  });\n}\n\nfunction GetDivisionTotalWidth(divisions: Division[]): number {\n  let width = 0;\n  let staff0w = 0;\n  let staff1w = 0;\n  divisions.filter(d => d.Staff === 0).forEach(div => {\n    staff0w += div.Bounds.width;\n  });\n  divisions.filter(d => d.Staff === 1).forEach(div => {\n    staff1w += div.Bounds.width;\n  });\n\n  width = staff0w > staff1w ? staff0w : staff1w;\n\n  return width;\n}\n\nfunction GetDivisionGroups(msr: Measure, staff: number): DivGroups {\n  const divGroups: DivGroups = { DivGroups: [] };\n  let divs: Division[] = [];\n  let notes: Array<Note[]> = [];\n  // started creating a div group or not\n  let startFlag = false;\n\n  const mDivs = msr.Divisions.filter(d => d.Staff === staff)\n    .sort((a: Division, b: Division) => {\n      return a.Beat - b.Beat;\n    })\n\n  mDivs.forEach((div: Division, i: number) => {\n    const divNotes = msr.Notes.filter(n => n.Beat === div.Beat &&\n                                     n.Staff === staff);\n    divNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n\n    const restBeat = IsRestOnBeat(div.Beat, divNotes, staff);\n\n    // this can definitely be cleaned up but it seems to\n    // work for now, add tests later and then refactor\n    if (restBeat && startFlag) {\n      divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n      divs = [];\n      notes = [];\n      startFlag = false;\n    } else if (!restBeat) {\n      if (!startFlag) {\n        divs.push(div);\n        notes.push(divNotes);\n        if (div.Duration > 0.125) {\n          divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n          divs = [];\n          notes = [];\n        } else {\n          startFlag = true;\n          if (i === msr.Divisions.filter(d => d.Staff === staff).length - 1) {\n            // end of measure\n            divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n            divs = [];\n            notes = [];\n          }\n        }\n      } else {\n        if (div.Duration > 0.125) {\n          startFlag = false;\n          divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n          divs = [];\n          notes = [];\n\n          divs.push(div);\n          notes.push(divNotes);\n          divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n          divs = [];\n          notes = [];\n        } else {\n          // breakpoint check TODO: Actually implement this is prototype code\n          if (div.Beat === 3) {\n            divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n            divs = [];\n            notes = [];\n          }\n          divs.push(div);\n          notes.push(divNotes);\n          if (i === msr.Divisions.filter(d => d.Staff === staff).length - 1) {\n            divGroups.DivGroups.push({ Divisions: divs, Notes: notes });\n            divs = [];\n            notes = [];\n          }\n        }\n      }\n    }\n  });\n  return divGroups;\n}\n\nfunction IsRestOnBeat(beat: number, notes: Note[], staff: number): boolean {\n  const notesOnBeat = notes.filter(n => n.Beat === beat && n.Staff === staff);\n  const restFound = notesOnBeat.find(n => n.Rest);\n  if (restFound && notesOnBeat.length > 1) { \n    console.error(\"Rest found on beat with multiple notes, beat: \", beat);\n  }\n  return restFound !== undefined;\n}\n\n\nexport { Division,\n  CreateDivisions,\n  ResizeDivisions,\n  GetDivisionTotalWidth,\n  DivGroups,\n  DivGroup,\n  IsRestOnBeat,\n  GetDivisionGroups,\n  DivisionMinWidth,\n  DivisionMaxWidth}\n\n","import { Camera } from \"../Core/Camera.js\";\nimport { GetNoteClefType } from \"../Core/Clef.js\";\nimport { DivGroup, GetDivisionGroups } from \"../Core/Division.js\";\nimport { StaffType } from \"../Core/Instrument.js\";\nimport { Division, Measure } from \"../Core/Measure.js\";\nimport { Note, NoteProps, TupleDetails } from \"../Core/Note.js\";\nimport { GetLargestValues } from \"../Core/Values.js\";\nimport { IsFlippedNote } from \"../Renderers/Measure.Renderer.js\";\nimport { DetermineStemDirection, StemDirection } from \"../Renderers/Note.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\n\nconst noteXBuffer = 9;\n\n// added for automatic/generated notes from external UIs.\n// eg. Generating a random rhythm in the music trainer app\nfunction AddNoteOnMeasure(msr: Measure,\n                          noteValue: number,\n                          line: number,\n                          beat: Division,\n                          rest: boolean): void {\n\n  InputNote(msr, noteValue, beat, {num: line, bounds: new Bounds(0,0,0,0)}, rest);\n\n}\n\nfunction InputOnMeasure(msr: Measure,\n                        noteValue: number,\n                        x: number,\n                        y: number,\n                        cam: Camera,\n                        rest: boolean): void {\n  let inputtingNote = true;\n  let line = Measure.GetLineHovered(y, msr);\n  if (msr.Instrument.Staff === StaffType.Rhythm) {\n    line.num = 15;\n  }\n\n  let beatOver = msr.Divisions.find(b => b.Bounds.IsHovered(x, y, cam));\n\n  if (beatOver === undefined) { inputtingNote = false; }\n  if (inputtingNote) {\n    InputNote(msr, noteValue, beatOver, line, rest);\n  }\n}\n\nfunction InputNote(\n  msr: Measure,\n  noteValue: number,\n  division: Division,\n  line: { num: number, bounds: Bounds },\n  rest: boolean,\n  tupleCount: number = 1): void {\n\n    const notesInDiv = msr.Notes.filter(n => n.Beat === division.Beat);\n    if (notesInDiv.length < 1) { console.error(\"No notes found in division\"); return; }\n    const addingToTuple = notesInDiv[0].Tuple;\n    if (addingToTuple) {\n      if (noteValue !== division.Duration) {\n        //TODO: For now only same values can be added to tuplet grouping\n        noteValue = noteValue / notesInDiv[0].TupleDetails.Count;\n      }\n    }\n    const clefType: string = GetNoteClefType(msr, division.Beat, division.Staff);\n    const noteProps: NoteProps = {\n      Beat: division.Beat,\n      Duration: noteValue,\n      Line: line.num,\n      Rest: rest,\n      Tied: false,\n      Staff: division.Staff,\n      Tuple: addingToTuple,\n      TupleDetails: notesInDiv[0].TupleDetails,\n      Clef: clefType,\n    };\n    const newNote: Note = new Note(noteProps);\n\n    if (division.Duration === noteValue) {\n      msr.ClearRestNotes(division.Beat, division.Staff);\n      msr.AddNote(newNote, true);\n    } else {\n      if (MeasureHasRoom(noteProps.Beat, noteProps.Duration, msr)) {\n        AddToDivision(msr, noteProps, division.Staff);\n      }\n    } \n    msr.CreateDivisions(msr.Camera, true);\n    //UpdateNoteBounds(msr, division.Staff);\n}\n\nfunction UpdateNoteBounds(msr: Measure, staff: number): void {\n    // Maybe should go somewhere else\n    // Maybe should be more optimised\n    // For now seems to update bounds of notes properly\n    const groups = GetDivisionGroups(msr, staff);\n     groups.DivGroups.forEach((g: DivGroup) => {\n      const { Divisions, Notes } = g;\n      const stemDir = DetermineStemDirection(Notes, Divisions, staff, msr);\n      Divisions.forEach((div: Division) => {\n        const divNotes = msr.Notes.filter(n => n.Beat === div.Beat &&\n                                         n.Staff === staff);\n        divNotes.sort((a: Note, b: Note) => {\n          return a.Line - b.Line;\n        });\n        divNotes.forEach((n: Note, i: number) => {\n          const isFlipped = IsFlippedNote(divNotes, i, stemDir);\n          let flipNoteOffset = isFlipped ? \n            stemDir === StemDirection.Up ? 11 : -11 : 0;\n          if (!n.Rest) {\n            const lineSubt = n.Staff === 0 ?\n              0 + msr.SALineTop :\n              msr.SBLineTop;\n            n.Bounds.x = Math.floor(div.Bounds.x + noteXBuffer + flipNoteOffset);\n            n.Bounds.y = Measure.GetNotePositionOnLine(msr, n.Line);\n          }\n        });\n      });\n    });\n}\n\nfunction MeasureHasRoom(beat: number, duration: number, msr: Measure, tuple: number = 1): boolean {\n  return (beat * duration) <= msr.TimeSignature.top * (1 / msr.TimeSignature.bottom);\n}\n\nfunction IsRestOnBeat(msr: Measure, beat: number, notes: Note[], staff: number): boolean {\n  const notesOnBeat = notes.filter(n => n.Beat === beat && n.Staff === staff);\n  const restFound = notesOnBeat.find(n => n.Rest);\n  if (restFound && notesOnBeat.length > 1) { \n    console.error(\"Rest found on beat with multiple notes, beat: \", beat);\n  } else if (restFound && notesOnBeat.length === 1) {\n    msr.ClearRestNotes(beat, notesOnBeat[0].Staff);\n  }\n  return restFound !== undefined;\n}\n\nfunction AddToDivision(msr: Measure, noteProps: NoteProps, staff: number): void {\n  let remainingValue = noteProps.Duration;\n  let beat = noteProps.Beat;\n  if (noteProps.Rest) { noteProps.Line = staff === 0 ? msr.SALineMid : msr.SBLineMid; }\n  let tying = false;\n  let tStart = -1;\n  let tEnd = -1;\n  msr.Divisions.filter(d => d.Staff === staff).forEach((div: Division, i: number) => {\n    if (tying && noteProps.Rest) { tying = false; }\n\n    if (remainingValue >= div.Duration && beat === div.Beat) {\n      // clear rests on beat regardless of what we are inputting\n      msr.ClearRestNotes(beat, noteProps.Staff);\n\n      if (remainingValue > div.Duration && tying === false && !noteProps.Rest) {\n        tying = true;\n        tStart = div.Beat;\n        tEnd = div.Beat + (remainingValue - div.Duration) * msr.TimeSignature.bottom;\n      }\n\n      const newNoteProps: NoteProps = {\n        Beat: div.Beat,\n        Duration: div.Duration,\n        Line: noteProps.Line,\n        Rest: noteProps.Rest,\n        Tied: tying,\n        Staff: div.Staff,\n        Tuple: false,\n        Clef: GetNoteClefType(msr, div.Beat, div.Staff),\n      };\n\n      const newNote = new Note(newNoteProps);\n\n      if (tying) {\n        newNote.SetTiedStartEnd(tStart, tEnd);\n        if (remainingValue - div.Duration <= 0) {\n          tying = false;\n        }\n      }\n\n      remainingValue -= div.Duration;\n      beat += (div.Duration * msr.TimeSignature.bottom);\n      msr.AddNote(newNote, true);\n    } \n    else if (remainingValue < div.Duration && beat === div.Beat\n            && remainingValue > 0) {\n        // Get other notes that will be effected\n        const notesOnBeat = msr.Notes\n          .filter((note: Note) => { \n            return note.Beat === div.Beat &&\n            note.Staff === div.Staff;\n          });\n        if (IsRestOnBeat(msr, beat, notesOnBeat, div.Staff)) {\n          // If it does not effect any other notes (only rests in div)\n          // We can just add a note of our desired Duration.\n          const newNoteProps: NoteProps = {\n            Beat: div.Beat,\n            Duration: remainingValue,\n            Line: noteProps.Line,\n            Rest: noteProps.Rest,\n            Tied: tying,\n            Staff: div.Staff,\n            Tuple: false,\n            Clef:  GetNoteClefType(msr, div.Beat, div.Staff),\n          }\n          const newNote = new Note(newNoteProps);\n\n         if (tying) {\n            newNote.SetTiedStartEnd(tStart, tEnd);\n            if (remainingValue - div.Duration <= 0) {\n              tying = false;\n            }\n          }\n\n          remainingValue = 0;\n          msr.AddNote(newNote, true);\n          return;\n        } \n\n        // This note is not tying, but existing notes will \n        // need to be tied together\n        const newNoteProps: NoteProps = {\n          Beat: div.Beat,\n          Duration: remainingValue,\n          Line: noteProps.Line,\n          Rest: noteProps.Rest,\n          Tied: false,\n          Staff: div.Staff,\n          Tuple: noteProps.Tuple,\n          TupleDetails: noteProps.TupleDetails,\n          Clef: GetNoteClefType(msr, div.Beat, div.Staff),\n        };\n\n        const remValue = div.Duration - remainingValue;\n        const tiedNoteValues = GetLargestValues(remValue).sort((a: number, b: number) => {\n          return a - b\n        });\n        const tiedStart = div.Beat;\n        const tiedEnd = div.Beat + remValue * msr.TimeSignature.bottom;\n\n        notesOnBeat.forEach(n => {\n          n.Duration = remainingValue;\n          n.Tied = true;\n          n.SetTiedStartEnd(tiedStart, tiedEnd);\n          let nextBeat = div.Beat + remainingValue * msr.TimeSignature.bottom;\n          tiedNoteValues.forEach((dur: number, i: number) => {\n            const shouldTie = i < tiedNoteValues.length - 1;\n            const tiedNote: NoteProps = {\n              Beat: nextBeat,\n              Duration: dur,\n              Line: n.Line,\n              Rest: false,\n              Tied: true,\n              Staff: n.Staff,\n              Tuple: n.Tuple,\n              TupleDetails: n.TupleDetails,\n              Clef: GetNoteClefType(msr, div.Beat, div.Staff),\n            }\n            const noteObj = new Note(tiedNote);\n            noteObj.SetTiedStartEnd(tiedStart, tiedEnd);\n            msr.AddNote(noteObj, true);\n            nextBeat = nextBeat + dur * msr.TimeSignature.bottom;\n          });\n        });\n        msr.AddNote(new Note(newNoteProps), true);\n      }\n  });\n}\n\nfunction CreateTuplet(selNotes: Map<Measure, Note[]>, count: number): number {\n  let duration = 0;\n  for (let [ measure, notes ] of selNotes) {\n    notes.forEach((n: Note) => {\n      const tupleDuration = n.Duration;\n      const newDuration = n.Duration / count;\n      duration = newDuration;\n      let lastBeat = n.Beat;\n      n.Duration = newDuration;\n      n.Tuple = true;\n      const details: TupleDetails = {\n        StartBeat: n.Beat,\n        EndBeat: n.Beat + tupleDuration * measure.TimeSignature.bottom,\n        Value: tupleDuration,\n        Count: count\n      };\n      n.TupleDetails = details;\n      // add newly created tuplet notes\n      for (let i=1;i<count;i++) {\n        const newNote = new Note({\n          Beat: lastBeat + newDuration * measure.TimeSignature.bottom,\n          Duration: newDuration,\n          Line: n.Line,\n          Rest: true,\n          Tied: false,\n          Staff: n.Staff,\n          Tuple: true,\n          TupleDetails: details,\n          Clef: GetNoteClefType(measure, lastBeat + newDuration * measure.TimeSignature.bottom, n.Staff),\n        });\n        lastBeat = newNote.Beat;\n        measure.AddNote(newNote, true);\n      }\n    });\n  }\n  return duration;\n}\n\nfunction AllNotesByBeat(msr: Measure): Array<Note[]> {\n  const notes: Array<Note[]> = [];\n  notes.push([]);\n  let currentBeat = 1;\n  let nIndex = 0;\n  msr.Notes.sort((a: Note, b: Note) => {\n    return a.Beat - b.Beat;\n  });\n  msr.Notes.forEach((n: Note) => {\n    if (n.Beat === currentBeat) {\n      notes[nIndex].push(n);\n    } else {\n      notes.push([]);\n      nIndex++;\n      currentBeat = n.Beat;\n      notes[nIndex].push(n);\n    }\n  });\n  return notes;\n}\n\nexport { InputOnMeasure, UpdateNoteBounds, CreateTuplet, AddNoteOnMeasure }\n","import { RenderSymbol, TimeSigNumbers } from \"../Renderers/MusicFont.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\nimport { StaffType } from \"./Instrument.js\";\nimport { Measure } from \"./Measure.js\";\n//const Key: Map<string, string[]> = new Map<string, string[]>([\n//  [\"amin\", \"\"],\n//  [\"\n//])\n//\n\n// Returns beats that should separate note groupings etc.\nfunction ReturnBreakPoints(timeSig: { top: number, bottom: number }): number[] {\n  const bPoints: number[] = [];\n  const timeSigString = timeSig.top.toString() + \"/\" + timeSig.bottom.toString();\n  switch (timeSigString) {\n    case \"4/4\":\n    default:\n      bPoints.push(3);\n  }\n  return bPoints;\n}\n\nclass TimeSignature implements ISelectable {\n  ID: number;\n  Selected: boolean;\n  SelType: SelectableTypes;\n  Bounds: Bounds;\n  Editable: boolean;\n  GBounds: Bounds;\n  top: number;\n  bottom: number;\n\n  TopPosition: { x: number, y: number };\n  BotPosition: { x: number, y: number };\n\n  // This is a temporary solution, will need to rework to make staff count\n  // generic\n  GTopPosition: { x: number, y: number };\n  GBotPosition: { x: number, y: number };\n\n\n  constructor(top: number, bottom: number, useSymbol: boolean = false) {\n    this.Selected = false;\n    this.SelType = SelectableTypes.TimeSig;\n    this.top = top;\n    this.bottom = bottom;\n    this.Editable = true;\n    this.TopPosition = { x: 0, y: 0 };\n    this.BotPosition = { x: 0, y: 0 };\n    this.GTopPosition = { x: 0, y: 0 };\n    this.GBotPosition = { x: 0, y: 0 };\n    this.Bounds = new Bounds(0, 0, 0, 0);\n    this.GBounds = new Bounds(0, 0, 0, 0);\n    // use symbol? (bad name) for things like common and cut common\n  }\n\n  render(renderProps: RenderProperties, msr: Measure, theme: Theme): void {\n    let tGlyph: TimeSigNumbers = GetTimeSignatureGlyph(this.top);\n    let bGlyph: TimeSigNumbers = GetTimeSignatureGlyph(this.bottom);\n\n    RenderSymbol( renderProps, tGlyph, this.TopPosition.x, this.TopPosition.y, theme, this.Selected);\n    RenderSymbol( renderProps, bGlyph, this.BotPosition.x, this.BotPosition.y, theme, this.Selected);\n\n    if (msr.Instrument.Staff === StaffType.Grand) {\n      RenderSymbol( renderProps, tGlyph, this.GTopPosition.x, this.GTopPosition.y, theme, this.Selected);\n      RenderSymbol( renderProps, bGlyph, this.GBotPosition.x, this.GBotPosition.y, theme, this.Selected);\n    }\n  }\n\n  SetBounds(msr: Measure, staff: number): void {\n    if (staff === StaffType.Single) {\n      const msrMidLine = Measure.GetMeasureMidLine(msr);\n      this.Bounds.x = msr.Bounds.x + msr.XOffset - 25;\n      this.Bounds.y = msr.Bounds.y + ((msrMidLine - 4) * 5);\n      this.Bounds.width = 30;\n      this.Bounds.height = 50;\n      this.TopPosition.x = this.Bounds.x;\n      this.TopPosition.y = msr.Bounds.y + ((msrMidLine - 2) * 5);\n      this.BotPosition.x = this.Bounds.x;\n      this.BotPosition.y = msr.Bounds.y + ((msrMidLine + 2) * 5);\n    } else {\n      const msrMidLine = msr.GetGrandMeasureMidLine();\n      this.GBounds.x = msr.Bounds.x + msr.XOffset - 25;\n      this.GBounds.y = msr.Bounds.y + msr.GetMeasureHeight() +((msrMidLine - 4) * 5);\n      this.GBounds.width = 30;\n      this.GBounds.height = 50;\n      this.GTopPosition.x = this.Bounds.x;\n      this.GTopPosition.y = msr.Bounds.y + msr.GetMeasureHeight() + ((msrMidLine - 2) * 5);\n      this.GBotPosition.x = this.Bounds.x;\n      this.GBotPosition.y = msr.Bounds.y + msr.GetMeasureHeight() + ((msrMidLine + 2) * 5);\n    }\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam) || this.GBounds.IsHovered(x, y, cam);\n  }\n}\n\nfunction GetTimeSignatureGlyph(n: number): TimeSigNumbers {\n  let glyph: TimeSigNumbers;\n  switch (n) {\n    case 0:\n      glyph = TimeSigNumbers.Zero;\n      break;\n    case 1:\n      glyph = TimeSigNumbers.One;\n      break;\n   case 2:\n      glyph = TimeSigNumbers.Two;\n      break;\n   case 3:\n      glyph = TimeSigNumbers.Three;\n      break;\n   case 4:\n      glyph = TimeSigNumbers.Four;\n      break;\n   case 5:\n      glyph = TimeSigNumbers.Five;\n      break;\n  case 6:\n      glyph = TimeSigNumbers.Six;\n      break;\n  case 7:\n      glyph = TimeSigNumbers.Seven;\n      break;\n  case 8:\n      glyph = TimeSigNumbers.Eight;\n      break;\n  case 9:\n      glyph = TimeSigNumbers.Nine;\n      break;\n  }\n  return glyph;\n}\n\nfunction CreateTimeSignature(props: {top: number, bottom: number}): TimeSignature {\n  return new TimeSignature(props.top, props.bottom);\n}\n\nexport { TimeSignature, CreateTimeSignature }\n","import { Bounds } from '../Types/Bounds.js';\nimport { ISelectable, SelectableTypes } from '../Types/ISelectable.js';\nimport { Message, MessageType } from '../Types/Message.js';\nimport { UpdateNoteBounds } from '../Workers/NoteInput.js';\nimport { Camera } from './Camera.js';\nimport { Clef, GetNoteClefType } from './Clef.js';\nimport { CreateDivisions, type Division, ResizeDivisions, DivisionMinWidth } from './Division.js';\nimport { Instrument, StaffType } from './Instrument.js';\nimport { Note, NoteProps } from './Note.js';\nimport { Page } from './Page.js';\nimport { CreateTimeSignature, TimeSignature } from './TimeSignatures.js';\n\ninterface MeasureProps {\n  Instrument: Instrument,\n  Bounds: Bounds;\n  TimeSignature: { top: number, bottom: number };\n  KeySignature: string;\n  Notes: Note[];\n  Clef: string;\n  RenderClef: boolean;\n  RenderTimeSig: boolean;\n  RenderKey: boolean;\n  Camera: Camera;\n  Page: Page;\n  Message: (msg: Message) => void;\n}\n\nclass Measure implements ISelectable {\n  ID: number;\n  Selected: boolean;\n  SelType: SelectableTypes;\n  Instrument: Instrument;\n  Bounds: Bounds;\n  Editable: boolean;\n  Clefs: Clef[] = [];\n  GrandClefs: Clef[] = [];\n  TimeSignature: TimeSignature;\n  KeySignature: string;\n  Notes: Note[];\n  BNotes: Note[];\n  Divisions: Division[];\n  BDivisions: Division[];\n  RenderClef: boolean;\n  RenderKey: boolean;\n  RenderTimeSig: boolean;\n  Camera: Camera;\n  Page: Page;\n  PageLine: Number;\n  Message: (msg: Message) => void;\n\n  XOffset: number; // not sure if this is what we want to go with\n\n\n  // TODO: Move this, this is prototyping and messy\n  // Staff line number properties\n  // Staff A\n  SALineTop: number;\n  SALineMid: number;\n  SALineBot: number;\n\n  SALineTopSave: number;\n  SALineBotSave: number;\n\n  SALineTopDef: number;\n  SALineBotDef: number;\n\n  PrefBoundsY: number;\n  PrevBoundsH: number;\n\n  // Staff B\n  SBLineTop: number;\n  SBLineMid: number;\n  SBLineBot: number;\n  SBLineTopSave: number;\n  SBLineBotSave: number;\n  SBLineTopDef: number;\n  SBLineBotDef: number;\n\n  SBOffset: number;\n\n  // Grouping of measures on a line/for formatting\n  Line: number;\n  RunningID: { count: number };\n\n  constructor(properties: MeasureProps, runningId: { count: number }) {\n    this.Message = properties.Message;\n    this.RunningID = runningId;\n    this.ID = 0;\n    this.Selected = false;\n    this.Editable = true;\n    this.SelType = SelectableTypes.Measure;\n    this.Instrument = properties.Instrument;\n    this.Line = 0;\n    this.Bounds = properties.Bounds;\n    this.TimeSignature = CreateTimeSignature(properties.TimeSignature);\n    this.KeySignature = properties.KeySignature;\n    this.Notes = properties.Notes;\n    this.BNotes = [];\n    this.Divisions = [];\n    this.BDivisions = [];\n    this.RenderClef = properties.RenderClef;\n    if (this.Instrument.Staff === StaffType.Rhythm) { this.RenderClef = false; }\n    console.log(\"RenderingClef: \", this.RenderClef);\n    console.log(this.Instrument.Staff);\n    this.RenderKey = properties.RenderKey;\n    this.Camera = properties.Camera;\n    this.RenderTimeSig = properties.RenderTimeSig;\n    this.Page = properties.Page;\n    this.PageLine = properties.Page.PageLines[0].Number;\n\n    this.PrefBoundsY = this.Bounds.y;\n    this.PrevBoundsH = this.Bounds.height;\n    this.SetXOffset();\n\n    this.SALineTop = 5;\n    this.SALineMid = 15;\n    this.SALineBot = 30;\n\n    this.SALineTopSave = this.SALineTop;\n    this.SALineBotSave = this.SALineBot;\n\n    this.SALineTopDef = this.SALineTop;\n    this.SALineBotDef = this.SALineBot;\n\n    this.SBLineTop = 1035;\n    this.SBLineMid = 1045;\n    this.SBLineBot = 1054;\n\n    this.SBLineTopSave = this.SBLineTop;\n    this.SBLineBotSave = this.SBLineBot;\n\n    this.SBLineTopDef = this.SBLineTop;\n    this.SBLineBotDef = this.SBLineBot;\n\n    this.SBOffset = 1000;\n    \n    this.CreateDivisions(this.Camera);\n\n    // create default clef\n    const trebleClef = new Clef(0, {x: \n      this.Bounds.x + 16, \n      y: this.Bounds.y + (5 * Measure.GetMeasureMidLine(this) + (10 * 2))}, \"treble\", 1);\n    trebleClef.SetBounds(this, 0);\n\n    this.Clefs.push(trebleClef);\n    if (this.Instrument.Staff === StaffType.Grand) {\n      const bassClef = new Clef(1, { \n        x: this.Bounds.x + 30,\n        y: this.Bounds.y + this.GetMeasureHeight() + (this.GetGrandMeasureMidLine() * 5) - 2 \n      }, \"bass\", 1);\n      bassClef.SetBounds(this, 1);\n      this.GrandClefs.push(bassClef);\n    }\n\n    this.TimeSignature.SetBounds(this, 0);\n    this.TimeSignature.SetBounds(this, 1);\n\n  }\n\n  static GetLineHovered(y: number, msr: Measure): { num: number, bounds: Bounds } {\n    const cam = msr.Camera;\n    const relYPos = y - msr.Bounds.y - cam.y; //TODO: Dunno about scaling by zoom here\n    let line = Math.floor(relYPos / (5)); // this should be a constant, line_height (defined somewhere)\n    let actualLine = line + msr.SALineTop;\n    const bounds = new Bounds(msr.Bounds.x, 0, msr.Bounds.width + msr.XOffset, (5));\n    if (actualLine > msr.SALineBot) {\n      const diff = actualLine - msr.SALineBot;\n      actualLine = msr.SBLineTop + diff;\n      bounds.y = msr.Bounds.y + msr.GetMeasureHeight() + ((diff * (5)) - 2.5);\n    } else {\n      bounds.y = msr.Bounds.y + ((line * (5)) - 2.5);\n    }\n    return { num: actualLine, \n      bounds: bounds};\n  }\n\n  //STATIC? WHY? I DUNNO\n  // Get note position relative to staff/measure\n  static GetNotePositionOnLine(msr: Measure, line: number): number {\n    const cam = msr.Camera;\n    let y = 0;\n    if (line <= msr.SALineBot) {\n      y = msr.Bounds.y + (line - msr.SALineTop) * (5);\n    } else {\n      y = msr.Bounds.y + msr.GetMeasureHeight() + ((line - msr.SBLineTop) * (5));\n    }\n    return y - 2.5;\n  }\n\n  static GetMeasureHeight(msr: Measure, cam: Camera): number {\n    return ( msr.SALineTop + msr.SALineBot ) * (5);\n    // expand on this to include grand staffs and have line height (5) be \n    // a constant that is defined somewhere\n  }\n\n  static GetMeasureMidLine(msr: Measure): number {\n    return ( msr.SALineMid - msr.SALineTop);\n  }\n\n  GetBoundsWithOffset(): Bounds {\n    return new Bounds(this.Bounds.x, \n                      this.Bounds.y,\n                      this.Bounds.width + this.XOffset,\n                      this.Bounds.height);\n  }\n\n  SetXOffset(): void {\n    this.XOffset = 0;\n    if (this.RenderClef) { this.XOffset += (30); }\n    if (this.RenderKey) { this.XOffset += (30); }\n    if (this.RenderTimeSig) { this.XOffset += (30); }\n  }\n\n  CreateDivisions(cam: Camera, afterInput: boolean = false) {\n    if (afterInput) {\n      this.ResetHeight();\n    }\n    this.Divisions = [];\n    this.Divisions.push(...CreateDivisions(this, this.Notes, 0, cam));\n    if (this.Instrument.Staff === StaffType.Grand) {\n      this.Divisions.push(...CreateDivisions(this, this.Notes, 1, cam));\n      ResizeDivisions(this, this.Divisions, 1);\n    }\n  ResizeDivisions(this, this.Divisions, 0);\n  UpdateNoteBounds(this, 0);\n  UpdateNoteBounds(this, 1);\n}\n\n  Reposition(prevMsr: Measure): void {\n    this.Bounds.x = prevMsr.Bounds.x + prevMsr.Bounds.width + prevMsr.XOffset;\n    this.CreateDivisions(this.Camera);\n  }\n\n  // set height of measure based off of notes in measure\n  // eventually will be determined by instrument / row etc.\n  \n  GetMeasureHeight(): number {\n    const lineHeight = (5); // constant should be set elsewhere\n    const topNegative = this.SALineTop < 0;\n    const heightInLines = topNegative ? \n      this.SALineBot + Math.abs(this.SALineTop) :\n      this.SALineBot - this.SALineTop;\n    return heightInLines * lineHeight;\n  }\n\n  GetGrandMeasureHeight(): number {\n    const lineHeight = (5); // constant should be set elsewhere\n    const topStaffHeight = this.GetMeasureHeight();\n    const topNegative = (this.SBLineTop - this.SBOffset) < 0;\n    const heightInLines = topNegative ?\n      (this.SBLineBot - this.SBOffset) + (Math.abs(this.SBLineTop - this.SBOffset)) :\n      (this.SBLineBot - this.SBOffset) - (this.SBLineTop - this.SBOffset);\n    return topStaffHeight + (heightInLines * lineHeight);\n  }\n\n  GetGrandMeasureMidLine(): number {\n    return this.SBLineMid - this.SBLineTop;\n  }\n\n  ResetHeight(): void {\n    const height = this.Instrument.Staff === StaffType.Single ? \n      this.GetMeasureHeight() : this.GetGrandMeasureHeight();\n    this.Bounds.height = height;\n    this.PrevBoundsH = height;\n    // move this somewhere else\n    this.SALineTop = this.SALineTopSave;\n    this.SALineBot = this.SALineBotSave;\n    this.SBLineTop = this.SBLineTopSave;\n    this.SBLineBot = this.SBLineBotSave;\n    this.Bounds.y = this.PrefBoundsY;\n  }\n\n  // name change later I'm too tired to think of actual function name\n  ReHeightenTop(expand: boolean, lineOver: number): void {\n    if (expand) {\n      const dist = lineOver - this.SALineTop;\n      this.SALineTop = lineOver - dist - 1;\n      this.Bounds.y -= 5;\n      this.Bounds.height += 5;\n    } else {\n      if (lineOver >= this.SALineTopSave) {\n        this.SALineTop = this.SALineTopSave;\n        this.Bounds.y = this.PrefBoundsY;\n      } else {\n        this.SALineTop += 1;\n        this.Bounds.y += 5;\n      }\n    }\n    this.CreateDivisions(this.Camera);\n  }\n\n  ReHeightenBot(expand: boolean, lineOver: number): void {\n    if (expand) {\n      this.SALineBot = lineOver + 2;\n      this.Bounds.height += 5;\n    } else {\n      if (lineOver <= this.SALineBotSave) {\n        this.SALineBot = this.SALineBotSave;\n        this.Bounds.height = this.PrevBoundsH;\n      } else {\n        this.SALineBot -= 1;\n        this.Bounds.height -= 5;\n      }\n    }\n    this.CreateDivisions(this.Camera);\n  }\n\n  ReHeightenTopGrand(expand: boolean, lineOver: number): void {\n    if (expand) {\n      const dist = lineOver - this.SBLineTop;\n      this.SBLineTop = lineOver - dist - 1;\n      this.Bounds.y -= 5;\n      this.Bounds.height += 5;\n    } else {\n      if (lineOver >= this.SBLineTopSave) {\n        this.SBLineTop = this.SBLineTopSave;\n        this.Bounds.y = this.PrefBoundsY;\n      } else {\n        this.SBLineTop += 1;\n        this.Bounds.y += 5;\n      }\n    }\n    this.CreateDivisions(this.Camera);\n  }\n\n  ReHeightenBotGrand(expand: boolean, lineOver: number): void {\n    if (expand) {\n      this.SBLineBot = lineOver + 2;\n      this.Bounds.height += 5;\n    } else {\n      if (lineOver <= this.SBLineBotSave) {\n        this.SBLineBot = this.SBLineBotSave;\n        this.Bounds.height = this.PrevBoundsH;\n      } else {\n        this.SBLineBot -= 1;\n        this.Bounds.height -= 5;\n      }\n    }\n    this.CreateDivisions(this.Camera);\n  }\n\n  ResetTopHeight(): void {\n    this.SALineTop = this.SALineTopSave;\n    this.Bounds.y = this.PrefBoundsY;\n    this.Bounds.height = this.PrevBoundsH;\n    this.CreateDivisions(this.Camera);\n  }\n\n  AddNote(note: Note, fromInput: boolean = false): void {\n    if (note.Rest) {\n      this.ClearNonRestNotes(note.Beat, note.Staff);\n    } else {\n      this.ClearRestNotes(note.Beat, note.Staff);\n    }\n    note.SetID(this.RunningID.count);\n    this.RunningID.count++;\n    this.Notes.push(note);\n\n    if (fromInput) {\n      const msg: Message = {\n        messageString: 'AddNote',\n        messageData: {\n          Message: {\n            msg: \"AddingNote\",\n            obj: note,\n          },\n          MessageType: MessageType.AddNote,\n        }\n        }\n        this.Message(msg);\n      }\n  }\n\n  ClearNonRestNotes(beat: number, staff: number): void {\n    for (let n = this.Notes.length - 1;n >= 0; n--) {\n      if (this.Notes[n].Beat === beat &&\n          this.Notes[n].Rest === false &&\n          this.Notes[n].Staff === staff) {\n        this.Notes.splice(n, 1);\n      }\n    }\n  }\n\n  ClearRestNotes(beat: number, staff: number): void {\n    for (let n = this.Notes.length - 1;n >= 0; n--) {\n      if (this.Notes[n].Beat === beat &&\n          this.Notes[n].Rest === true &&\n          this.Notes[n].Staff === staff) {\n        this.Notes.splice(n, 1);\n      }\n    }\n  }\n\n  ClearMeasure(ignoreNotes?: Note[]): void {\n    for (let n = this.Notes.length-1;n >= 0;n--) {\n      if (this.Notes[n].Editable && !ignoreNotes.includes(this.Notes[n])) {\n        this.Notes.splice(n, 1);\n      }\n    }\n  }\n\n  DeleteSelected(): void {\n    for (let n = this.Notes.length - 1; n >= 0; n--) {\n      if (this.Notes[n].Selected) {\n        let beat = this.Notes[n].Beat;\n        let duration = this.Notes[n].Duration;\n        let staff = this.Notes[n].Staff;\n        let tuple = this.Notes[n].Tuple;\n        let tupleDetails = this.Notes[n].TupleDetails;\n        this.Notes.splice(n, 1);\n        const notesOnBeat = this.Notes.filter(n => n.Beat === beat);\n        if (notesOnBeat.length === 0) {\n          const clefType = GetNoteClefType(this, beat, staff);\n          // beat is empty and requires a rest note\n          const restProps: NoteProps = {\n            Beat: beat,\n            Duration: duration,\n            Line: 15,\n            Rest: true,\n            Tied: false,\n            Staff: staff,\n            Tuple: tuple,\n            TupleDetails: tupleDetails,\n            Clef: clefType,\n          }\n\n          this.AddNote(new Note(restProps));\n        }\n      }\n    }\n  }\n\n  GetMinimumWidth(): number {\n    if (this.Notes.filter(n => n.Rest !== true).length === 0) {\n      return DivisionMinWidth * 4;\n    }\n    const staffZeroDivs = this.Divisions.filter(div => div.Staff === 0);\n    const staffOneDivs = this.Divisions.filter(div => div.Staff === 1);\n    const lowestValue = this.Divisions.sort((a: Division, b: Division) => {\n      return a.Duration - b.Duration;\n    })[0].Duration;\n    //const count = 1 / lowestValue;\n\n    const count = staffZeroDivs.length > staffOneDivs.length ? staffZeroDivs.length : staffOneDivs.length;\n    return count * DivisionMinWidth;\n  }\n\n  ReturnSelectableElements(): ISelectable[] {\n    const sel: ISelectable[] = [];\n    sel.push(...this.Notes);\n    sel.push(...this.Clefs);\n    return sel;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.GetBoundsWithOffset().IsHovered(x, y, cam);\n  }\n\n  ChangeTimeSignature(top: number, bottom: number, transpose: boolean): void {\n    this.TimeSignature.top = top;\n    this.TimeSignature.bottom = bottom;\n  }\n}\n\nexport { Measure, MeasureProps, Division, Clef };\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\n\nclass Stem {\n  Bounds: Bounds;\n  Direction: string;\n  StartPoint: number;\n  EndPoint: number;\n  constructor(bounds: Bounds) {\n    this.Bounds = bounds;\n  }\n\n  // TODO: Note: Camera is currently baked into actual position\n  // This will change when we separate the creation logic from\n  // the Note renderer\n  Render(context: CanvasRenderingContext2D, cam: Camera, theme: Theme): void {\n    context.fillStyle = theme.NoteElements;\n    context.fillRect(this.Bounds.x,\n                     this.Bounds.y,\n                     this.Bounds.width,\n                     this.Bounds.height);\n  }\n}\n\nexport { Stem };\n","import { Note } from \"../Core/Note.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { RenderSymbol, StdAccidentals } from \"./MusicFont.Renderer.js\";\n\nconst sharpPath = 'm0 0 0-5.6448 2.4-.6624 0 5.616-2.4.6912zm4.7256-1.3656-1.65.4728 0-5.616 1.65-.4608 0-2.3328-1.65.4608 0-5.7382-.6756 0 0 5.9122-2.4.69 0-5.5798-.6372 0 0 5.7922-1.65.462 0 2.3376 1.65-.4608 0 5.6052-1.65.4596 0 2.328 1.65-.4608 0 5.7058.6372 0 0-5.9098 2.4-.66 0 5.551.6756 0 0-5.7598 1.65-.462 0-2.3364z';\nconst doubleSharp = 'c-1.2495-.1955-2.5177-.1955-3.7791-.1938-.0272-.9231.1207-1.904-.2448-2.771-.2448-.5763-.7089-1.0302-1.1203-1.4977-.6579.5882-1.1985 1.3651-1.2512 2.2678-.051.6664-.0136 1.3345-.0255 2.0009-1.2614.0187-2.5347-.0425-3.7791.2057.2397-1.2376.1853-2.5024.2074-3.7553.9605-.0255 1.9873.1122 2.8798-.306.5253-.2465.9724-.6324 1.4178-.9996-.5814-.6579-1.3362-1.2376-2.2474-1.292-.6817-.0544-1.3668-.0153-2.0502-.0272-.0425-1.2444.102-2.5024-.1564-3.7315 1.2308.2227 2.4854.1649 3.7281.1819.0187.8857-.0799 1.8037.17 2.6554.1904.6511.7106 1.1526 1.1441 1.666.6137-.5338 1.1662-1.2036 1.2665-2.0417.0918-.7582.0187-1.5198.0612-2.2797 1.2529-.034 2.5432.1258 3.7553-.2703-.1802 1.2631-.1972 2.5466-.1836 3.8199-.8942.0255-1.8309-.0748-2.6809.2278-.646.2278-1.1543.7276-1.6677 1.1696.5576.5712 1.2291 1.0965 2.0587 1.1747.7616.0714 1.5266.0391 2.2899.0527.0187 1.2495-.0425 2.5109.2074 3.7434z';\nconst flatPath = 'c0 .805-.3018 1.576-1.1298 2.6109-.8772 1.0963-1.6156 1.7237-2.5886 2.4615l0-4.8049c.2212-.5586.5474-1.0108.98-1.358.4312-.3458.868-.5194 1.3104-.5194.7308 0 1.1942.4144 1.3944 1.2404.0224.0672.0336.1904.0336.3696zm-.105-3.36c-.6034 0-1.2166.1666-1.841.5012-.6244.3332-1.2152.7798-1.7724 1.3356l0-10.1804-.7882 0 0 17.4367c0 .4928.1344.7392.4032.7392.1554 0 .3485-.1302.637-.3024.8166-.4873 1.3257-.8131 1.8788-1.1567.6308-.392 1.3412-.8497 2.2806-1.7457.6482-.651 1.1172-1.3076 1.4084-1.9684.2898-.6622.4354-1.3174.4354-1.9684 0-.9632-.2562-1.6478-.7686-2.0524-.5796-.4256-1.2054-.6384-1.8732-.6384z';\nconst naturalPath = 'm0 0-.7875.2813 0-6.4406-4.5281 1.9688 0-16.7063.7594-.3375 0 6.5531 4.5563-2.0813 0 16.7625zm-.7875-9 0-4.5-3.7688 1.6594 0 4.5 3.7688-1.6594z';\n\nfunction RenderAccidental(\n    renderProps: RenderProperties,\n    note: Note,\n    type: number,\n    theme: Theme): void {\n  const { canvas, context, camera } = renderProps;\n  let posString = '';\n  let dflatString = ''; // posString for second flat\n  switch (type) {\n    case 0:\n      posString = `m ${note.Bounds.x + camera.x - 2} ${note.Bounds.y + camera.y + 16}`;\n      posString += naturalPath;\n      break;\n    case 1:\n      posString = `m ${note.Bounds.x + camera.x - 6} ${note.Bounds.y + camera.y + 8}`;\n      posString += sharpPath;\n      RenderSymbol(\n        renderProps,\n        StdAccidentals.Sharp,\n        note.Bounds.x - 12,\n        note.Bounds.y + 3,\n        theme,\n        note.Selected);\n      break;\n    case 2:\n      posString = `m ${note.Bounds.x + camera.x - 2} ${note.Bounds.y + camera.y + 10}`;\n      posString += doubleSharp;\n      break;\n    case -2:\n      dflatString = `m ${note.Bounds.x + camera.x - 15} ${note.Bounds.y + camera.y + 4}`;\n      dflatString += flatPath;\n    case -1:\n      posString = `m ${note.Bounds.x + camera.x - 5} ${note.Bounds.y + camera.y + 4}`;\n      posString += flatPath;\n      RenderSymbol(\n        renderProps,\n        StdAccidentals.Flat,\n        note.Bounds.x - 12,\n        note.Bounds.y + 3,\n        theme,\n        note.Selected);\n      break;\n    default:\n      break;\n  }\n  context.fillStyle = \"black\";\n//  context.fill(new Path2D(posString));\n//  if (type === -2) {\n//    context.fill(new Path2D(dflatString));\n//  }\n}\n\nexport { RenderAccidental, sharpPath, flatPath }\n","import { Beam, DetermineBeamDirection } from \"../Core/Beam.js\";\nimport { Camera } from \"../Core/Camera.js\";\nimport { Division, Measure } from \"../Core/Measure.js\";\nimport { Note } from \"../Core/Note.js\";\nimport { Stem } from \"../Core/Stem.js\";\nimport { NoteValues } from \"../Core/Values.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { RenderAccidental } from \"./Accidentals.Renderer.js\";\nimport { NoteHeads, RenderSymbol, TupletNumbers } from \"./MusicFont.Renderer.js\";\n\nenum StemDirection {\n  Up,\n  Down\n};\n\nenum BeamDirection {\n  UpMax,\n  UpDynamic,\n  DownMax,\n  DownDynamic,\n  Flat\n}\n\nconst noteHead = 'a6.7692 4.5128-33 1011.3543-7.3735 6.7692 4.5128-33 10-11.3543 7.3735'\nconst minimHead = 'm3.4871-7.6c-2.8881 1.8199-4.4271 5.1146-3.4804 7.593 1.0097 2.6437 4.4796 3.3897 7.7452 1.6654 3.2656-1.7244 5.0963-5.2694 4.0866-7.9131-1.0097-2.6437-4.4796-3.3897-7.7452-1.6654-.204.1077-.4136.1988-.6062.3201zm.9439 2.2422c.2051-.1244.4129-.218.6304-.3328 2.7838-1.47 5.4723-1.5391 6.0012-.1543.5289 1.3847-1.3011 3.7016-4.0849 5.1715-2.7838 1.47-5.4723 1.5391-6.0012.1543-.4876-1.2766 1.0334-3.3716 3.4545-4.8387z';\nconst semibreveHead = 'm0 0c-2.179-.517-3.7343-1.6332-4.4105-2.9419-.318-.592-.5063-1.2374-.5487-1.9093-.0007-.0102-.0006-.0193-.0007-.029-.0128-.7505.1884-1.4593.8037-2.2597.5643-.7381 1.4281-1.3704 2.5451-1.856 1.181-.5156 2.5808-.7711 4.0893-.7245.3068.0095.6093.031.9064.0639.323.033.6396.0795.9486.1387.6004.0987 1.172.2482 1.7053.4418.5244.1828 1.0055.4021 1.4786.6854.4184.2506.7446.4966 1.0648.7943.1604.1552.3095.3169.4462.4843.1078.1364.2081.2756.3003.4172.1023.1647.1927.3226.2769.5013.276.5854.4212 1.2499.4362 1.8122.0004 1.1138-.5653 2.1155-1.5114 2.9056-.6972.6075-1.5323 1.061-2.6135 1.4-.8055.2526-1.6452.389-2.4791.4131-.2762.014-.4894.0039-.7702.0012-.9463-.0305-1.8431-.1476-2.6674-.3388zm4.6894-1.4125c.1447-.112.2444-.2154.3968-.3951.2638-.3111.4388-.6218.5482-1.0313.0123-.0401.0234-.0804.0333-.1209.0239-.0946.0412-.1898.0523-.2852.0225-.3115.0052-.678-.0879-1.0312-.0237-.1025-.0463-.1983-.0684-.2898-.0952-.4243-.1871-.7491-.343-1.1885-.0092-.0247-.0211-.0619-.0306-.0867-.3292-.8566-.6698-1.4414-1.1513-1.8769-.6564-.6199-1.6233-.9665-2.6554-.65-.4133.1268-.7576.3414-.9859.5741-.133.1331-.2626.2983-.3633.4591-.2553.4107-.3782.722-.4192 1.1595-.009.1543-.0192.3419 0 .5216.0318.2014.0512.3701.0921.5643.1142.586.2765 1.1208.4055 1.5224.0015.0046.0027.0092.0041.0138.0616.206.1359.4023.2209.5881.0699.1605.1565.3438.24.4882.0562.1014.1153.2001.1764.2934.1048.1612.2045.2734.3178.4019.1792.197.3674.3563.5621.4824.3055.1864.621.2991.9378.3535.5811.1199 1.23.0175 1.572-.1447.2268-.1075.3484-.1694.5455-.322z';\n\nconst crotchetRest = 'c-.2863.1212-.4577.5392-.326.8318.0397.0418.4556.5392.8736 1.0868.9551 1.0764 1.1182 1.3313 1.3292 1.8288.8339 1.7054.3762 3.877-1.0847 5.2501-.1233.163-.6625.6186-1.1683.9948-1.4525 1.2498-2.1214 1.9604-2.368 2.5874-.0899.1651-.0899.3281-.0899.581-.0397.5789 0 .6291 1.7159 2.6209 2.3262 2.7922 3.9919 4.7506 4.1215 4.8739l.1233.1212-.163-.0815c-2.2948-.9551-4.8739-1.4128-5.7475-.9948-.2947.1212-.4661.2926-.5873.5789-.3365.7106-.2466 1.7556.2529 3.2897.4556 1.3794 1.371 3.2082 2.2844 4.5813.3762.5873 1.0868 1.5006 1.1683 1.5424.1233.1233.2947.0815.4159 0 .1233-.163.1233-.2947-.1212-.5789-.8736-1.2498-1.2895-3.8372-.7921-5.2104.2027-.6186.4577-.9551.9133-1.1662 1.208-.5392 3.879.1296 4.9972 1.2477.0815.0836.2529.255.3344.2947.2947.1233.7106-.0397.8339-.3344.1714-.2947.0815-.4974-.2947-.9551-.7022-.8339-2.8257-3.3315-3.1183-3.7077-.7524-.8736-1.0868-1.7054-1.1683-2.7504-.0397-1.3313.4974-2.7421 1.5027-3.6659.1212-.163.6604-.6207 1.16-.9948 1.5424-1.2916 2.1715-2.0001 2.416-2.671.1714-.5392.0899-1.0366-.2863-1.4943-.1296-.1212-1.5842-1.9186-3.2897-3.9585-2.3345-2.7442-3.1684-3.7474-3.2897-3.7892-.1714-.0397-.3762-.0397-.5476.0418z'\nconst quaverRest = 'c-.884.1666-1.5606.7769-1.8666 1.6201-.0663.272-.0663.3383-.0663.7106 0 .5117.0323.7837.272 1.1883.3383.6783 1.0489 1.2223 1.8598 1.4212.85.2397 2.2712.034 3.8981-.5049l.4046-.1394-1.9992 5.525-1.9652 5.5182c0 0 .0663.034.1734.1071.1989.1326.5372.2329.7769.2329.4046 0 .9163-.2329.9826-.4386 0-.0663.9486-3.2878 2.0978-7.1128l2.0315-7.0125-.0663-.0986c-.1649-.2057-.5032-.272-.7106-.1071-.0663.0663-.1717.2057-.238.306-.306.5117-1.0829 1.4212-1.4875 1.7595-.3723.306-.578.3383-.9163.2057-.306-.1666-.4063-.3383-.612-1.2546-.1989-.9095-.4369-1.3226-.9486-1.6609-.4726-.3043-1.0829-.4046-1.6201-.2652z';\nconst semiQuaverRest = 'c-.6228.1176-1.1016.5484-1.3116 1.1436-.0516.192-.0516.2388-.0516.5016 0 .3612.0228.5532.192.8388.2388.4788.7404.8628 1.3176 1.0032.5952.1692 1.5504.0468 2.7-.3324.168-.0708.3084-.1224.3084-.0984 0 .0276-1.0728 3.516-1.1196 3.6372-.1224.3096-.5304.882-.8868 1.242-.3324.3336-.5016.408-.7632.2868-.216-.1176-.2868-.24-.432-.8868-.1212-.4776-.2148-.7404-.4068-.9276-.5016-.5532-1.3644-.624-2.0304-.192-.3144.2148-.5532.5484-.6936.9096-.0516.1872-.0516.2388-.0516.5004 0 .3564.0276.5496.192.8352.2388.4776.7404.8628 1.3176 1.0032.2628.0744.9324.0744 1.3872 0 .3792-.0708.834-.1884 1.2888-.3336.192-.0696.3612-.1164.3612-.0936 0 0-2.3436 7.6272-2.3904 7.7436 0 .024.1872.1692.3792.216.192.0756.3852.0756.5772 0 .1872-.0468.3792-.1644.3792-.2388.024-.024.9804-3.6324 2.1516-8.0112l2.1288-7.9596-.0468-.0696c-.0948-.1452-.2868-.1692-.4548-.0984-.0948.0468-.0948.0468-.3804.4776-.2388.384-.576.7872-.768.9792-.2628.216-.4032.2628-.6432.1692-.2148-.1176-.2904-.2388-.4308-.8856-.1452-.642-.3144-.9336-.6708-1.1724-.3324-.2148-.7632-.2856-1.1484-.1872z';\nconst demiSemiQuaverRest = 'm0 0c-.516.101-.918.461-1.094.957-.043.16-.043.199-.043.418 0 .218 0 .3.043.418.137.441.418.777.856.976.297.16.437.18.855.18.52 0 .957-.078 1.657-.297.179-.063.316-.102.316-.102.019 0-.16.7-.399 1.536-.296 1.175-.417 1.554-.457 1.671-.16.301-.5.758-.718.957-.2.18-.317.219-.516.141-.18-.098-.242-.199-.359-.738-.102-.399-.18-.617-.34-.778-.418-.457-1.137-.515-1.692-.156-.261.176-.46.457-.578.754-.043.16-.043.199-.043.418 0 .301.024.461.161.699.199.399.617.719 1.097.836.219.063.778.063 1.156 0 .317-.058.696-.16 1.075-.277.179-.059.32-.102.32-.102 0 .02-.797 3.051-.84 3.11-.156.34-.476.758-.715.996-.258.258-.398.301-.617.219-.18-.098-.242-.2-.359-.739-.102-.398-.18-.617-.34-.773-.418-.461-1.137-.52-1.692-.16-.261.179-.46.457-.578.758-.043.156-.043.199-.043.417 0 .219 0 .297.043.418.137.438.418.778.856.977.32.16.437.18.875.18.32 0 .422 0 .679-.043.36-.059.739-.176 1.157-.297l.258-.102v.063c-.02.078-1.696 6.375-1.715 6.414-.02.082.34.238.558.238.219 0 .539-.137.559-.238.019-.02.976-4.145 2.172-9.164 2.133-9.086 2.133-9.106 2.094-9.168-.063-.078-.161-.117-.282-.117-.14.019-.199.078-.34.316-.277.481-.597.898-.773 1.039-.121.078-.223.078-.379.02-.18-.102-.242-.2-.359-.739-.121-.539-.262-.777-.559-.976-.277-.18-.637-.238-.957-.16z';\n\nconst quaverFlag = 'c11.7122 2.9669 6.3069 13.252 5.2534 16.885 9.622-13.142-5.1221-18.5026-5.2534-26.47z';\nconst quaverFlagInverted = 'c10.7362-2.7197 5.7813-12.1477 4.8156-15.4779 8.8202 12.0469-4.6953 16.9607-4.8156 24.2642z';\nconst noteXBuffer = 9;\n// TODO: This is because we are using temporary SVG files for rendering, will need to\n// create custom SVGs so our note heads are consistent (but we can do that much later in dev)\nconst mHeadXOffset = 3.4871;\nconst mHeadYOffset = -7.6;\n\nfunction RenderNote(note: Note,\n                    renderProps: RenderProperties,\n                    Bounds: Bounds,\n                    selected: boolean,\n                    flipNote: boolean,\n                    stemDir: StemDirection,\n                    theme: Theme,\n                    colour: string = \"black\"): void {\n  \n  // TODO: This will be determined by key signature\n  if (note.Accidental !== 0) { \n    RenderAccidental(renderProps, note, note.Accidental, theme); \n  }\n  let { x, y, width, height } = Bounds;\n  const { canvas, context, camera } = renderProps;\n  let flipNoteOffset = flipNote ? \n    stemDir === StemDirection.Up ? 11 : -11 : 0;\n  let posString = `m ${x + camera.x} ${y + 7.5 - 1 + camera.y}`;\n  // TODO: Move this offset somewhere else to be constant\n  y = y + 3;\n  //\n  colour = note.Editable ? theme.NoteElements : theme.UneditableColour;\n  colour = selected ? theme.SelectColour : colour;\n  let noteString = '';\n  switch (note.Duration) {\n    case 0.125:\n    case 0.25:\n   //   noteString = posString + noteHead;\n      RenderSymbol(\n        renderProps,\n        NoteHeads.crotchet,\n        x, y, theme, selected);\n      break;\n    case 0.5:\n      RenderSymbol(\n        renderProps,\n        NoteHeads.minim,\n        x, y, theme, selected);\n      break;\n    case 1:\n      RenderSymbol(\n        renderProps,\n        NoteHeads.whole,\n        x - 2.5, y, theme, selected);\n      break;\n    default:\n      RenderSymbol(\n        renderProps,\n        NoteHeads.crotchet,\n        x, y, theme, selected);\n  }\n  context.fillStyle = theme.NoteElements;\n  if (selected) {\n    context.fillStyle = theme.SelectColour;\n  }\n // context.fill(new Path2D(noteString));\n\n\n  let debug = false;\n  if (debug) {\n    context.fillStyle = \"rgba(200, 0, 0, 0.5)\";\n    context.fillRect(x + camera.x, y + camera.y - 5, width, height);\n    context.fillStyle = theme.NoteElements;\n  }\n}\n\nfunction RenderDots(\n  renderProps: RenderProperties,\n  note: Note,\n  dotXStart: number,\n  ): void {\n\n  const { canvas, context, camera } = renderProps;\n\n  let dotCount = 0;\n  //doing two separate switches for now\n  switch (note.Duration) {\n    case NoteValues.n32d:\n    case NoteValues.n16d:\n    case NoteValues.n8d:\n    case NoteValues.n4d:\n    case NoteValues.n2d:\n    case NoteValues.n1d:\n      dotCount = 1;\n      break;\n    case NoteValues.n32dd:\n    case NoteValues.n16dd:\n    case NoteValues.n8dd:\n    case NoteValues.n4dd:\n    case NoteValues.n2dd:\n    case NoteValues.n1dd:\n      dotCount = 2;\n      break;\n    case NoteValues.n32ddd:\n    case NoteValues.n16ddd:\n    case NoteValues.n8ddd:\n    case NoteValues.n4ddd:\n    case NoteValues.n2ddd:\n    case NoteValues.n1ddd:\n      dotCount = 3;\n      break;\n    default:\n      dotCount = 0;\n  }\n  const circle = 'a1.485 1.485 90 10-2.97 0 1.485 1.485 90 102.97 0';\n  for (let d = 0; d < dotCount; d++) {\n    let lineY = note.Line * 5;\n    if (note.Line % 2 !== 0) {\n      lineY = (note.Line - 1) * 5;\n    }\n    const cpath = `m${dotXStart + camera.x + 17 + (d * 5)} \n      ${lineY + camera.y}` + circle;\n    context.fill(new Path2D(cpath));\n  }\n\n}\n\nfunction RenderRest(\n  ctx: CanvasRenderingContext2D,\n  div: Division,\n  cam: Camera,\n  note: Note,\n  msr: Measure,\n  theme: Theme): void {\n\n    ctx.fillStyle = theme.NoteElements;\n\n    let x = div.Bounds.x + cam.x + noteXBuffer;\n//    let y = div.Bounds.y + cam.y + ((note.Line - 3 - msr.SALineTop) * 5);\n    let y = Measure.GetNotePositionOnLine(msr, note.Line - 3) + cam.y;\n    let path = `m${x} ${y}`;\n    ctx.fillStyle = note.Selected ? theme.SelectColour : theme.NoteElements;\n\n    if (div.Duration === 0.3125) {\n      y += 7;\n      path = `m ${x} ${y}` + demiSemiQuaverRest;\n      ctx.fill(new Path2D(path));\n    }\n    else if (div.Duration === 0.0625) {\n      y += 9;\n      path = `m ${x} ${y}` + semiQuaverRest;\n      ctx.fill(new Path2D(path));\n    }\n    else if (div.Duration > 0.0625 && div.Duration <= 0.125) {\n      y = y + 10;\n      path = `m${x} ${y}` + quaverRest;\n      ctx.fill(new Path2D(path));\n    }\n    else if (div.Duration === 0.25) {\n      path = path + crotchetRest;\n      ctx.fill(new Path2D(path));\n    }\n    else if (div.Duration === 0.5) {\n      y = Measure.GetNotePositionOnLine(msr, note.Line) - 6 + cam.y;\n      ctx.fillRect(x, y, 14, 6);\n    }\n    else if (div.Duration === 1) {\n        y = Measure.GetNotePositionOnLine(msr, note.Line - 2) + cam.y;\n        x = div.Bounds.x + cam.x + (div.Bounds.width / 2) - 7;\n        ctx.fillRect(x, y, 14, 6);\n    }\n  }\n\nfunction RenderTupletAnnotation(\n  renderProps: RenderProperties,\n  coords: {x1: number, y1: number, x2: number, y2: number },\n  count: string, theme: Theme): void {\n    const { canvas, context, camera } = renderProps;\n\n    const width = coords.x2 - coords.x1;\n\n    // TODO: Add this to theme maybe\n    context.fillStyle = \"#75757\";\n    context.fillRect(coords.x1 + camera.x, coords.y1 - 12 + camera.y, 1, 6);\n    context.fillRect(coords.x1 + camera.x,\n                     coords.y1 - 12 + camera.y,\n                     (width / 2) - 14, 1);\n\n    context.fillRect(coords.x1 + width + camera.x,\n                     coords.y1 - 12 + camera.y, 1, 6);\n    context.fillRect(coords.x1 + (width / 2) + 14 + camera.x,\n                     coords.y1 - 12 + camera.y,\n                     (width / 2) - 14, 1);\n\n    RenderSymbol(\n      renderProps,\n      GetTupletGlyph(count),\n      coords.x1 + width / 2 - 7,\n      coords.y1 - 5,\n      theme,\n      false);\n}\n\nfunction GetTupletGlyph(count: string): TupletNumbers {\n  switch (count) {\n    case \"0\":\n      return TupletNumbers.Zero;\n    case \"1\":\n      return TupletNumbers.One;\n    case \"2\":\n      return TupletNumbers.Two;\n    case \"3\":\n      return TupletNumbers.Three;\n    case \"4\":\n      return TupletNumbers.Four;\n    case \"5\":\n      return TupletNumbers.Five;\n    case \"6\":\n      return TupletNumbers.Six;\n    case \"7\":\n      return TupletNumbers.Seven;\n    case \"8\":\n      return TupletNumbers.Eight;\n    case \"9\":\n      return TupletNumbers.Nine;\n    default:\n      return TupletNumbers.Three;\n  }\n}\n\nfunction RenderTuplets(\n  renderProps: RenderProperties,\n  divisions: Division[],\n  notes: Note[],\n  staff: number,\n  msr: Measure, theme: Theme): void {\n    const { canvas, context, camera } = renderProps;\n    const divs = divisions.filter(d => d.Staff === staff);\n    divs.sort((a: Division, b: Division) => {\n      return a.Beat - b.Beat;\n    });\n    let foundTuplet = false;\n    let tupleX = 0;\n    let tupleXEnd = 0;\n    let tupleY = 0;\n    let tupleCount = 0;\n\n    divs.forEach((div: Division, i: number) => {\n      const notesInDiv = notes.filter(n => n.Beat === div.Beat\n                                      && n.Staff === staff);\n      let nArray = [...notesInDiv];\n      const stemDir = DetermineStemDirection([notesInDiv], [div], staff, msr);\n      if (!notesInDiv[0].Tuple) {\n        if (foundTuplet) {\n          foundTuplet = false;\n          RenderTupletAnnotation(\n            renderProps,\n            {x1: tupleX, y1: tupleY, x2: tupleXEnd, y2: tupleY},\n            tupleCount.toString(), theme);\n          tupleX = 0;\n          tupleXEnd = 0;\n          tupleY = 0;\n          tupleCount = 0;\n        }\n        return;\n      }\n      if (!foundTuplet) {\n        foundTuplet = true;\n        tupleX = div.Bounds.x + 9;\n        tupleCount = notesInDiv[0].TupleDetails.Count;\n        tupleY = div.Bounds.y;\n        tupleXEnd = div.Bounds.x + 19;\n      } else {\n        tupleXEnd = div.Bounds.x + 19;\n      }\n    });\n  }\n\nfunction RenderTies(renderProps: RenderProperties, divisions: Division[], notes: Note[], staff: number,msr: Measure): void {\n  const { canvas, context, camera } = renderProps;\n  const divs = divisions.filter(d => d.Staff === staff);\n  divs.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n  divs.forEach((div: Division, i: number) => {\n    if (i === divs.length - 1) {\n      return;\n    }\n    const divNotes = notes.filter((note: Note) => note.Beat === div.Beat);\n    divNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n    const nextDivNotes = notes.filter((note: Note) => note.Beat === divs[i+1].Beat);\n    nextDivNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n\n    divNotes.forEach(note => {\n      if (!note.Tied || note.Rest || note.Tied && \n         note.Beat + note.Duration * msr.TimeSignature.bottom > note.TiedEnd) {\n        return;\n      }\n      const tiedTo = nextDivNotes.find(n => \n        n.Line === note.Line &&\n        n.Tied &&\n        n.Beat <= n.TiedEnd);\n      if (tiedTo === undefined) { console.error(\"No tied note found: \", note); return; }\n      const nextNote = tiedTo;\n      const x1 = div.Bounds.x + noteXBuffer + camera.x;\n      const y1 = Measure.GetNotePositionOnLine(msr, note.Line) + camera.y;\n      const x2 = divs[i+1].Bounds.x + noteXBuffer + camera.x;\n      const y2 = Measure.GetNotePositionOnLine(msr, nextNote.Line) + camera.y\n      const curveOffset = (note.Line < 15) ? -15 : 15;\n      const curveStartOffset = (note.Line < 15) ? -8 : 8;\n      //TODO: This is a temporary representation of a tie or slur\n      context.fillStyle = \"#757575\";\n      context.strokeStyle = \"#757575\";\n      context.setLineDash([]);\n      context.beginPath();\n      context.moveTo(x1 + (noteXBuffer / 2), y1 + curveStartOffset);\n      context.quadraticCurveTo((x1 + (noteXBuffer / 2)) + ((x2 - x1) / 2),\n                               y1 + curveOffset,\n                               x2 + (noteXBuffer / 2),\n                               y2 + curveStartOffset);\n      context.stroke();\n    })\n  })\n}\n\n// This will replace some parts of renderStemRevise eventually\nfunction DetermineStemDirection(\n  notes: Array<Note[]>,\n  divisions: Division[],\n  staff: number,\n  measure: Measure): StemDirection {\n    let dir = StemDirection.Up;\n    // TODO: Not sure we will actually need this, seems like it shouldn't come\n    // out of order in the first place.\n    notes.sort((a: Note[], b: Note[]) => {\n      return a[0].Beat - b[0].Beat;\n    })\n\n    let match = true;\n    divisions.forEach((div: Division, i: number) => {\n      if (div.Beat !== notes[i][0].Beat) {\n        console.error(\"Index: \", i);\n        console.error(\"Match failed on div: \", div);\n        console.error(\"Match failed on beat: \", div.Beat);\n        console.error(\"Match fail note: \", notes[i][0])\n        match = false;\n      }\n    });\n \n    if (!match) {\n      console.error(\"Divisions and note array do not match\");\n      return;\n    }\n\n    const middleLine = staff === 0 ?\n      measure.SALineMid : measure.SBLineMid;\n    let highestLine: number = Number.MAX_SAFE_INTEGER;\n    let lowestLine: number = Number.MIN_SAFE_INTEGER;\n\n    notes.forEach((na: Note[]) => {\n      na.forEach((n: Note) => {\n        if (n.Line < highestLine) {\n          highestLine = n.Line;\n        }\n        if (n.Line > lowestLine) {\n          lowestLine = n.Line;\n        }\n      });\n    });\n\n    if (middleLine - highestLine < lowestLine - middleLine) {\n      dir = StemDirection.Up;\n    } else {\n      dir = StemDirection.Down;\n    }\n\n    return dir;\n  }\n\nfunction RenderStemRevise(\n  renderProps: RenderProperties,\n  notes: Array<Note[]>,\n  divisions: Division[],\n  staff: number,\n  msr: Measure,\n  beamDir: BeamDirection,\n  theme: Theme,\n  colour?: string): void {\n\n    // Check that divisions and note arrays match\n    let match = true;\n    divisions.forEach((div: Division, i: number) => {\n      if (div.Beat !== notes[i][0].Beat) {\n        match = false;\n      }\n    });\n\n    if (!match) {\n      console.error(\"Divisions and note array do not match\");\n      return;\n    }\n\n    const { canvas, context, camera } = renderProps;\n\n    let highestLine: number = Number.MAX_SAFE_INTEGER;\n    let lowestLine: number = Number.MIN_SAFE_INTEGER;\n\n    let stemDirection = StemDirection.Up;  \n    let stemToMidLine = false;\n    //TODO: We are just going to see what happens with up\n    let beamDirection = BeamDirection.UpMax;\n\n    let stemEndY = 0; // end y position of stem\n\n    let beamStartX = 0;\n    let beamEndX = 0;\n\n    const middleLine = staff === 0 ? Measure.GetMeasureMidLine(msr) : msr.GetGrandMeasureMidLine(); // TODO: Magiccccc (number should be removed)\n    const yLineBuffer = staff === 0 ? 0 + msr.SALineTop : msr.SBLineTop;\n    const staffTopLine = staff === 0 ? msr.SALineTop : msr.SBLineTop;\n    const midStemThreshHold = 7;\n    const lineHeight = 5;\n\n    // Highest line has a lower number (lines start at 0 from the top \n    // of the measure and go down\n    notes.forEach((na: Note[]) => {\n      na.forEach((n: Note) => {\n        if (n.Line < highestLine) {\n          highestLine = n.Line;\n        }\n        if (n.Line > lowestLine) {\n          lowestLine = n.Line;\n        }\n      });\n    });\n    // TODO: Beam Direction\n\n    if (middleLine - highestLine + staffTopLine < lowestLine - middleLine - staffTopLine) {\n      stemDirection = StemDirection.Up;\n      stemEndY = divisions[0].Bounds.y + ((highestLine - yLineBuffer) * lineHeight) - 35 + camera.y;\n      if (highestLine - staffTopLine >= middleLine + midStemThreshHold) {\n        stemToMidLine = true;\n        stemEndY = divisions[0].Bounds.y + (middleLine * lineHeight) + camera.y;\n      }\n\n    } else {\n      stemDirection = StemDirection.Down;\n      stemEndY = divisions[0].Bounds.y + ((lowestLine - yLineBuffer) * lineHeight) + 35 + camera.y;\n      if (lowestLine - staffTopLine <= middleLine - midStemThreshHold) {\n        stemToMidLine = true;\n        stemEndY = divisions[0].Bounds.y + (middleLine * lineHeight) + camera.y;\n      }\n    }\n\n    // Render stems TODO: Move stem creation logic elsewhere\n    divisions.forEach((div: Division, i: number) => {\n      if (div.Duration === 1) { return; }\n      const xBuffer = stemDirection === StemDirection.Up ? 11.5 : 0.25;\n      const stemX = Math.floor(div.Bounds.x + xBuffer + camera.x + noteXBuffer);\n\n      if (i === 0) {\n        beamStartX = stemX;\n      } else if (i === divisions.length - 1) {\n        beamEndX = stemX;\n        if (stemDirection === StemDirection.Down) {\n          // beam end x position needs to account for the stem thickness\n          beamEndX += 2;\n        }\n     }\n\n      const sortedNotes = notes[i].sort((a: Note, b: Note) => {\n        return a.Line - b.Line\n      })\n\n      const highLine = sortedNotes[0].Line;\n      const lowLine = sortedNotes[sortedNotes.length-1].Line;\n      const startPos = (stemDirection === StemDirection.Up) ? \n                      div.Bounds.y + ((lowLine - yLineBuffer) * lineHeight) + camera.y - 2: // 2 is a buffer for stem\n                      div.Bounds.y + ((highLine - yLineBuffer) * lineHeight) + camera.y + 2;\n      if (divisions.length === 1 && divisions[0].Duration < 0.25) {\n        const flagLoop = GetFlagCount(div.Duration);\n        if (stemDirection === StemDirection.Up) {\n          for (let i = 0; i < flagLoop; i++ ) {\n            let flagString = `m${stemX} ${stemEndY + (i * 8)}`;// + quaverFlag; // rough testing for flag\n            context.fill(new Path2D(flagString + quaverFlag));\n          }\n        } else {\n          for (let i = 0; i < flagLoop; i++ ) {\n            let flagString = `m${stemX} ${stemEndY - (i * 8)}`;// + quaverFlag; // rough testing for flag\n            context.fill(new Path2D(flagString + quaverFlagInverted));\n          }\n        }\n      } else if (divisions.length > 1 && divisions[0].Duration < 0.25) {\n        context.fillStyle = theme.NoteElements;\n        // getting highest line in division 0\n        let startY = 0;\n        let endY = 0;\n        let xB = stemDirection === StemDirection.Up ? 10.5 : 0;\n        stemEndY = stemDirection === StemDirection.Up ?\n          Measure.GetNotePositionOnLine(msr, highestLine) - 35 + camera.y :\n          Measure.GetNotePositionOnLine(msr, lowestLine) + 35 + camera.y;\n        if (beamDir === BeamDirection.UpMax) {\n//          stemEndY = Measure.GetNotePositionOnLine(msr, highestLine) - 35 + camera.y;\n          if (stemDirection === StemDirection.Up) {\n            stemEndY -= i * (10 / (divisions.length - 1));\n            endY = stemEndY - 10;\n          } else {\n            stemEndY += i * (10 / (divisions.length - 1));\n            endY = stemEndY + 10;\n          }\n        } else if (beamDir === BeamDirection.DownMax) {\n          if (stemDirection === StemDirection.Up) {\n            stemEndY += i * (10 / (divisions.length - 1));\n            endY = stemEndY + 10;\n          } else {\n            stemEndY -= i * (10 / (divisions.length - 1));\n            endY = stemEndY - 10;\n          }\n        } else {\n          endY = stemEndY;\n        }\n        if (i === 0) {\n          const fNoteX = notes[0][0].Bounds.x;\n          const lNoteX = notes[notes.length-1][0].Bounds.x;\n\n           const newBeam = new Beam(\n            new Bounds(divisions[0].Bounds.x + 19,\n                       stemEndY, 5, 5),\n                       { x: fNoteX + xB, y: stemEndY - camera.y},\n                       { x: lNoteX + xB, y: endY - camera.y});\n\n          newBeam.Render(context, camera, GetFlagCount(divisions[0].Duration), stemDirection, theme);\n        }\n      }\n      const diff = stemEndY - startPos;\n      const newStem = new Stem(new Bounds(stemX, startPos, 1.5, diff));\n      newStem.Render(context, camera, theme);\n    });\n}\n\nfunction GetFlagCount(value: number): number {\n  let count = 1;\n  switch (value) {\n    case 0.03125:\n      count = 3;\n      break;\n    case 0.0625:\n      count = 2;\n      break;\n    default:\n  }\n  return count;\n}\n\nfunction renderLedgerLines(\n  notes: Note[],\n  division: Division,\n  renderProps: RenderProperties,\n  staff: number,\n  msr: Measure,\n  theme: Theme,\n  colour?: string): void {\n\n    const { canvas, context, camera } = renderProps;\n\n    const ledgerX = (division.Bounds.x + noteXBuffer) - 6 + camera.x;\n\n    //const ledgerString = `m ${x - 6} ${y - 5} h 22 v 2 h-20 v-2 Z`;\n    const ledgerString = `h 22 v 1.5 h-20 v-1.5 Z`;\n\n    const bdNotes = notes.filter((note: Note) => note.Beat === division.Beat &&\n                                note.Staff === division.Staff);\n    const yLineBuffer = staff === 0 ? Measure.GetMeasureMidLine(msr) : msr.GetGrandMeasureMidLine();\n    const midLine = staff === 0 ? msr.SALineMid : msr.SBLineMid;\n    if (bdNotes.length === 0) { return; }\n    bdNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n\n    const highestLine = bdNotes[0];\n    const lowestLine = bdNotes[bdNotes.length-1];\n    context.fillStyle = theme.NoteElements;\n\n    for (let l=midLine - 6; l >= highestLine.Line; l -= 2) {\n      const ledgerY = Measure.GetNotePositionOnLine(msr, l) + camera.y + 2.5;\n      const path = `m ${ledgerX} ${ledgerY}` + ledgerString;\n      context.fill(new Path2D(path));\n    }\n    for (let h=midLine + 6; h <= lowestLine.Line; h += 2) {\n      const ledgerY = Measure.GetNotePositionOnLine(msr, h) + camera.y + 2.5;\n      const path = `m ${ledgerX} ${ledgerY}` + ledgerString;\n      context.fill(new Path2D(path));\n    }\n  }\n\nexport { \n  RenderNote,\n  RenderRest,\n  renderLedgerLines,\n  RenderStemRevise, \n  RenderTies,\n  DetermineStemDirection,\n  RenderDots,\n  StemDirection,\n  BeamDirection,\n  RenderTuplets\n};\n","import { BeamDirection, StemDirection } from \"../Renderers/Note.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\nimport { DivGroup, Division } from \"./Division.js\";\nimport { Measure } from \"./Measure.js\";\nimport { Note } from \"./Note.js\";\n\nclass Beam {\n  Bounds: Bounds;\n  Direction: string;\n  StartPoint: {x: number, y: number};\n  EndPoint: {x: number, y: number};\n  constructor(bounds: Bounds, start: {x: number, y: number}, end: {x: number, y: number}) {\n    this.Bounds = bounds;\n    this.StartPoint = start;\n    this.EndPoint = end;\n  }\n\n  Render(context: CanvasRenderingContext2D, cam: Camera, count: number, stemDir: StemDirection, theme: Theme): void {\n      context.fillStyle = theme.NoteElements;\n      const baseThickness = 6;\n      const svgLine = `M ${this.StartPoint.x + cam.x} ${this.StartPoint.y + cam.y}\n        L${this.EndPoint.x + cam.x + 2} ${this.EndPoint.y + cam.y}\n        V${(this.EndPoint.y + cam.y) + baseThickness} \n        L${this.StartPoint.x + cam.x} ${this.StartPoint.y + baseThickness + cam.y} z `\n      context.fill(new Path2D(svgLine));\n\n      let yBuffer = stemDir === StemDirection.Up ? 2.5 : -8;\n      let flagBuffer = stemDir === StemDirection.Up ? 6 : 0;\n      for (let i=1;i<count;i++) {\n\n        const thickness = 6;\n        const line = `M ${this.StartPoint.x + cam.x} ${this.StartPoint.y + (flagBuffer * i) + (yBuffer * i) + cam.y}\n          L${this.EndPoint.x + cam.x + 2} ${this.EndPoint.y + (flagBuffer * i) + (yBuffer * i) + cam.y}\n          V${(this.EndPoint.y + (flagBuffer * i) + (yBuffer * i) + cam.y) + thickness} \n          L${this.StartPoint.x + cam.x} ${this.StartPoint.y + (flagBuffer * i) + (yBuffer * i) + thickness + cam.y} z`;\n        context.fill(new Path2D(line));\n      }\n  }\n}\n\nfunction DetermineBeamDirection(measure: Measure,\n                                divGroup: DivGroup,\n                                stemDir: StemDirection): BeamDirection {\n\n  const divisions = divGroup.Divisions.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n\n  if (stemDir === StemDirection.Up) {\n    const firstDivTopLine = divGroup.Notes[0].sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    })[0].Line;\n    const lastDivTopLine = divGroup.Notes[divGroup.Notes.length-1].sort((a: Note, b:Note) => {\n      return a.Line - b.Line;\n    })[0].Line;\n\n    if (firstDivTopLine === lastDivTopLine) { return BeamDirection.Flat}\n    else if (firstDivTopLine < lastDivTopLine) { return BeamDirection.DownMax; }\n    else if (firstDivTopLine > lastDivTopLine) { return BeamDirection.UpMax; }\n  } else {\n    const firstDivBotLine = divGroup.Notes[0].sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    })[divGroup.Notes[0].length-1].Line;\n    const lastDivBotLine = divGroup.Notes[divGroup.Notes.length-1].sort((a: Note, b:Note) => {\n      return a.Line - b.Line;\n    })[divGroup.Notes[divGroup.Notes.length-1].length-1].Line;\n\n    // Flat beam direction\n    if (firstDivBotLine === lastDivBotLine) { return BeamDirection.Flat}\n    else if (firstDivBotLine < lastDivBotLine) { return BeamDirection.UpMax; }\n    else if (firstDivBotLine > lastDivBotLine) { return BeamDirection.DownMax; }\n\n  }\n  return BeamDirection.Flat;\n}\n\nfunction GenerateBeams(measure: Measure, divGroup: DivGroup, stemDir: StemDirection): Beam {\n  // lines go top - bot in terms of value (0... 30 etc.)\n  let startTopLine: number, endTopLine = Number.MIN_SAFE_INTEGER;\n  let startBotLine: number, endBotLine = Number.MAX_SAFE_INTEGER;\n  const divisions = divGroup.Divisions.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n  // assuming that divGroup.notes array is sorted by beat\n  startTopLine = divGroup.Notes[0].sort((a: Note, b:Note) => {\n    return a.Line - b.Line;\n  })[0].Line;\n  startBotLine = divGroup.Notes[0].sort((a: Note, b:Note) => {\n    return a.Line - b.Line;\n  })[divGroup.Notes[0].length - 1].Line;\n\n  endTopLine = divGroup.Notes[divGroup.Notes.length-1].sort((a: Note, b:Note) => {\n    return a.Line - b.Line;\n  })[0].Line;\n  endBotLine = divGroup.Notes[divGroup.Notes.length-1].sort((a: Note, b:Note) => {\n    return a.Line - b.Line;\n  })[divGroup.Notes[divGroup.Notes.length-1].length - 1].Line;\n\n  // we'll figure this shit out\n//  if (stemDir === StemDirection.Up) {}\n  //  19 = various buffers (x / note)\n  const beamStartX = divisions[0].Bounds.x + 19;\n  const beamStartY = Measure.GetNotePositionOnLine(measure, startTopLine) - 35;\n\n  const beamEndX = divisions[divisions.length-1].Bounds.x + 19;\n  const beamEndY = Measure.GetNotePositionOnLine(measure, endTopLine) - 35;\n\n  const beam = new Beam(new Bounds(\n    beamStartX, beamStartY, (beamEndX - beamStartX), 5),\n    {x: beamStartX, y: beamStartY },\n    {x: beamEndX, y: beamEndY });\n  return beam;\n}\n\nexport { Beam, GenerateBeams, DetermineBeamDirection } \n","const clefPath = 'c -3.4414 -0.2 -6.9551 -2.3586 -9.0565 -4.836 c -2.4363 -2.8725 -3.4408 -6.7778 -3.1835 -9.985 c 0.7559 -9.4235 11.0037 -14.9932 14.7972 -19.1095 c 2.5392 -2.7553 3.0715 -4.0984 3.6387 -5.5155 c 1.098 -2.743 1.2749 -5.9568 -0.902 -6.1967 c -2.0784 -0.2291 -3.7883 3.0395 -4.552 5.2732 c -0.6868 2.0092 -1.1432 4.025 -0.73 7.053 c 0.1857 1.3604 5.2966 39.3342 5.3828 39.9228 c 0.8607 5.8824 -2.5033 8.3164 -5.9373 8.7494 c -7.4156 0.9349 -9.7951 -6.6011 -6.4715 -9.4632 c 2.5587 -2.2037 6.2813 -0.3118 6.0802 3.3111 c -0.1781 3.2088 -3.3245 3.3034 -4.1284 3.2301 c 1.2342 2.2134 10.5383 3.3698 9.1097 -6.6304 c -0.2007 -1.4052 -4.9236 -37.0907 -5.0393 -37.8892 c -0.8664 -5.9781 -0.9984 -10.71 2.1162 -16.232 c 1.1499 -2.0385 2.9671 -3.3545 3.8592 -3.1822 c 0.196 0.0378 0.3914 0.1098 0.5464 0.2698 c 2.3892 2.4618 3.1222 7.921 2.8604 11.057 c -0.268 3.211 -0.4174 6.5351 -3.6102 10.4116 c -1.2356 1.5001 -5.0061 4.8048 -7.1679 6.7035 c -3.0375 2.6676 -5.2407 4.9975 -6.4328 7.8082 c -1.3397 3.1589 -1.5664 7.1354 1.4594 10.6638 c 1.7405 1.9935 4.6284 3.408 7.0589 3.4382 c 6.7579 0.0839 8.7314 -3.2473 8.7945 -7.0198 c 0.1038 -6.2119 -7.3955 -8.5605 -10.4787 -4.2893 c -1.7877 2.4766 -1.0019 5.0833 0.1987 6.3235 c 0.4121 0.4256 0.8724 0.7498 1.3079 0.9306 c 0.1578 0.0655 0.5291 0.2381 0.4237 0.4908 c -0.0876 0.2103 -0.2579 0.2221 -0.413 0.2035 c -1.9443 -0.2332 -4.0972 -2.0916 -4.6266 -5.2883 c -0.7714 -4.6592 3.3402 -10.1861 9.2091 -9.2822 c 3.8423 0.5918 7.4097 3.8979 7.0969 10.0543 c -0.2683 5.2764 -4.6425 9.4065 -11.2101 9.0248 z';\n\nfunction RenderTrebleClef(x: number, y: number): string {\n  return `m ${x} ${y} ${clefPath}`;\n}\n\nexport { RenderTrebleClef };\n\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { Camera } from \"./Camera.js\";\n\nconst KeySignatures: Map<string, string[]> = new Map<string, string[]>([\n  [\"CMaj/Amin\", []],\n\n  [\"GMaj/Emin\", [\"F#\"]],\n  [\"DMaj/Bmin\", [\"F#\", \"C#\"]],\n  [\"AMaj/F#min\", [\"F#\", \"C#\", \"G#\"]],\n  [\"EMaj/C#min\", [\"F#\", \"C#\", \"G#\", \"D#\"]],\n  [\"BMaj/G#min\", [\"F#\", \"C#\", \"G#\", \"D#\", \"A#\"]],\n  [\"F#Maj/D#min\", [\"F#\", \"C#\", \"G#\", \"D#\", \"A#\", \"E#\"]],\n  [\"C#Maj/A#min\", [\"F#\", \"C#\", \"G#\", \"D#\", \"A#\", \"E#\", \"B#\"]],\n\n  [\"FMaj/Dmin\", [\"Bb\"]],\n  [\"BbMaj/Gmin\", [\"Bb\", \"Eb\"]],\n  [\"EbMaj/Cmin\", [\"Bb\", \"Eb\", \"Ab\"]],\n  [\"AbMaj/Fmin\", [\"Bb\", \"Eb\", \"Ab\", \"Db\"]],\n  [\"DbMaj/Bbmin\", [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\"]],\n  [\"GbMaj/Ebmin\", [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\", \"Cb\"]],\n  [\"CbMaj/Abmin\", [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\", \"Cb\", \"Fb\"]],\n]);\n\ninterface KeySignature {\n  Name: string;\n  Accidentals: string[]\n}\n\nclass KeySig implements ISelectable {\n  ID: number;\n  Selected: boolean;\n  SelType: SelectableTypes = SelectableTypes.KeySig;\n  Bounds: Bounds;\n  Editable: boolean;\n  constructor() {\n    this.Bounds = new Bounds(0, 0, 0, 0);\n    this.Selected = false;\n    this.Editable = true;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n\n}\n\nexport { KeySignature, KeySignatures, KeySig }\n","import { KeySignatures } from \"../Core/KeySignatures.js\";\nimport { Measure } from \"../Core/Measure.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { flatPath, sharpPath } from \"./Accidentals.Renderer.js\";\n\ninterface keyProps {\n  Accidental: string;\n  Lines: number[];\n}\n\nfunction RenderKeySignature(\n  renderProps: RenderProperties,\n  msr: Measure,\n  keyString: string,\n  clefString: string,\n  xOff: number): void {\n    const { canvas, context, camera } = renderProps;\n    context.fillStyle = \"black\";\n    const keyProps = GetKeyProps(clefString, keyString);\n    let posString = '';\n    keyProps.Lines.forEach((l: number, i: number) => {\n      if (keyProps.Accidental === \"#\") {\n        posString = `m ${msr.Bounds.x + xOff + (i * 5) + camera.x + 5} \n          ${msr.Bounds.y + (l * 5) + camera.y + 4}`;\n        posString += sharpPath;\n      } else {\n        posString = `m ${msr.Bounds.x + xOff + (i * 5) + camera.x - 5} \n          ${msr.Bounds.y + (l * 5) + camera.y + 4}`;\n        posString += flatPath;\n      }\n      context.fill(new Path2D(posString));\n    });\n}\n\nfunction GetKeyProps(clefString: string, keyString: string): keyProps {\n  const props = { Accidental: \"\", Lines: [] };\n  const notes = KeySignatures.get(keyString);\n  let acc = \"\";\n  if (notes.length > 0) {\n    if (notes[0].includes('#')) {\n      acc = \"#\";\n    } else {\n      acc = \"b\";\n    }\n  }\n\n  props.Accidental = acc;\n  switch (clefString) {\n    case \"bass\":\n      break;\n    case \"treble\":\n      props.Lines = fromTreble(notes, acc);\n      break;\n    default:\n  }\n  return props;\n}\n\nfunction fromTreble(notes: string[], accidental: string): number[] {\n  let lines: number[] = [];\n  const sharpLines = [11, 14, 10, 13, 16, 12, 15];\n  const flatLines =  [15, 12, 16, 13, 17, 14, 18];\n  if (accidental === \"#\") {\n    lines = sharpLines.slice(0, notes.length);\n  } else {\n    lines = flatLines.slice(0, notes.length);\n  }\n  return lines;\n}\n\nexport { RenderKeySignature };\n\n\n","import { DetermineBeamDirection, GenerateBeams } from \"../Core/Beam.js\";\nimport { DivGroup, DivGroups, GetDivisionGroups, IsRestOnBeat } from \"../Core/Division.js\";\nimport { StaffType } from \"../Core/Instrument.js\";\nimport { Clef, Division, Measure } from \"../Core/Measure.js\";\nimport { Note } from \"../Core/Note.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { ConfigSettings, Theme } from \"../entry.js\";\nimport { RenderTrebleClef } from \"./Elements/TrebleClef.js\";\nimport { RenderKeySignature } from \"./KeySignature.Renderer.js\";\nimport { Clefs, RenderSymbol, TimeSigNumbers } from \"./MusicFont.Renderer.js\";\nimport { BeamDirection, DetermineStemDirection,\n  RenderDots,\n  RenderNote,\n  RenderRest,\n  RenderStemRevise,\n  RenderTies,\n  RenderTuplets,\n  StemDirection, renderLedgerLines } from \"./Note.Renderer.js\";\n\nconst line_space = 10;\nconst line_width = 1;\nconst endsWidth = 2;\n\nconst debug = true;\nconst noteXBuffer = 9;\n\nfunction RenderMeasure(\n  measure: Measure, renderProps: RenderProperties, hovId: number,\n  mousePos: { x: number, y: number }, lastMeasure: boolean,\n  noteInput: boolean, index: number, restInput: boolean, noteValue: number, config: ConfigSettings) {\n\n//    if (hovId === measure.ID)\n    RenderHovered(measure, renderProps, hovId, mousePos, noteInput, restInput, noteValue, config.Theme);\n//    if (debug)\n     // RenderDebug(measure, renderProps, index, mousePos);\n    RenderMeasureBase(measure, renderProps, mousePos, lastMeasure, config.Theme);\n    RenderNotes(measure, renderProps, 0, config.Theme);\n    if (measure.Instrument.Staff === StaffType.Grand) {\n      RenderNotes(measure, renderProps, 1, config.Theme);\n    }\n}\n\n// TODO: move this function elsewhere\nfunction MiddleLineBounds(measure: Measure): Bounds {\n  let b = new Bounds(measure.Bounds.x, 0, measure.GetBoundsWithOffset().width, 5);\n  let actualLine = 15; // middle line number\n  const diff = actualLine - measure.SALineBot;\n  b.y = measure.Bounds.y + measure.GetMeasureHeight() + ((diff * 5) - 2.5);\n  return b;\n}\n\nfunction RenderHovered(\n  measure: Measure,\n  renderProps: RenderProperties,\n  hovId: number,\n  mousePos: { x: number, y: number },\n  noteInput: boolean,\n  restInput: boolean,\n  noteValue: number,\n  theme: Theme) {\n    \n    const { canvas, context, camera } = renderProps;\n\n    let line = Measure.GetLineHovered(mousePos.y, measure);\n    if (measure.Instrument.Staff === StaffType.Rhythm) {\n      line.num = 15;\n      line.bounds = MiddleLineBounds(measure);\n    }\n      if (noteInput) {\n       // context.fillStyle = \"rgb(0, 0, 255, 0.1)\"; \n       // const lineY = measure.Bounds.y + (line.num * (line_space / 2) - (line_space / 4));\n       // context.fillRect(line.bounds.x + camera.x, lineY + camera.y, line.bounds.width, line.bounds.height);\n      }\n      // now we are going to test \"Sections\" as they were in v2\n      const divisions = measure.Divisions.concat(measure.BDivisions);\n      divisions.forEach(s => {\n        if (s.Bounds.IsHovered(mousePos.x, mousePos.y, camera)) {\n         // context.fillStyle=\"rgb(0, 0, 255, 0.1)\";\n         // context.fillRect(s.Bounds.x + camera.x,\n         //                  s.Bounds.y + camera.y,\n         //                  s.Bounds.width,\n         //                  s.Bounds.height);\n\n          if (noteInput) {\n             const noteY = measure.Bounds.y + (line.num * (line_space / 2));// + (line_space / 2));\n            // temp note\n            const tempNoteProps = {\n              Beat: s.Beat,\n              Duration: noteValue,\n              Line: line.num,\n              Rest: restInput,\n              Tied: false,\n              Staff: s.Staff,\n              Tuple: false,\n              TupleIndex: 0,\n              TupleCount: 1,\n              Clef: \"treble\"\n            } \n            const tempNote = new Note(tempNoteProps);\n            if (!restInput) {\n              RenderNote(tempNote,\n                         renderProps,\n                         new Bounds(s.Bounds.x + noteXBuffer,\n                         line.bounds.y, 0, 0), true, false, StemDirection.Up, theme);\n              RenderStemRevise(\n                renderProps,\n                [[tempNote]],\n                [s],\n                s.Staff,\n                measure,\n                BeamDirection.Flat,\n                theme);\n\n              renderLedgerLines(\n                [tempNote],\n                s,\n                renderProps,\n                s.Staff,\n                measure,\n                theme);\n            } else {\n              RenderRest(\n                renderProps.context,\n                s,\n                renderProps.camera,\n                tempNote,\n                measure,\n                theme);\n            }\n          }\n        }\n      });\n  }\n\n// Renders the basic lines and bar endings of the measure, no notes or clefs or time\n// time signatures\nfunction RenderMeasureBase(\n  msr: Measure,\n  renderProps: RenderProperties,\n  mousePos: {x: number, y: number},\n  lastMeasure: boolean,\n  theme: Theme): void {\n\n    const { canvas, context, camera } = renderProps;\n\n    // prob move elsewhere I don't know\n    if (msr.Selected) {\n    context.fillStyle = theme.SelectColour;\n    context.fillRect(msr.Bounds.x + camera.x,\n                     msr.Bounds.y + camera.y,\n                     msr.Bounds.width + msr.XOffset,\n                     msr.Bounds.height);\n    }\n\n    const msrMidLine = 15 - msr.SALineTop;\n    const grndMsrMidLine = msr.GetGrandMeasureMidLine();\n\n    context.fillStyle = theme.NoteElements;\n\n    const lastEndThickness = lastMeasure ?\n      endsWidth * 2 : endsWidth;\n\n    const grandMsrHeight = msr.GetGrandMeasureHeight();\n\n    const msrLineHeight = msr.Instrument.Staff === StaffType.Grand ?\n      grandMsrHeight : msr.GetMeasureHeight();\n\n    // TODO: Please clean this method up omg\n    const lineTopStaff = msr.Bounds.y + (5 * msrMidLine - (line_space * 2));\n    const lineBotStaff = msr.Instrument.Staff === StaffType.Grand ? \n      msr.Bounds.y + msr.GetMeasureHeight() + (5 * grndMsrMidLine + (line_space * 2)) :\n      msr.Bounds.y + (5 * msrMidLine + (line_space * 2));\n    const grandLineHeight = lineBotStaff - lineTopStaff;\n\n    const measureBegin = \n      `M${msr.Bounds.x + camera.x} \n          ${ msr.Bounds.y + ((5) * msrMidLine) - (line_space * 2) + camera.y} h \n          ${endsWidth} v ${grandLineHeight} h -${endsWidth} Z`;\n\n    const measureEnd = \n      `M${msr.Bounds.x + msr.Bounds.width + msr.XOffset + camera.x} \n        ${ msr.Bounds.y + ((5) * msrMidLine) - (line_space * 2) + camera.y} h \n        ${lastEndThickness} v ${grandLineHeight + 1} h -${lastEndThickness} Z`;\n\n    const measureDoubleEnd = \n      `M${msr.Bounds.x + msr.Bounds.width + msr.XOffset + camera.x - 4} \n          ${msr.Bounds.y + ((5) * msrMidLine) - (line_space * 2) + camera.y} h \n          ${endsWidth} v ${grandLineHeight + 1} h -${endsWidth} Z`;\n\n    if (msr.Instrument.Staff === StaffType.Single || msr.Instrument.Staff === StaffType.Grand) {\n      for (let l=0;l<5;l++) {\n            const lineString = `M${msr.Bounds.x + camera.x} \n            ${msr.Bounds.y + ((5) * msrMidLine) - (line_space * 2) + line_space * l + camera.y} h \n            ${msr.Bounds.width + msr.XOffset} v ${line_width} h -${msr.Bounds.width + msr.XOffset} Z`;\n\n            const linePath = new Path2D(lineString);\n            context.fill(linePath);\n      }\n    }\n\n    if (msr.Instrument.Staff === StaffType.Grand) {\n      for (let l=0;l<5;l++) {\n            const lineString = \n            `M${msr.Bounds.x + camera.x} \n            ${msr.Bounds.y + msr.GetMeasureHeight() + ((5) * msr.GetGrandMeasureMidLine()) - (line_space * 2) + line_space * l + camera.y} \n            h ${msr.Bounds.width + msr.XOffset} v ${line_width} h -${msr.Bounds.width + msr.XOffset} Z`;\n\n            const linePath = new Path2D(lineString);\n            context.fill(linePath);\n      }\n    }\n\n    if (msr.Instrument.Staff === StaffType.Rhythm) {\n            const lineString = `M${msr.Bounds.x + camera.x} \n            ${msr.Bounds.y + ((5) * msrMidLine) + line_space * 0 + camera.y} h \n            ${msr.Bounds.width + msr.XOffset} v ${line_width} h -${msr.Bounds.width + msr.XOffset} Z`;\n        const linePath = new Path2D(lineString);\n        context.fill(linePath);\n    }\n      context.fill(new Path2D(measureBegin));\n      context.fill(new Path2D(measureEnd));\n      if (lastMeasure) {\n        context.fill(new Path2D(measureDoubleEnd));\n      }\n\n      if (msr.RenderClef) { \n        RenderMeasureClef(renderProps, msr, theme); \n      }\n      if (msr.RenderKey) {\n        const key = \"CMaj/Amin\";\n        if (key !== \"CMaj/Amin\") {\n        const xOff = msr.RenderClef ? 24 : 4;\n          RenderKeySignature(renderProps,\n                             msr,\n                             \"CMaj/Amin\",\n                             \"treble\",\n                              xOff);\n        } else {\n          msr.RenderKey = false;\n          // This is a temporary fix for dev\n        }\n      }\n      if (msr.RenderTimeSig) { \n        const xOff = msr.RenderClef ? msr.RenderKey ? 48 : 36 : 4;\n        RenderTimeSig(renderProps, msr, \"4\", \"4\", xOff, theme);\n      }\n}\n\n// TODO: Move this\nconst bassClef = 'm0 0c0-1.276 1.012-2.288 2.288-2.288s2.288 1.012 2.288 2.288-1.012 2.288-2.288 2.288-2.288-1.012-2.288-2.288zm0-11c0-1.276 1.012-2.288 2.288-2.288s2.288 1.012 2.288 2.288-1.012 2.288-2.288 2.288-2.288-1.012-2.288-2.288zm-14.212-5.984c7.524 0 12.848 3.784 12.848 10.912 0 11.572-11.616 18.26-22.748 22.924-.088.088-.22.132-.352.132-.264 0-.484-.22-.484-.484 0-.132.044-.264.132-.352 8.932-5.192 18.26-11.66 18.26-21.736 0-5.324-2.816-10.428-7.656-10.428-3.476 0-6.072 2.508-7.216 5.852.616-.352 1.232-.572 1.892-.572 2.42 0 4.4 1.98 4.4 4.4 0 2.552-1.936 4.708-4.4 4.708-2.64 0-4.928-2.112-4.928-4.708 0-5.808 4.532-10.648 10.252-10.648z';\nconst bassClefSmall = 'm0 0c0-1.0208.8096-1.8304 1.8304-1.8304s1.8304.8096 1.8304 1.8304-.8096 1.8304-1.8304 1.8304-1.8304-.8096-1.8304-1.8304zm0-8.8c0-1.0208.8096-1.8304 1.8304-1.8304s1.8304.8096 1.8304 1.8304-.8096 1.8304-1.8304 1.8304-1.8304-.8096-1.8304-1.8304zm-11.3696-4.7872c6.0192 0 10.2784 3.0272 10.2784 8.7296 0 9.2576-9.2928 14.608-18.1984 18.3392-.0704.0704-.176.1056-.2816.1056-.2112 0-.3872-.176-.3872-.3872 0-.1056.0352-.2112.1056-.2816 7.1456-4.1536 14.608-9.328 14.608-17.3888 0-4.2592-2.2528-8.3424-6.1248-8.3424-2.7808 0-4.8576 2.0064-5.7728 4.6816.4928-.2816.9856-.4576 1.5136-.4576 1.936 0 3.52 1.584 3.52 3.52 0 2.0416-1.5488 3.7664-3.52 3.7664-2.112 0-3.9424-1.6896-3.9424-3.7664 0-4.6464 3.6256-8.5184 8.2016-8.5184z';\n\nfunction RenderMeasureClef(\n  renderProps: RenderProperties,\n  msr: Measure, theme: Theme): void {\n\n    const { canvas, context, camera } = renderProps;\n\n    const msrMidLine = Measure.GetMeasureMidLine(msr);\n    const gMsrMidLine = msr.GetGrandMeasureMidLine();\n\n    msr.Clefs.forEach((clef: Clef) => {\n      if (clef.Beat === 1) {\n        clef.render(renderProps, theme);\n      } else {\n        const div = msr.Divisions.find(d => d.Beat === clef.Beat);\n        if (clef.Type === \"treble\") {\n         // const clefPath = RenderTrebleClef(\n         //     div.Bounds.x + camera.x,\n         //     msr.Bounds.y + camera.y + (5 * msrMidLine + (line_space * 2)));\n         //   context.fill(new Path2D(clefPath));\n        } else if (clef.Type === \"bass\") {\n          const clefPath = `m ${div.Bounds.x + camera.x} \n            ${msr.Bounds.y + camera.y + (msrMidLine * 5) - 5}` + bassClefSmall;\n          context.fill(new Path2D(clefPath));\n        }\n      }\n    });\n\n    msr.GrandClefs.forEach((clef: Clef) => {\n      if (clef.Beat === 1) {\n        if (clef.Type === \"treble\") {\n        } else if (clef.Type === \"bass\") {\n          clef.render(renderProps, theme);\n//          RenderSymbol(renderProps,\n//                       Clefs.F,\n//                       clef.Bounds.x + 3,\n//                       msr.Bounds.y + msr.GetMeasureHeight() + ((gMsrMidLine - 2) * 5));\n//          const clefPath = `m ${msr.Bounds.x + 30 + camera.x} \n//            ${msr.Bounds.y + msr.GetMeasureHeight() + camera.y + (msr.GetGrandMeasureMidLine() * 5) - 2}` + bassClef;\n//          context.fill(new Path2D(clefPath));\n        }\n      } else {\n        const div = msr.Divisions.find(d => d.Beat === clef.Beat);\n        if (clef.Type === \"treble\") {\n          const clefPath = RenderTrebleClef(\n              div.Bounds.x + camera.x,\n              msr.Bounds.y + camera.y + (5 * 45 + (line_space * 2)));\n            context.fill(new Path2D(clefPath));\n        } else if (clef.Type === \"bass\") {\n          const clefPath = `m ${div.Bounds.x + camera.x} \n            ${msr.GetMeasureHeight() + camera.y + (msr.GetGrandMeasureMidLine() * 5) - 5}` + bassClefSmall;\n          context.fill(new Path2D(clefPath));\n        }\n      }\n    });\n}\n\n\nfunction RenderTimeSig(\n  renderProps: RenderProperties,\n  msr: Measure,\n  top: string,\n  bottom: string,\n  xOffset: number, theme: Theme): void {\n    msr.TimeSignature.render(renderProps, msr, theme);\n}\n\nfunction RenderNotes(\n  msr: Measure,\n  renderProps: RenderProperties,\n  staff: number,\n  theme: Theme) {\n  \n  const { canvas, context, camera } = renderProps;\n  const mDivs = msr.Divisions.filter(d => d.Staff === staff);\n  mDivs.forEach((div: Division, i: number) => {\n    const divNotes = msr.Notes.filter((note: Note) => note.Beat === div.Beat &&\n                                      note.Staff === div.Staff);\n    divNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n    \n    if (IsRestOnBeat(div.Beat, divNotes, div.Staff)) {\n      RenderRest(context, div, camera, divNotes[0], msr, theme);\n      return;\n    }\n    renderLedgerLines(msr.Notes, div, renderProps, staff, msr, theme);\n  });\n  const dGroups = GetDivisionGroups(msr, staff);\n  dGroups.DivGroups.forEach((group: DivGroup, i: number) => {\n    if (group.Divisions.length > 0) {\n      const stemDir = DetermineStemDirection(group.Notes, group.Divisions, staff, msr);\n      const beamAngle = DetermineBeamDirection(msr, group, stemDir);\n\n//      const beam = GenerateBeams(msr, group, stemDir);\n//      beam.Render(context, camera);\n      RenderStemRevise(renderProps, group.Notes, group.Divisions, staff, msr, beamAngle, theme);\n\n      group.Divisions.forEach(div => {\n        let hasFlipped = false;\n\n        const dN = msr.Notes.filter((note: Note) => note.Beat === div.Beat &&\n                                   note.Staff === staff);\n        dN.sort((a: Note, b: Note) => {\n          return a.Line - b.Line;\n        });\n\n        dN.forEach((n: Note, i: number) => {\n          const yPos = msr.Bounds.y + (n.Line - msr.SALineTop) * 5;\n          const isFlipped = IsFlippedNote(dN, i, stemDir);\n          if (isFlipped) { hasFlipped = true; }\n          let flipNoteOffset = isFlipped ? \n            stemDir === StemDirection.Up ? 11 : -11 : 0;\n\n          if (n.Rest) {\n            RenderRest(context, div, camera, n, msr, theme);\n          } else {\n            RenderNote(n,\n                     renderProps, n.Bounds, n.Selected, isFlipped, stemDir, theme);\n          }\n        });\n        // render dots\n        dN.forEach((n: Note) => {\n          let flipNoteOffset = hasFlipped ? \n            stemDir === StemDirection.Up ? 11 : 0 : 0;\n          RenderDots(renderProps, n, \n                    div.Bounds.x + noteXBuffer + flipNoteOffset);\n        });\n      });\n    }\n  });\n  RenderTies(renderProps, msr.Divisions, msr.Notes, StaffType.Single, msr);\n  RenderTuplets(renderProps,\n               msr.Divisions,\n               msr.Notes,\n               StaffType.Single,\n               msr, theme);\n\n  if (msr.Instrument.Staff === StaffType.Grand) {\n    RenderTies(renderProps, msr.Divisions, msr.Notes, StaffType.Grand, msr);\n    RenderTuplets(renderProps,\n                 msr.Divisions,\n                 msr.Notes,\n                 StaffType.Grand,\n                 msr, theme);\n  }\n}\n\nfunction IsFlippedNote(notes: Note[], index: number, dir: StemDirection): boolean {\n  let flipped = false;\n  let countAbove = 0;\n  let countBelow = 0;\n  const nLine = notes[index].Line;\n  if (notes.length <= 1) { return flipped; }\n  \n  for (let b = index + 1; b <= notes.length - 1; b++) {\n    const line = notes[b].Line;\n    if (line - nLine === b - index || line - nLine === index - index) {\n      countBelow++;\n    } else {\n      break;\n    }\n  }\n\n  for (let a = index - 1; a >= 0; a--) {\n    const line = notes[a].Line;\n    if (nLine - line === index - a || nLine - line === index - index) {\n      countAbove++;\n    } else {\n      break;\n    }\n  }\n\n  const totalCount = countAbove + countBelow + 1;\n  const notePos = countAbove + 1;\n  if (totalCount % 2 === 0) {\n    flipped = dir === StemDirection.Up ? \n      notePos % 2 !== 0 : notePos % 2 === 0;\n  } else {\n    flipped = notePos % 2 === 0;\n  }\n  \n  return flipped;\n}\n\ninterface NoteGroup {\n  startBeat: number;\n  endBeat: number;\n}\n\nfunction GetNoteGroups(msr: Measure): NoteGroup[] {\n  let startBeat = -1;\n  let endBeat = -1;\n  const noteGroups = []\n\n  return noteGroups;\n}\n\nexport { RenderMeasure, IsFlippedNote }\n","import { Camera } from '../Core/Camera.js';\nimport { Measure } from '../Core/Measure.js';\nimport { Page } from '../Core/Page.js';\nimport { ConfigSettings } from '../Types/Config.js';\nfunction RenderPage(\n  page: Page,\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  cam: Camera,\n  formatting: boolean,\n  config: ConfigSettings,\n  measures: Measure[]): void {\n    const scale = 6;\n    // TODO: Change these variable names\n    let a4w = page.Bounds.width;//210 * scale;\n    let a4h = page.Bounds.height;//297 * scale;\n    const x = page.Bounds.x;\n    const y = page.Bounds.y;\n\n    if (config.PageSettings?.AutoSize) {\n      a4h = measures[measures.length-1].Bounds.y + measures[measures.length-1].GetMeasureHeight() + 40;\n      if (measures.length < 4) {\n        a4w = measures[measures.length-1].Bounds.x + measures[measures.length-1].GetBoundsWithOffset().width + 40;\n      }\n    }\n\n//    context.save();\n\n //   context.setTransform(1, 0, 0, 1, 0, 0);\n    context.filter = \"blur(4px)\";\n//    context.fillStyle = \"rgb(71, 71, 71)\";\n    context.fillStyle = config.Theme.PageShadowColour;// \"#0e1114\";\n    context.fillRect(x + cam.x - 8, y + cam.y + 8, a4w, a4h);\n    context.filter = \"none\";\n\n    context.fillStyle = config.Theme.PageColour;;\n    context.fillRect(x + cam.x, y + cam.y, a4w, a4h);\n\n    if (formatting) {\n    context.strokeStyle = \"rgba(51, 2, 16, 0.2)\";\n\n    // Render Margin Lines\n    // Left\n    context.beginPath();\n    context.setLineDash([10, 10]);\n    context.moveTo(x + page.Margins.left + cam.x, y + cam.y);\n    context.lineTo(x + page.Margins.left + cam.x, y + a4h + cam.y);\n    context.stroke();\n\n    // Right\n    context.beginPath();\n    context.setLineDash([10, 10]);\n    context.moveTo(x + a4w - page.Margins.right + cam.x, y + cam.y);\n    context.lineTo(x + a4w - page.Margins.right + cam.x, y + a4h + cam.y);\n    context.stroke();\n\n    // Top\n    context.beginPath();\n    context.setLineDash([10, 10]);\n    context.moveTo(x + cam.x, y + page.Margins.top + cam.y);\n    context.lineTo(x + a4w + cam.x, y + page.Margins.top + cam.y);\n    context.stroke();\n\n    // Bottom\n    context.beginPath();\n    context.setLineDash([10, 10]);\n    context.moveTo(x + cam.x, y + a4h - page.Margins.bottom + cam.y);\n    context.lineTo(x + a4w + cam.x, y + a4h - page.Margins.bottom + cam.y);\n    context.stroke();\n\n    // Reset stroke style\n    context.strokeStyle = \"black\";\n    const adjusterColour = \"rgba(51, 2, 16, 0.8)\";\n    const lineColour = \"rgba(2,51,16,0.8)\";\n\n    RenderAdjuster(x + page.Margins.right + cam.x, y + cam.y, \"down\", adjusterColour, context);\n    RenderAdjuster(x + a4w - page.Margins.left + cam.x, y + cam.y, \"down\", adjusterColour, context);\n\n    RenderAdjuster(x + cam.x, y + page.Margins.top + cam.y, \"right\", adjusterColour, context);\n    RenderAdjuster(x + a4w + cam.x, y + page.Margins.top + cam.y, \"left\", adjusterColour, context);\n\n    RenderAdjuster(x + cam.x, y + a4h - page.Margins.bottom + cam.y, \"right\", adjusterColour, context);\n    RenderAdjuster(x + a4w + cam.x, y + a4h - page.Margins.bottom + cam.y, \"left\", adjusterColour, context);\n\n    // Render Lines\n    page.PageLines.forEach(line => {\n      RenderAdjuster(x + cam.x - 25, y + line.LineBounds.y + cam.y + 12.5, \"right\", lineColour, context);\n      context.strokeStyle = lineColour;\n      context.beginPath();\n      context.setLineDash([10, 10]);\n      context.moveTo(x + cam.x, y + line.LineBounds.y + 12.5 + cam.y);\n      context.lineTo(x + a4w + cam.x, y + line.LineBounds.y + 12.5 + cam.y);\n      context.stroke();\n    });\n\n    // Render bounds\n    context.strokeRect(page.MarginAdj[0].Bounds.x + cam.x, page.MarginAdj[0].Bounds.y + cam.y,\n                       page.MarginAdj[0].Bounds.width, page.MarginAdj[0].Bounds.height);\n    context.stroke();\n    \n    }\n//    context.restore();\n  }\n\nfunction RenderAdjuster(x: number,\n                        y: number,\n                        dir: string,\n                        colour: string,\n                        context: CanvasRenderingContext2D): void {\n  const size = 9;\n  const buffer = 8;\n  const scale = 1.7;\n  context.fillStyle = colour;\n  context.beginPath();\n  // TODO: This is a little bit heeeinous\n  switch (dir) {\n    case \"down\":\n      context.moveTo(x, y - buffer);\n      context.lineTo(x - size, y - buffer - size * scale);\n      context.lineTo(x + size, y - buffer - size * scale);\n      break;\n    case \"right\":\n      context.moveTo(x - buffer, y);\n      context.lineTo(x - buffer - size * scale, y - size);\n      context.lineTo(x - buffer - size * scale, y + size);\n      break;\n    case \"left\":\n      context.moveTo(x + buffer, y);\n      context.lineTo(x + buffer + size * scale, y - size);\n      context.lineTo(x + buffer + size * scale, y + size);\n      break;\n    case \"up\":\n      context.moveTo(x, y + buffer);\n      context.lineTo(x - size, y + buffer + size * scale);\n      context.lineTo(x + size, y + buffer + size * scale);\n      break;\n    default:\n  }\n  context.fill();\n}\n\nexport { RenderPage }\n","import { RenderPanel } from \"../Renderers/Debug.Renderer.js\";\nimport { RenderMeasure } from \"../Renderers/Measure.Renderer.js\";\nimport { RenderPage } from \"../Renderers/Page.Renderer.js\";\nimport { ConfigSettings } from \"../Types/Config.js\";\nimport { Selector } from \"../Workers/Selector.js\";\nimport { Camera } from \"./Camera.js\";\nimport { Measure } from \"./Measure.js\";\nimport { Page } from \"./Page.js\";\nimport { Sheet } from \"./Sheet.js\";\n\nconst renderDebug = false;\nconst scaleV = 1;\n\nconst Renderer = (c: HTMLCanvasElement, \n                  ctx: CanvasRenderingContext2D,\n                  measures: Measure[],\n                  pages: Page[],\n                  hovElements: {MeasureID: number},\n                  mousePos: {x: number, y: number},\n                 cam: Camera,\n                 noteInput: boolean,\n                 restInput: boolean,\n                 formatting: boolean,\n                  config: ConfigSettings,\n                 noteValue: number) => {\n  // reset\n  ctx.fillStyle = config.Theme.BackgroundColour;//\"grey\";252c38 16191f\n\n  ctx.save();\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.clearRect(0, 0, c.width, c.height);\n  if (config.PageSettings?.RenderBackground) {\n    ctx.fillRect(0, 0, c.width, c.height);\n  }\n  ctx.restore();\n  if (config.PageSettings?.RenderPage) {\n    pages.forEach(page => {\n      RenderPage(page, c, ctx, cam, formatting, config, measures);\n    });\n  }\n  ctx.fillStyle = config.Theme.NoteElements;\n\n  measures.forEach((m: Measure, i: number) => {\n    const renderProps = {\n      canvas: c,\n      context: ctx,\n      camera: cam\n    }\n    const lastMeasure = (i === measures.length - 1);\n    RenderMeasure(m,\n                  renderProps,\n                  hovElements.MeasureID,\n                  mousePos,\n                  lastMeasure,\n                  noteInput,\n                  i,\n                  restInput,\n                 noteValue,\n                 config);\n  })\n}\n\nconst RenderDebug = (c: HTMLCanvasElement,\n                  ctx: CanvasRenderingContext2D,\n                  sheet: Sheet,\n                  mousePos: {x: number, y: number },\n                  cam: Camera,\n                  selector: Selector): void => {\n                    const renderProps = {\n                      canvas: c,\n                      context: ctx,\n                      camera: cam\n                    };\n   //                 RenderPanel(renderProps);\n                  }\n\nexport { Renderer, RenderDebug };\n","import { Camera } from \"../Core/Camera.js\";\nimport { Instrument, StaffType } from \"../Core/Instrument.js\";\nimport { Measure, MeasureProps } from \"../Core/Measure.js\";\nimport { Page } from \"../Core/Page.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { Message } from \"../Types/Message.js\";\nimport { ConfigSettings } from \"../entry.js\";\n\n// Defaults, these will be moved somewhere else but fine here for now\nconst sTopLine = 5;\nconst sBotLine = 24;\nconst lineHeight = 5;\n\nconst mh = (sBotLine - sTopLine) * lineHeight;\n\nconst CreateDefaultPiano = (): Instrument => {\n  const defaultPiano: Instrument = {\n    Position: {x: 0, y: 5},\n    Staff: StaffType.Grand\n  }\n\n  return defaultPiano;\n}\n\nfunction CreateInstrument(y: number, config: ConfigSettings): Instrument {\n  let staff: StaffType = StaffType.Single;\n  console.log(\"config: \", config);\n  if (config.DefaultStaffType) {\n    console.log(\"This exists\");\n    switch (config.DefaultStaffType) {\n      case \"rhythm\":\n        staff = StaffType.Rhythm;\n        console.log(\"ye?\");\n        break;\n      case \"grand\":\n        staff = StaffType.Grand;\n        break;\n      case \"single\": \n      default:\n        staff = StaffType.Single;\n    }\n  }\n  console.log(\"staff: \", staff);\n  const instr: Instrument = {\n    Position: { x: 0, y: y },\n    Staff: staff\n  }\n\n  return instr;\n}\n\nconst CreateDefaultMeasure = (id: { count: number }, instr: Instrument, page: Page, cam: Camera, callback: (msg: Message) => void): Measure => {\n\n  const msrHeight = instr.Staff === StaffType.Single ? mh * 2 : mh;\n\n  const props: MeasureProps = {\n    Instrument: instr,\n    Bounds: new Bounds(instr.Position.x, page.PageLines[0].LineBounds.y, 150, msrHeight),\n    TimeSignature: { top: 4, bottom: 4 },\n    KeySignature: \"CMaj/Amin\",\n    Notes: [],\n    Clef: \"treble\",\n    RenderClef: true,\n    RenderTimeSig: true,\n    RenderKey: false,\n    Camera: cam,\n    Page: page,\n    Message: callback,\n  }\n  return new Measure(props, id);\n}\n\nconst CreateMeasure = (instr: Instrument, \n                    bounds: Bounds,\n                    timeSignature: { top: number, bottom: number },\n                    keySignature: string,\n                    clef: string,\n                    cam: Camera,\n                    runningId: { count: number },\n                    page: Page,\n                    renderClef: boolean = false,\n                    callback: (msg: Message) => void): Measure =>\n  {\n    const props: MeasureProps = {\n      Instrument: instr,\n      Bounds: bounds,\n      TimeSignature: timeSignature,\n      KeySignature: keySignature,\n      Notes: [],\n      Clef: clef,\n      RenderClef: false,\n      RenderTimeSig: false,\n      RenderKey: false,\n      Camera: cam,\n      Page: page,\n      Message: callback,\n    }\n    return new Measure(props, runningId);\n  }\n\n\nexport { CreateDefaultPiano, CreateDefaultMeasure, CreateMeasure, CreateInstrument };\n","import { ConfigSettings } from \"../Types/Config\";\n\nclass Camera {\n  x: number;\n  y: number;\n  oldX: number;\n  oldY: number;\n  Zoom: number;\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    this.oldX = x;\n    this.oldY = y;\n    this.Zoom = 1;\n  }\n}\n\nexport { Camera };\n","import { Camera } from \"../Core/Camera.js\";\nimport { Clef, Division, Measure } from \"../Core/Measure.js\";\nimport { Note } from \"../Core/Note.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { Message, MessageType } from \"../Types/Message.js\";\nimport { UpdateNoteBounds } from \"./NoteInput.js\";\nimport { ReturnMidiNumber } from \"./Pitcher.js\";\nclass Selector {\n  Measures: Measure[];\n  Clefs: Clef[];\n // Notes: { msr: Measure, note: Note }[];\n  Notes: Map<Measure, Note[]>;\n  // Selectable { msr: Measure, sel: Selectable[]>\n  // Currently having these mapped to a measure is okay but may need a refactor\n  // later down the line\n  Elements: Map<Measure, ISelectable[]>;\n  constructor() {\n    this.Measures = [];\n    this.Clefs = [];\n    this.Notes = new Map<Measure, Note[]>();\n    this.Elements = new Map<Measure, ISelectable[]>();\n  }\n\n  TrySelectElement(msr: Measure, x: number, y: number, cam: Camera, shiftKey: boolean, msg: (msg: Message) => void, elems: Map<Measure, ISelectable[]>): ISelectable {\n    let elem: ISelectable; // element we have selected\n    let elements: ISelectable[] = [];\n    let selectedElements: ISelectable[] = this.Elements.get(msr) ? this.Elements.get(msr) : [];\n   // if (!shiftKey) {\n   //   this.DeselectAllElements();\n   // }\n    UpdateNoteBounds(msr, 0);\n    elements.push(...msr.Notes);\n    elements.push(...msr.Clefs);\n    elements.push(...msr.GrandClefs);\n    elements.push(msr.TimeSignature);\n    elements.forEach((e: ISelectable) => {\n      if (e.IsHovered(x, y, cam) && e.Selected === false) {\n//        if (e.Editable !== undefined && e.Editable === false) {\n//          return;\n//        }\n        e.Selected = true;\n        selectedElements.push(e);\n        if (e.SelType === SelectableTypes.Note) {\n          const n = e as Note;\n          const m: Message = {\n          messageData: {\n            MessageType: MessageType.Selection,\n            Message: {\n              msg: 'selected',\n              obj: n,\n              },\n            },\n            messageString: 'Selected Note'\n          }\n          msg(m);\n          if (n.Tied) {\n            const tiedNotes = SelectTiedNotes(n, msr) as ISelectable[];\n            selectedElements.push(...tiedNotes);\n          }\n        }\n        elem = e;\n        this.Elements.set(msr, selectedElements);\n      }\n    });\n    return elem;\n  }\n\n  DeselectAllElements(elems: Map<Measure, ISelectable[]>): Map<Measure, ISelectable[]> {\n    for (let [measure, elem] of elems) {\n      elem.forEach((e: ISelectable) => {\n        e.Selected = false;\n      });\n      elems.delete(measure);\n    }\n\n    return new Map<Measure, ISelectable[]>;\n  }\n\n  SelectElement(): ISelectable {\n    let elem: ISelectable; // element we have selected\n\n    return elem;\n  }\n\n  DeselectAll(): void {\n    // TODO: Measure selection\n    for ( let [measure, notes] of this.Notes) {\n      notes.forEach(note => {\n        note.Selected = false;\n      });\n      this.Notes.delete(measure);\n    };\n\n    // This should replace the above eventually\n    for ( let [measure, elem] of this.Elements) {\n      elem.forEach(e => {\n        e.Selected = false;\n      });\n      this.Elements.delete(measure);\n    };\n  }\n\n  DeselectNote(note: Note): void {\n    let noteIndex = -1;\n    for ( let [msr, notes] of this.Notes) {\n      notes.forEach((note: Note, i: number) => {\n        if (note === note) {\n          noteIndex = i;\n        }\n      });\n      if (noteIndex >= 0) {\n        this.RemoveDeselected([noteIndex], msr);\n      }\n    }\n  }\n\n  RemoveDeselected(indexes: number[], key: Measure): void {\n    indexes.sort();\n    for (let i=indexes.length-1; i >= 0; i--) {\n      this.Notes.get(key).splice(i, 1);\n    }\n    if (this.Notes.get(key).length === 0) {\n      this.Notes.delete(key);\n    }\n  }\n\n  SelectById(\n    measures: Measure[],\n    id: number): ISelectable {\n      let selectable: ISelectable;\n      this.DeselectAll();\n      measures.forEach(m => {\n        // check here for measure selection when implemented\n        // maybe also div/beam/stem/clef/sig/artic etc.\n        m.Notes.forEach(n => {\n          if (n.ID === id) {\n            n.Selected = true;\n            selectable = n;\n            let nArray = [];\n            nArray.push(n);\n            if (n.Tied) {\n              nArray.push(...SelectTiedNotes(n, m));\n            }\n            this.Elements.set(m, nArray);\n          }\n        })\n      });\n      return selectable;\n    }\n\n  SelectMeasure(msr: Measure): void {\n      if (this.Measures.find(m => m.ID === msr.ID)) {\n      const index = this.Measures.indexOf(msr);\n      msr.Selected = false;\n      this.Measures.splice(index, 1);\n    } else {\n      this.Measures.push(msr);\n      msr.Selected = true;\n    }\n  }\n\n  // This should all be fairly generic eventually?\n  SelectClef(clef: Clef): void {\n    if (this.Clefs.find(c => c.ID === clef.ID)) {\n      const index = this.Clefs.indexOf(clef);\n      clef.Selected = false;\n      this.Clefs.splice(index, 1);\n    } else {\n      this.Clefs.map(c => c.Selected = false);\n      this.Clefs = [];\n      this.Clefs.push(clef);\n      clef.Selected = true;\n    }\n  }\n\n  SelectNote(\n    msr: Measure,\n    x: number, y: number,\n    cam: Camera,\n    shiftKey: boolean): boolean {\n      let noteHit = false;\n      msr.Divisions.forEach((div: Division) => {\n        const divNotes = msr.Notes.filter((note: Note) => note.Beat === div.Beat);\n        divNotes.forEach((n: Note) => {\n          const noteBounds = n.Bounds;\n          if (noteBounds.IsHovered(x, y, cam)) {\n            n.Selected = true;\n            if (this.Notes.has(msr)) {\n              let nArray = this.Notes.get(msr);\n              if (!nArray.find(na => na === n)) {\n                nArray.push(n);\n                if (n.Tied) {\n                  nArray.push(...SelectTiedNotes(n, msr));\n                }\n                this.Notes.set(msr, nArray);\n              }\n            } else {\n              let nArray = [];\n              nArray.push(n);\n              if (n.Tied) {\n                nArray.push(...SelectTiedNotes(n, msr));\n              }\n              this.Notes.set(msr, nArray);\n            }\n            noteHit = true;\n          } else {\n            if (n.Selected && !shiftKey) {\n              let deselect = true;\n              if (n.Tied) {\n                const tiedNotes = msr.Notes.filter(note => {\n                  return note !== n &&\n                    note.Beat >= n.TiedStart &&\n                    note.Beat <= n.TiedEnd &&\n                    note.Line === n.Line &&\n                    note.Staff === n.Staff &&\n                    note.Selected === true;\n                });\n                deselect = tiedNotes.length === 0;\n              }\n              if (deselect) {\n                this.DeselectNote(n);\n                n.Selected = false;\n              }\n            }\n          }\n        });\n      });\n      if (!noteHit && !shiftKey) { this.DeselectAll();\n        return false}\n      return true;\n    }\n}\n\nfunction SelectTiedNotes(n: Note, msr: Measure): Note[] {\n  let nArray: Note[] = [];\n  let tStart = n.TiedStart;\n  let tEnd = n.TiedEnd;\n  const tiedNotes = msr.Notes.filter(note => {\n    return note !== n &&\n      note.Beat >= tStart &&\n      note.Beat <= tEnd &&\n      note.Staff === n.Staff &&\n      note.Line === n.Line;\n  })\n  tiedNotes.forEach(tn => {\n    tn.Selected = true;\n    nArray.push(tn);\n  })\n  return nArray;\n}\n\nexport { Selector };\n","const canonSave = '{\"Measures\":[{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":2,\"Beat\":1,\"Duration\":0.5,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":5,\"Beat\":1,\"Duration\":0.5,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":66,\"Beat\":1,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":70,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":71,\"Beat\":2,\"Duration\":0.125,\"Line\":1037,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":73,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":6,\"Beat\":3,\"Duration\":0.25,\"Line\":13,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":8,\"Beat\":3,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":9,\"Beat\":3,\"Duration\":0.25,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":74,\"Beat\":3,\"Duration\":0.125,\"Line\":1047,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":77,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":10,\"Beat\":4,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":78,\"Beat\":4,\"Duration\":0.125,\"Line\":1038,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":80,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":100,\"y\":87.5,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":17,\"Beat\":1,\"Duration\":0.25,\"Line\":19,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":20,\"Beat\":1,\"Duration\":0.25,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":21,\"Beat\":1,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":81,\"Beat\":1,\"Duration\":0.125,\"Line\":1048,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":84,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":22,\"Beat\":2,\"Duration\":0.25,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":85,\"Beat\":2,\"Duration\":0.125,\"Line\":1039,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":87,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":23,\"Beat\":3,\"Duration\":0.25,\"Line\":10,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":25,\"Beat\":3,\"Duration\":0.25,\"Line\":13,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":26,\"Beat\":3,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":88,\"Beat\":3,\"Duration\":0.125,\"Line\":1049,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":91,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":27,\"Beat\":4,\"Duration\":0.25,\"Line\":9,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":92,\"Beat\":4,\"Duration\":0.125,\"Line\":1040,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":94,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":423.3333333333333,\"y\":87.5,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":30,\"Beat\":1,\"Duration\":0.25,\"Line\":11,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":33,\"Beat\":1,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":34,\"Beat\":1,\"Duration\":0.25,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":95,\"Beat\":1,\"Duration\":0.125,\"Line\":1050,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":99,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":35,\"Beat\":2,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":100,\"Beat\":2,\"Duration\":0.125,\"Line\":1041,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":102,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":36,\"Beat\":3,\"Duration\":0.5,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":37,\"Beat\":3,\"Duration\":0.5,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":38,\"Beat\":3,\"Duration\":0.5,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":103,\"Beat\":3,\"Duration\":0.125,\"Line\":1051,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":106,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":107,\"Beat\":4,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":109,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":686.6666666666666,\"y\":87.5,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":41,\"Beat\":1,\"Duration\":0.25,\"Line\":21,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":44,\"Beat\":1,\"Duration\":0.25,\"Line\":18,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":45,\"Beat\":1,\"Duration\":0.25,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":110,\"Beat\":1,\"Duration\":0.125,\"Line\":1050,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":114,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":46,\"Beat\":2,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":115,\"Beat\":2,\"Duration\":0.125,\"Line\":1041,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":117,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":52,\"Beat\":3,\"Duration\":0.25,\"Line\":20,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":53,\"Beat\":3,\"Duration\":0.25,\"Line\":19,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":118,\"Beat\":3,\"Duration\":0.125,\"Line\":1049,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":121,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":55,\"Beat\":4,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":122,\"Beat\":4,\"Duration\":0.125,\"Line\":1040,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":57,\"Beat\":4.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":124,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":100,\"y\":375,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":125,\"Beat\":1,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":173,\"Beat\":1,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":129,\"Beat\":1.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":177,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":130,\"Beat\":2,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":178,\"Beat\":2,\"Duration\":0.125,\"Line\":1037,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":180,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":131,\"Beat\":3,\"Duration\":0.25,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":181,\"Beat\":3,\"Duration\":0.125,\"Line\":1047,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":184,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":133,\"Beat\":4,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":185,\"Beat\":4,\"Duration\":0.125,\"Line\":1038,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":187,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":423.3333333333333,\"y\":375,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":134,\"Beat\":1,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":188,\"Beat\":1,\"Duration\":0.125,\"Line\":1048,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":192,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":137,\"Beat\":2,\"Duration\":0.25,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":193,\"Beat\":2,\"Duration\":0.125,\"Line\":1039,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":195,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":138,\"Beat\":3,\"Duration\":0.125,\"Line\":10,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":196,\"Beat\":3,\"Duration\":0.125,\"Line\":1049,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":141,\"Beat\":3.5,\"Duration\":0.125,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":199,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":142,\"Beat\":4,\"Duration\":0.125,\"Line\":10,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":200,\"Beat\":4,\"Duration\":0.125,\"Line\":1040,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":144,\"Beat\":4.5,\"Duration\":0.125,\"Line\":9,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":202,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":686.6666666666666,\"y\":375,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":145,\"Beat\":1,\"Duration\":0.125,\"Line\":11,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":203,\"Beat\":1,\"Duration\":0.125,\"Line\":1050,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":149,\"Beat\":1.5,\"Duration\":0.125,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":207,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":150,\"Beat\":2,\"Duration\":0.125,\"Line\":13,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":208,\"Beat\":2,\"Duration\":0.125,\"Line\":1041,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":152,\"Beat\":2.5,\"Duration\":0.125,\"Line\":11,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":210,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":153,\"Beat\":3,\"Duration\":0.125,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":211,\"Beat\":3,\"Duration\":0.125,\"Line\":1051,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":156,\"Beat\":3.5,\"Duration\":0.125,\"Line\":13,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":214,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":157,\"Beat\":4,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":215,\"Beat\":4,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":159,\"Beat\":4.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":217,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":100,\"y\":662.5,\"width\":395,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":160,\"Beat\":1,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":218,\"Beat\":1,\"Duration\":0.125,\"Line\":1050,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":164,\"Beat\":1.5,\"Duration\":0.125,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":222,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":165,\"Beat\":2,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":223,\"Beat\":2,\"Duration\":0.125,\"Line\":1041,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":167,\"Beat\":2.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":225,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":168,\"Beat\":3,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":226,\"Beat\":3,\"Duration\":0.125,\"Line\":1049,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":229,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":170,\"Beat\":4,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":230,\"Beat\":4,\"Duration\":0.125,\"Line\":1040,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":172,\"Beat\":4.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":232,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":555,\"y\":662.5,\"width\":395,\"height\":190},\"ShowClef\":false,\"ShowTime\":false}]}';\nconst randomSaveOne = '{\"Measures\":[{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":2,\"Beat\":1,\"Duration\":0.03125,\"Line\":18,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":54,\"Beat\":1,\"Duration\":0.125,\"Line\":1047,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":8,\"Beat\":1.125,\"Duration\":0.03125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":9,\"Beat\":1.5,\"Duration\":0.03125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":12,\"Beat\":1.625,\"Duration\":0.03125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":13,\"Beat\":2,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":58,\"Beat\":2,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":15,\"Beat\":2.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":16,\"Beat\":3,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":60,\"Beat\":3,\"Duration\":0.125,\"Line\":1047,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":19,\"Beat\":3.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0}],\"Bounds\":{\"x\":100,\"y\":87.5,\"width\":383.3333333333333,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":22,\"Beat\":1,\"Duration\":0.0625,\"Line\":18,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":63,\"Beat\":1,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":27,\"Beat\":1.25,\"Duration\":0.0625,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":28,\"Beat\":1.5,\"Duration\":0.0625,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":30,\"Beat\":1.75,\"Duration\":0.0625,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":67,\"Beat\":2,\"Duration\":0.125,\"Line\":1048,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":69,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":543.3333333333333,\"y\":87.5,\"width\":233.33333333333334,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":33,\"Beat\":1,\"Duration\":0.25,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":70,\"Beat\":1,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":74,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":36,\"Beat\":2,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":37,\"Beat\":3,\"Duration\":0.25,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0}],\"Bounds\":{\"x\":776.6666666666666,\"y\":87.5,\"width\":173.33333333333334,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":41,\"Beat\":1,\"Duration\":0.25,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":75,\"Beat\":1,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":44,\"Beat\":2,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":89,\"Beat\":2,\"Duration\":0.25,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":46,\"Beat\":2.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":47,\"Beat\":3,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":91,\"Beat\":3,\"Duration\":0.25,\"Line\":1043,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":50,\"Beat\":3.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":51,\"Beat\":4,\"Duration\":0.125,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":92,\"Beat\":4,\"Duration\":0.25,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":53,\"Beat\":4.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0}],\"Bounds\":{\"x\":100,\"y\":375,\"width\":485,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":85,\"Beat\":1,\"Duration\":1,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":86,\"Beat\":1,\"Duration\":1,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0}],\"Bounds\":{\"x\":645,\"y\":375,\"width\":305,\"height\":190},\"ShowClef\":false,\"ShowTime\":false}]}';\nconst intervalTest = '{\"Measures\":[{\"Clef\":\"treble\",\"TimeSignature\":{\"Selected\":false,\"SelType\":3,\"top\":4,\"bottom\":4,\"TopPosition\":{\"x\":35,\"y\":37.5},\"BotPosition\":{\"x\":35,\"y\":57.5},\"GTopPosition\":{\"x\":35,\"y\":132.5},\"GBotPosition\":{\"x\":35,\"y\":152.5},\"Bounds\":{\"x\":35,\"y\":27.5,\"width\":30,\"height\":50},\"GBounds\":{\"x\":35,\"y\":122.5,\"width\":30,\"height\":50}},\"Notes\":[{\"ID\":1,\"Beat\":1,\"Duration\":0.5,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0,\"Clef\":\"treble\"},{\"ID\":3,\"Beat\":3,\"Duration\":0.5,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0,\"Clef\":\"treble\"}],\"Bounds\":{\"x\":0,\"y\":-2.5,\"width\":250,\"height\":95},\"ShowClef\":true,\"ShowTime\":true}]}'\n\ninterface saveFile {\n  name: string;\n  file: string;\n}\nconst allSaves: saveFile[] = [\n  {name: \"Canon in C\", file: canonSave},\n  {name: \"Random FIle One\", file: randomSaveOne}\n]\n\nexport { canonSave, randomSaveOne, intervalTest, allSaves, saveFile }\n","import { App } from \"../App.js\";\nimport { allSaves } from \"../testsaves.js\";\n\ninterface KeyMapping {\n  addmeasure: string,\n  changeinputmode: string,\n  value1: string,\n  value2: string,\n  value3: string,\n  value4: string,\n  value5: string,\n  value6: string,\n  restInput: string,\n  delete: string,\n  sharpen: string,\n  flatten: string,\n  scaleToggle: string,\n  save: string,\n  load: string,\n  test_triplet: string,\n}\n\nfunction KeyPress(app: App, key: string, keyMaps: KeyMapping): void {\n  switch (key) {\n    case keyMaps.addmeasure:\n      app.AddMeasure();\n      break;\n    case keyMaps.changeinputmode:\n      app.ChangeInputMode();\n      break;\n    //TODO: change value1-6 to note types (crotchet, quaver etc.)\n    case keyMaps.value1:\n      app.SetNoteValue(0.03125);\n      break;\n    case keyMaps.value2:\n      app.SetNoteValue(0.0625);\n      break;\n    case keyMaps.value3:\n      app.SetNoteValue(0.125);\n      break;\n    case keyMaps.value4:\n      app.SetNoteValue(0.25);\n      break;\n    case keyMaps.value5:\n      app.SetNoteValue(0.5);\n      break;\n    case keyMaps.value6:\n      app.SetNoteValue(1);\n      break;\n    case keyMaps.restInput:\n      //TODO: Prob change this\n      app.RestInput = !app.RestInput;\n      break;\n    case keyMaps.delete:\n      app.Delete();\n      break;\n    case keyMaps.sharpen:\n      app.Sharpen();\n      break;\n    case keyMaps.flatten:\n      app.Flatten();\n      break;\n    case keyMaps.scaleToggle:\n      //app.ScaleToggle();\n      break;\n    case keyMaps.save:\n      app.Save();\n      break;\n    case keyMaps.load:\n      app.LoadSheet(allSaves[0].file);\n    case keyMaps.test_triplet:\n      app.CreateTriplet();\n    default:\n  }\n}\n\nexport { KeyMapping, KeyPress }\n","import { Bounds } from \"../Types/Bounds.js\";\n\ninterface Margins {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n}\n\nconst defaultMargins: Margins = {\n  left: 40,\n  right: 40,\n  top: 40,\n  bottom: 40\n}\n\ninterface PageLine {\n  Number: number;\n  YPos: number;\n  LineBounds: Bounds;\n}\n\ninterface MarginAdjuster {\n  Name: string;\n  Direction: string;\n  Bounds: Bounds;\n}\n\nconst scale = 6;\nconst a4w = 210 * scale;\nconst a4h = 297 * scale;\n\nclass Page {\n  Margins: Margins;\n  // TODO: Change to bounds later\n  Bounds: Bounds;\n  Number: number;\n  PageLines: PageLine[];\n  MarginAdj: MarginAdjuster[];\n  constructor(x: number, y: number, pageNum: number) {\n    this.Margins = defaultMargins;\n    this.MarginAdj = [];\n    this.Number = pageNum;\n    this.Bounds = new Bounds(x, y, a4w, a4h); \n    // left margin\n    this.MarginAdj.push({\n      Name: \"left\",\n      Direction: \"horizontal\",\n      Bounds: new Bounds(this.Bounds.x + this.Margins.left - 12.5,\n                        this.Bounds.y - 25, 25, 25)\n    });\n    this.PageLines = []; \n    this.PageLines.push(\n      {Number: 1,\n        YPos: y + this.Margins.top,\n        LineBounds: new Bounds(this.Bounds.x - 50, (y + this.Margins.top) - 12.5, 25, 25)});\n//    this.PageLines.push(\n//      {Number: 2,\n//        YPos: y + this.Margins.top,\n//        LineBounds: new Bounds(this.Bounds.x - 50, (y + this.Margins.top + 300) - 12.5, 25, 25)});\n  }\n\n  // TODO Later will need to add ability to add lines in between others\n  // TODO Later will need to make line height adjustable/have formattable\n  // settings\n  AddLine(lineHeight: number): PageLine {\n    const latestLine = this.PageLines[this.PageLines.length-1];\n    const newLine: PageLine = {\n      Number: latestLine.Number + 1,\n      YPos: this.Bounds.y + this.Margins.top,\n      LineBounds: new Bounds(this.Bounds.x - 50, latestLine.LineBounds.y + lineHeight - 12.5, 25, 25)};\n      this.PageLines.push(newLine);\n      return newLine;\n    }\n}\n\nexport { Page, MarginAdjuster }\n","import { Camera } from \"../Core/Camera.js\";\nimport { StaffType } from \"../Core/Instrument.js\";\nimport { Measure } from \"../Core/Measure.js\";\nimport { MarginAdjuster, Page } from \"../Core/Page.js\";\nimport { ConfigSettings } from \"../Types/Config.js\";\n\n// TODO: Add pages when necessary but for now we do just lines\nfunction SetPagesAndLines(measures: Measure[], pages: Page, usePage: boolean | null, \n                         defaultLineHeight: number = 300): void {\n  let page: Page = pages;\n  if (!page) {\n    console.error(\"No page found!\");\n    return;\n  }\n  let runningWidth = 0;\n  let currentPage = 0;\n  let currentLine = 1;\n  let msrsOnLine = 0;\n  let pageWidth = page.Bounds.width - (page.Margins.left + page.Margins.right);\n\n  if (usePage === false && usePage !== null) {\n    // set each measure to line 1\n    measures.forEach(m => {\n      m.PageLine = currentLine;\n    })\n    return;\n  }\n  measures.forEach((msr: Measure, i: number) => {\n    msrsOnLine++;\n    const msrWidth = msr.GetMinimumWidth() + msr.XOffset;\n    if (runningWidth + msrWidth > pageWidth || msrsOnLine > 4) {\n      currentLine++;\n      msrsOnLine = 1;\n      if (pages.PageLines.length < currentLine) {\n        pages.AddLine(defaultLineHeight);\n      }\n      runningWidth = 0;\n    }\n    runningWidth += msrWidth;\n    msr.Page = pages[currentPage];\n    msr.PageLine = currentLine;\n  });\n}\n\nfunction GetMaxWidth(page: Page, config: ConfigSettings, cam: Camera): number {\n  let maxWidth = 0;\n  if (config.FormatSettings?.MeasureFormatSettings?.MaxWidth) {\n    maxWidth = config.FormatSettings.MeasureFormatSettings.MaxWidth;\n  } else {\n    maxWidth = 350;//= (page.Bounds.width * cam.Zoom) - 50;\n  }\n  return maxWidth;\n}\n\nfunction ResizeMeasuresOnPage(measures: Measure[], page: Page, cam: Camera, config: ConfigSettings): void {\n  const pageSize = page.Bounds.width - (page.Margins.left + page.Margins.right);\n  page.PageLines.forEach(line => {\n    const msrs = measures.filter(m => m.PageLine === line.Number);\n    let msrsLineWidth = 0;\n    msrs.forEach((m: Measure, i: number) => {\n      msrsLineWidth += m.GetMinimumWidth() + m.XOffset;\n    });\n    const fillWidth = pageSize - msrsLineWidth;\n    msrs.forEach((m: Measure, i: number) => {\n      m.Bounds.y = line.LineBounds.y;\n      m.PrefBoundsY = m.Bounds.y;\n      if (i === 0) {\n        m.Bounds.x = page.Bounds.x + page.Margins.left;\n        m.RenderClef = m.Instrument.Staff === StaffType.Rhythm ? false : true;\n        m.RenderTimeSig = true;\n        // TODO: When we work on keys\n        m.RenderKey = false;\n        m.SetXOffset();\n        // the calculated new width of the measure, may need to be overwritten\n        // by config settings if they are set (maxWidth in\n        // measureformatsettings)\n        const maxWidth = GetMaxWidth(page, config, cam);\n        const calculatedWidth = m.GetMinimumWidth() + (fillWidth / msrs.length);\n        const msrWidth = maxWidth ? \n          calculatedWidth > maxWidth ? maxWidth : calculatedWidth :\n          calculatedWidth;\n        m.Bounds.width = msrWidth;\n        m.CreateDivisions(cam);\n      } else {\n        m.RenderClef = false;\n        m.RenderTimeSig = false;\n        // TODO: When we work on keys\n        m.RenderKey = false;\n        m.SetXOffset();\n        const maxWidth = GetMaxWidth(page, config, cam);\n        const calculatedWidth = m.GetMinimumWidth() + (fillWidth / msrs.length);\n        const msrWidth = maxWidth ? \n          calculatedWidth > maxWidth ? maxWidth : calculatedWidth :\n          calculatedWidth;\n        m.Bounds.width = msrWidth;\n        msrs[i].Reposition(msrs[i-1]);\n        m.CreateDivisions(cam);\n      }\n      m.Clefs.forEach(c => {\n        c.SetBounds(m, 0);\n      });\n      m.GrandClefs.forEach(c => {\n        c.SetBounds(m, 1);\n      });\n      m.TimeSignature.SetBounds(m, 0);\n      if (m.Instrument.Staff === StaffType.Grand) {\n        m.TimeSignature.SetBounds(m, 1);\n      }\n\n    });\n  })\n}\n\nfunction GetAdjuster(x: number, y: number, page: Page, cam: Camera): MarginAdjuster | undefined {\n  let adjuster: MarginAdjuster;\n  page.MarginAdj.forEach((adj: MarginAdjuster) => {\n    if (adj.Bounds.IsHovered(x, y, cam)) {\n      // TODO: Complete\n    }\n  });\n  return adjuster;\n}\n\nexport {\n  SetPagesAndLines,\n  ResizeMeasuresOnPage\n}\n","import { Camera } from \"../Core/Camera.js\";\nimport { Instrument, StaffType } from \"../Core/Instrument.js\";\nimport { Measure } from \"../Core/Measure.js\";\nimport { Note, NoteProps } from \"../Core/Note.js\";\nimport { Page } from \"../Core/Page.js\";\nimport { Sheet } from \"../Core/Sheet.js\";\nimport { CreateDefaultMeasure, CreateMeasure } from \"../Factory/Instrument.Factory.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { Message } from \"../Types/Message.js\";\n\ninterface lNote {\n  ID: number;\n  Beat: number;\n  Duration: number;\n  Line: number;\n  Rest: boolean;\n  Tied: boolean;\n  Staff: number;\n  Clef: string;\n  Editable?: boolean;\n}\ninterface lMeasure {\n  Clef: string;\n  TimeSignature: { top: number, bottom: number };\n  Notes: lNote[];\n  Bounds: Bounds;\n  ShowClef: boolean;\n  ShowTime: boolean;\n}\ninterface LoadStructure {\n  Measures: lMeasure[];\n}\n\nconst LoadSheet = (sheet: Sheet, page: Page, cam: Camera, instr: Instrument, savedJson: string, \n                  callback: (msg: Message) => void) => {\n  let runningId = { count: 0 };\n  const loaded: LoadStructure = JSON.parse(savedJson);\n  // loading onto a single instrument to begin with\n  loaded.Measures.forEach((m: lMeasure, i: number) => {\n //   const msr = CreateDefaultMeasure(runningId, instr, page, cam);\n    // TODO: Temporary\n    if (instr.Staff === StaffType.Rhythm) { m.ShowClef = false; }\n    const notes: Note[] = [];\n    m.Notes.forEach((n: lNote, i: number) => {\n      const noteProps: NoteProps = {\n        Beat: n.Beat,\n        Duration: n.Duration,\n        Line: n.Line,\n        Rest: n.Rest,\n        Tied: n.Tied,\n        Staff: n.Staff,\n        Tuple: false,\n        Clef: n.Clef,\n        Editable: false,\n      }\n      const newNote = new Note(noteProps);\n      notes.push(newNote);\n    });\n    const msr = CreateMeasure(instr,\n                              m.Bounds,\n                             m.TimeSignature,\n                             \"CMaj/Amin\",\n                             \"treble\",\n                             cam,\n                             runningId,\n                             page,\n                             m.ShowClef,\n                             callback\n                             );\n    msr.Notes = notes;\n    sheet.Measures.push(msr);\n    msr.CreateDivisions(cam);\n  });\n}\n\nconst SaveSheet = (sheet: Sheet): string => {\n  let saved: LoadStructure = {\n    Measures: []\n  };\n  sheet.Measures.forEach((m: Measure, i: number) => {\n    let notes: lNote[] = [];\n    m.Notes.forEach((n: Note, i: number) => {\n      if (n.Rest) { return; }\n      notes.push({\n        ID: n.ID,\n        Beat: n.Beat,\n        Duration: n.Duration,\n        Line: n.Line,\n        Rest: n.Rest,\n        Tied: n.Tied,\n        Staff: n.Staff,\n        Clef: n.Clef,\n        Editable: false,\n      });\n    });\n    saved.Measures.push({\n      Clef: \"treble\",\n      TimeSignature: m.TimeSignature,\n      Notes: notes,\n      Bounds: m.Bounds,\n      ShowClef: m.RenderClef,\n      ShowTime: m.RenderTimeSig\n    });\n  });\n\n  console.log(JSON.stringify(saved));\n  return JSON.stringify(saved);\n}\n\nexport { LoadSheet, SaveSheet, LoadStructure, lNote, lMeasure};\n","import { Sheet, SheetProps } from \"./Core/Sheet.js\";\nimport { RenderDebug, Renderer } from \"./Core/Renderer.js\";\nimport { CreateDefaultMeasure, CreateDefaultPiano, CreateInstrument, CreateMeasure } from \"./Factory/Instrument.Factory.js\";\nimport { Clef, Division, Measure } from \"./Core/Measure.js\";\nimport { Bounds } from \"./Types/Bounds.js\";\nimport { Note } from \"./Core/Note.js\";\nimport { Camera } from \"./Core/Camera.js\";\nimport { AddNoteOnMeasure, CreateTuplet, InputOnMeasure, UpdateNoteBounds } from \"./Workers/NoteInput.js\";\nimport { Selector } from \"./Workers/Selector.js\";\nimport { GetDivisionTotalWidth } from \"./Core/Division.js\";\nimport { Instrument, StaffType } from \"./Core/Instrument.js\";\nimport { ManageHeight } from \"./Workers/Heightener.js\";\nimport { KeyMapping, KeyPress } from \"./Workers/Mappings.js\";\nimport { ISelectable, SelectableTypes } from \"./Types/ISelectable.js\";\nimport { Page } from \"./Core/Page.js\";\nimport { ResizeMeasuresOnPage, SetPagesAndLines } from \"./Workers/Formatter.js\";\nimport { LoadSheet, SaveSheet } from \"./Workers/Loader.js\";\nimport { allSaves, canonSave, intervalTest, saveFile } from \"./testsaves.js\";\nimport { ClearMessage, Message, MessageType } from \"./Types/Message.js\";\nimport { GeneratePitchMap, MappedMidi } from \"./Workers/Pitcher.js\";\nimport { ConfigSettings } from \"./Types/Config.js\";\n\nclass App { \n  Config: ConfigSettings;\n  Message: Message;\n  Canvas: HTMLCanvasElement;\n  Container: HTMLElement;\n  Context: CanvasRenderingContext2D;\n  Load: boolean;\n  Sheet: Sheet;\n  HoveredElements: { MeasureID: number };\n  NoteInput: boolean;\n  RestInput: boolean;\n  Formatting: boolean;\n  Zoom: number;\n  Camera: Camera;\n  CamDragging: boolean;\n  DraggingPositions: { x1: number, y1: number, x2: number, y2: number };\n  NoteValue: number;\n  Selector: Selector;\n  NotifyCallback: (msg: Message) => void;\n  RunningID: { count: number };\n  PitchMap: Map<number, MappedMidi>;\n\n  // TODO: Off load some of this work to other classes/functions \n  // For now we prototype here\n  DraggingNote: boolean;\n  StartLine: number;\n  EndLine: number;\n\n  // TODO: Move this to a formatter\n  StartDragY: number;\n  EndDragY: number;\n  DragLining: boolean;\n  LinerBounds: Bounds;\n  LineNumber: Number;\n\n  Debug: boolean;\n\n  constructor (canvas: HTMLCanvasElement, \n               container: HTMLElement,\n             context: CanvasRenderingContext2D,\n             notifyCallback: (msg: Message) => void,\n              config: ConfigSettings,\n              load = false) {\n    this.Config = config;\n    this.PitchMap = GeneratePitchMap();\n    this.Message = ClearMessage();\n    this.NotifyCallback = notifyCallback;\n    this.Debug = true;\n    this.Canvas = canvas;\n    this.Container = container;\n    this.Selector = new Selector();\n    this.Context = context;\n    this.Load = load;\n    this.HoveredElements = { MeasureID: -1 };\n    this.Zoom = 1;\n    this.RunningID = { count: 0 };\n    this.CamDragging = false;\n    this.DraggingPositions = { x1: 0, y1: 0, x2: 0, y2: 0 };\n    let camStartX = 0;\n    let camStartY = 20;\n    if (this.Config.CameraSettings?.StartingPosition) {\n      camStartX = this.Config.CameraSettings.StartingPosition.x;\n      camStartY = this.Config.CameraSettings.StartingPosition.y;\n    }\n    this.Camera = new Camera(camStartX, camStartY);\n    this.Camera.Zoom = 1;//this.Config.CameraSettings.Zoom ? this.Config.CameraSettings.Zoom : 1;\n    this.NoteValue = 0.5;//this.Config?.NoteSettings?.InputValue ? \n//      this.Config.NoteSettings.InputValue : 0.25;\n\n    // TODO: Remove to formatter\n    this.StartDragY = 0;\n    this.EndDragY = 0;\n    this.DragLining = false;\n\n    if (!this.Load) {\n      // Create New Sheet Properties\n      let newPage: Page = new Page(0, 0, 1);\n      if (this.Config.PageSettings?.PageWidth) {\n        newPage.Bounds.width = this.Config.PageSettings.PageWidth;\n      }\n      \n      const sProps: SheetProps = {\n        Instruments: [],\n        KeySignature: [{ key: \"CMaj\", measureNo: 0 }],\n        Measures: [],\n        Pages: [newPage],\n      };\n\n      const page = sProps.Pages[0];\n\n      sProps.Instruments.push(CreateInstrument(20, this.Config));\n      sProps.Measures.push(CreateDefaultMeasure(this.RunningID, sProps.Instruments[0], page,this.Camera, this.NotifyCallback));\n\n      this.Sheet = new Sheet(sProps);\n    }\n    this.NoteInput = false;\n    this.RestInput = false;\n    this.Formatting = false;\n\n    if (this.Config.CameraSettings?.Zoom) {\n      this.Camera.Zoom = this.Config.CameraSettings.Zoom;\n      this.SetCameraZoom(this.Camera.Zoom);\n      console.log(\"Setting camera zoom\");\n      console.log(this.Camera.Zoom);\n      this.ResizeMeasures(this.Sheet.Measures);\n    }\n\n    this.Update(0, 0);\n  }\n\n  Hover(x: number, y: number): void {\n    x = x / this.Camera.Zoom;\n    y = y / this.Camera.Zoom;\n\n    if (this.CamDragging) {\n      this.Camera.x = Math.floor(this.Camera.oldX + x - this.DraggingPositions.x1);\n      this.Camera.y = Math.floor(this.Camera.oldY + y - this.DraggingPositions.y1);\n      this.Update(x, y);\n      return;\n    }\n    if (this.DraggingNote) {\n      this.DragNote(x, y);\n      this.Update(x, y);\n    }\n    if (this.Formatting && this.DragLining) {\n      this.DragLiner(x, y);\n      this.Update(x, y);\n    }\n    this.HoveredElements.MeasureID = -1;\n    // TODO: Move all this elsewhere\n    if (this.NoteInput) {\n      this.Sheet.Measures.forEach((m: Measure) => {\n        if (m.GetBoundsWithOffset().IsHovered(x, y, this.Camera)) {\n          m.Divisions.forEach((d: Division) => {\n            if (d.Bounds.IsHovered(x, y, this.Camera)) {\n              //ManageHeight(m, d.Staff, x, y, this.Camera, this.Sheet.Measures);\n              // TODO: Move this so it only is called \n              // at the appropriate time\n              UpdateNoteBounds(m, 0);\n              UpdateNoteBounds(m, 1);\n            }\n          })\n        } else { \n          m.ResetHeight(); }\n      });\n    }\n    // This shouldn't always update but will need to do serious work to figure\n    // out all bugs involved when it doesn't\n    this.Update(x, y);\n  }\n\n  Delete(): void {\n    for (let [ msr, elem ] of this.Selector.Elements ) {\n      msr.DeleteSelected();\n      msr.CreateDivisions(this.Camera);\n    }\n  }\n\n  Input(x: number, y: number, shiftKey: boolean): void {\n    // will move this code elsewhere, testing note input\n    x = x / this.Camera.Zoom;\n    y = y / this.Camera.Zoom;\n\n    //TODO: NOT FINAL THIS IS PROTOTYPING NOT FINAL \n   if (!this.NoteInput && this.Formatting) {\n      this.SelectLiner(x, y);\n    }\n\n    this.HoveredElements.MeasureID = -1;\n    const msrOver: Measure | undefined = this.Sheet\n      .Measures\n      .find( (msr: Measure) => msr.GetBoundsWithOffset().IsHovered(x, y, this.Camera));\n\n    if (msrOver === undefined) { \n      if (!shiftKey) {\n        this.Selector.DeselectAll();\n        this.Message = ClearMessage();\n        this.Message.messageString = \"msr undefined\";\n        this.NotifyCallback(this.Message);\n        this.Update(x, y);\n      }\n      return;\n    } // no measure over\n    \n    if (!this.NoteInput) {\n      let selectedMeasureElement: boolean = false;\n      // Measure Element selection, should be moved elsewhere eventually\n      // (probably Measure? Maybe somewhere else)\n      if (!shiftKey) {\n        this.Selector.Elements = this.Selector.DeselectAllElements(this.Selector.Elements);\n      }\n      const elem = this.Selector.TrySelectElement(msrOver, x, y, this.Camera, shiftKey, this.NotifyCallback, this.Selector.Elements);\n      if (elem === undefined && this.Config.FormatSettings.MeasureFormatSettings.Selectable === true || \n          this.Config.FormatSettings.MeasureFormatSettings.Selectable === undefined)  {\n        this.Selector.SelectMeasure(msrOver);\n      } \n      if (!this.DraggingNote) { this.DraggingNote = true; }\n      this.StartLine = Measure.GetLineHovered(y, msrOver).num;\n    } \n    else if (this.NoteInput) {\n      InputOnMeasure(msrOver, this.NoteValue, x, y, this.Camera, this.RestInput);\n      this.ResizeMeasures(this.Sheet.Measures.filter(m => m.Instrument === msrOver.Instrument));\n    }\n  //  this.NotifyCallback(this.Message);\n    this.Update(x, y);\n  }\n  Update(x: number, y : number): void {\n    // this should be the only place that calls render\n   // this.NotifyCallback(this.Message);\n    this.Render({ x: x, y: y });\n  }\n  Render(mousePos: {x: number, y: number}): void {\n    Renderer(this.Canvas,\n             this.Context,\n             this.Sheet.Measures,\n             this.Sheet.Pages,\n             this.HoveredElements,\n             mousePos, \n             this.Camera,\n             this.NoteInput,\n             this.RestInput,\n             this.Formatting,\n             this.Config,\n             this.NoteValue);\n    if (this.Debug) {\n      RenderDebug(this.Canvas,\n                  this.Context,\n                  this.Sheet,\n                  mousePos,\n                  this.Camera,\n                  this.Selector);\n    }\n  }\n\n  AddMeasure(): void {\n    const newMeasureID = this.Sheet.Measures.length;\n    const prevMsr = this.Sheet.Measures[this.Sheet.Measures.length-1];\n    let x = 0;\n    this.Sheet.Instruments.forEach(i => {\n      let latestLine = this.Sheet.Pages[0].PageLines[this.Sheet.Pages[0].PageLines.length - 1];\n  //    const msrCountOnLine = this.Sheet.Measures.filter(m => m.PageLine === latestLine.Number);\n  //    if (msrCountOnLine.length > 3) {\n  //      latestLine = this.Sheet.Pages[0].AddLine();\n  //    }\n  //    console.log(this.Sheet.Pages[0]);\n      const newMeasureBounds = new Bounds(x, latestLine.LineBounds.y, 150, prevMsr.Bounds.height);\n      const newMsr = CreateMeasure(\n        i,\n       newMeasureBounds,\n       prevMsr.TimeSignature,\n       prevMsr.KeySignature,\n       \"treble\",\n       this.Camera,\n       this.RunningID,\n       this.Sheet.Pages[0], // Page will need to be determined\n       false,\n       this.NotifyCallback);\n //      newMsr.PageLine = latestLine.Number;\n      this.Sheet.Measures.push(newMsr);\n      this.ResizeMeasures(this.Sheet.Measures.filter(m => m.Instrument === i));\n    })\n  }\n\n  ChangeInputMode(): void {\n    this.NoteInput = !this.NoteInput;\n  }\n  \n  //TODO: Prototype page line formatting nonsense\n\n  SelectLiner(x: number, y: number): Bounds | undefined {\n    // get liner here\n    let liner: Bounds;\n    if (!this.DragLining) {\n      this.LineNumber = -1;\n    }\n    this.Sheet.Pages.forEach(page => {\n      page.PageLines.forEach(line => {\n      if (line.LineBounds.IsHovered(x, y, this.Camera)) {\n        liner = line.LineBounds;\n        if (!this.DragLining) {\n          this.StartDragY = y;\n          this.DragLining = true;\n          this.LinerBounds = liner;\n          this.LineNumber = line.Number;\n        }\n      }\n      });\n    });\n    return liner;\n  }\n\n  DragLiner(x: number, y: number): void {\n    if (this.LinerBounds) {\n      this.LinerBounds.y = this.LinerBounds.y + (y - this.StartDragY);\n      const page = this.Sheet.Pages[0];\n      if (this.LinerBounds.y + 12.5 <= page.Bounds.y + page.Margins.top) {\n        this.LinerBounds.y = (page.Bounds.y + page.Margins.top) - 12.5;\n      }\n      this.StartDragY = y;\n      // TODO: Super SCUFFED TEST PROTOTYPE NOT FINAL\n      this.Sheet.Measures.forEach(m => {\n        if (m.PageLine === this.LineNumber) {\n          m.Bounds.y = this.LinerBounds.y\n          m.PrefBoundsY = m.Bounds.y;\n        }\n      });\n      this.ResizeMeasures(this.Sheet.Measures);\n    }\n  }\n\n  DragNote(x: number, y: number): void {\n    const msrOver = this.Sheet\n      .Measures.find(m => m.GetBoundsWithOffset().IsHovered(x, y, this.Camera));\n\n    if (msrOver === undefined) { \n      this.DraggingNote = false;\n      this.StartLine = -1;\n      this.EndLine = -1;\n      return; \n    }\n\n    this.EndLine = Measure.GetLineHovered(y, msrOver).num;\n    const lineDiff = this.EndLine - this.StartLine;\n    for (let [msr, elem] of this.Selector.Elements) {\n        elem.filter((e: ISelectable) => e.SelType === SelectableTypes.Note).forEach((n: Note) => {\n        // Should never be selected, currently band-aid fix for bug. Address\n        // when re-implementing dragging notes/selectables\n        if (n.Selected && n.Editable) {\n          n.Line += lineDiff;\n          UpdateNoteBounds(msr, n.Staff);\n          // send message about note update\n          if (lineDiff !== 0) {\n            const m: Message = {\n            messageData: {\n              MessageType: MessageType.Selection,\n              Message: {\n                msg: 'selected',\n                obj: n,\n                },\n              },\n              messageString: 'Selected Note'\n            }\n            this.Message = m;\n            this.NotifyCallback(this.Message);\n          }\n        }\n      })\n    }\n    this.StartLine = this.EndLine;\n  }\n\n  StopNoteDrag(x: number, y: number): void {\n    if (this.DraggingNote) {\n      this.StartLine = -1;\n      this.EndLine = -1;\n      this.DraggingNote = false;\n    }\n    if (this.DragLining) { this.DragLining = false; }\n  }\n\n  SetCameraDragging(dragging: boolean, x: number, y: number): void {\n    if (this.Config.CameraSettings?.DragEnabled === false) {\n      this.CamDragging = false;\n      return;\n    }\n    this.CamDragging = dragging;\n    if (this.CamDragging) {\n      // set initial drag position\n      this.DraggingPositions.x1 = (x / this.Camera.Zoom);\n      this.DraggingPositions.y1 = (y / this.Camera.Zoom);\n    } else {\n      // reset drag positions\n      this.DraggingPositions.x1 = 0;\n      this.DraggingPositions.y1 = 0;\n      this.DraggingPositions.x2 = 0;\n      this.DraggingPositions.y2 = 0;\n      this.Camera.oldX = this.Camera.x;\n      this.Camera.oldY = this.Camera.y;\n    }\n  }\n\n  AlterZoom(num: number): void {\n    this.Zoom += num;\n    this.Camera.Zoom = this.Zoom;\n    this.Context.setTransform(this.Camera.Zoom, 0, 0, this.Camera.Zoom, 0, 0);\n    this.Update(0, 0);\n  }\n\n  SetCameraZoom(num: number): void {\n    this.Zoom = num;\n    this.Camera.Zoom = this.Zoom;\n    console.log(\"CAmZOOM: \", this.Camera.Zoom);\n    this.Context.setTransform(this.Camera.Zoom, 0, 0, this.Camera.Zoom, 0, 0);\n    this.Update(0, 0);\n  }\n\n  // TEST FUNCTION\n  ResizeFirstMeasure(): void {\n//    this.Sheet.Measures[0].Bounds.width += 50;\n    this.Sheet.Measures[0].CreateDivisions(this.Camera);\n    for (let i = 1; i < this.Sheet.Measures.length; i++) {\n      this.Sheet.Measures[i].Reposition(this.Sheet.Measures[i-1]);\n    }\n    this.Update(0, 0);\n  }\n\n  ResizeMeasures(measures: Measure[]): void {\n    // TODO: Prototyping stuff so refactor later\n    const maxMeasuresPerLine = 4;\n    const minMeasuresPerLine = 3;\n    const lineHeight = measures[0].Instrument.Staff === StaffType.Rhythm ? 200 : 300;\n    SetPagesAndLines(measures, this.Sheet.Pages[0], this.Config.PageSettings?.UsePages, lineHeight);\n    ResizeMeasuresOnPage(measures, this.Sheet.Pages[0], this.Camera, this.Config);\n    if (this.Config.CameraSettings?.CenterMeasures) {\n      this.CenterMeasures();\n    } else if (this.Config.CameraSettings?.CenterPage) {\n      this.CenterPage();\n    }\n\n    this.Update(0, 0);\n  }\n\n  SetNoteValue(val: number): void {\n    this.NoteValue = val;\n  }\n\n  SetAccidental(acc: number): void {\n    for (let [ msr, elem ] of this.Selector.Elements ) {\n      elem.forEach(n => {\n            if (n.SelType === SelectableTypes.Note) {\n              const note = n as Note;\n              note.Accidental = acc;\n              this.Message = ClearMessage();\n              const m: Message = {\n                messageData: {\n                MessageType: MessageType.Selection,\n                Message: {\n                  msg: 'selected',\n                  obj: note,\n                  },\n                },\n                messageString: 'Selected Note'\n              }\n              this.Message = m;\n              this.NotifyCallback(m);\n            }\n      });\n    }\n    this.Update(0, 0);\n  }\n\n  Sharpen(): void {\n    for (let [ msr, elem ] of this.Selector.Elements ) {\n      elem.forEach(n => {\n        if (n.SelType === SelectableTypes.Note) {\n          const note = n as Note;\n          note.Accidental += 1;\n          if (note.Accidental > 2) { note.Accidental = 2; }\n        }\n      });\n    }\n    this.Update(0, 0);\n  }\n  Flatten(): void {\n    for (let [ msr, elem ] of this.Selector.Elements ) {\n      elem.forEach(e => {\n        if (e.SelType === SelectableTypes.Note) {\n          const n = e as Note;\n          n.Accidental -= 1;\n          if (n.Accidental < -2) { n.Accidental = -2; }\n        }\n      })\n    }\n    this.Update(0, 0);\n  }\n\n  //TODO: Remove this test function\n  ScaleToggle(): number {\n    if (this.Camera.Zoom !== 1) {\n      this.Camera.Zoom = 1;\n      this.Zoom = 1;\n    } else {\n      this.Camera.Zoom = 1;\n    }\n    return this.Camera.Zoom;\n  }\n\n // Test_AddClefMiddle(): void {\n //   const msr = this.Sheet.Measures[0];\n //   const clef: Clef = {Type: \"bass\", Beat: 3};\n //   let clefExist = false;\n //   msr.Clefs.forEach((c: Clef) => {\n //     if (c.Beat === clef.Beat && c.Type === clef.Type) {\n //       clefExist = true;\n //     }\n //   });\n //   if (!clefExist)\n //     msr.Clefs.push(clef);\n // }\n\n  KeyInput(key: string, keymaps: KeyMapping): void {\n    KeyPress(this, key, keymaps);\n//    this.NotifyCallback(this.Message);\n  }\n\n  SelectById(id: number): ISelectable {\n    const sel = this.Selector.SelectById(this.Sheet.Measures, id);\n    this.Update(0, 0);\n    return sel;\n  }\n\n  ToggleFormatting(): void {\n    this.Formatting = !this.Formatting;\n    if (this.Formatting) {\n      this.NoteInput = false;\n      this.RestInput = false;\n    }\n  }\n\n  Save(): void {\n    SaveSheet(this.Sheet);\n  }\n\n  LoadSheet(sheet: string): void {\n    //Clear measures\n    this.Sheet.Measures = [];\n    LoadSheet(this.Sheet,\n              this.Sheet.Pages[0],\n              this.Camera,\n              this.Sheet.Instruments[0], sheet,\n              this.NotifyCallback);\n    this.ResizeMeasures(this.Sheet.Measures);\n    this.Update(0, 0);\n  }\n\n  GetSaveFiles(): saveFile[] {\n    return allSaves;\n  }\n\n  // TODO: Prototype code\n  CreateTriplet(): void {\n    this.NoteValue = CreateTuplet(this.Selector.Notes, 4);\n    this.ResizeMeasures(this.Sheet.Measures);\n    this.Update(0, 0);\n  }\n\n  ChangeTimeSignature(top: number, bottom: number, transpose: boolean = false): void {\n    for (let [ msr, elem ] of this.Selector.Elements) {\n      msr.ChangeTimeSignature(top, bottom, transpose);\n    }\n  }\n\n  CenterMeasures(): void {\n    console.log(\"Center Measure called\");\n    // This measure is currently only being used for mtrainer\n    let msrWidth = 100;\n    if (this.Config.FormatSettings?.MeasureFormatSettings?.MaxWidth) {\n      msrWidth = this.Config.FormatSettings.MeasureFormatSettings.MaxWidth\n    }\n    const padding = (this.Canvas.clientWidth - ((msrWidth + (msrWidth / 2)) * this.Camera.Zoom)) / 4;\n    this.Camera.x = padding;\n    if (this.Canvas.clientWidth < (msrWidth * this.Camera.Zoom)) {\n      this.SetCameraZoom(this.Canvas.clientWidth / msrWidth);\n    } else {\n      const z = this.Config.CameraSettings?.Zoom ? this.Config.CameraSettings.Zoom : 1;\n      this.SetCameraZoom(z);\n      console.log(\"setting to: \", z);\n    }\n  }\n\n  CenterPage(): void {\n    const page = this.Sheet.Pages[0];\n    const pageW = page.Bounds.width;\n    const sidePadding = 20;\n    const totalWidth = pageW + sidePadding;\n    if (this.Canvas.clientWidth < totalWidth) {\n      //set zoom of camera\n      this.SetCameraZoom(this.Canvas.clientWidth / totalWidth);\n    } else {\n      const z = this.Config.CameraSettings?.Zoom ? this.Config.CameraSettings.Zoom : 1;\n      this.SetCameraZoom(z);\n    }\n    \n    const emptySpace = this.Canvas.clientWidth - (totalWidth * this.Camera.Zoom);\n    this.Camera.x = emptySpace / 2;\n  }\n\n  // Maybe instead of duplicate function we can expose note input function,\n  // doesn't matter atm\n  AddNoteOnMeasure(msr: Measure,\n                   noteValue: number,\n                   line: number,\n                   beat: Division,\n                   rest: boolean): void { AddNoteOnMeasure(msr, noteValue, line, beat, rest); }\n}\n\nexport { App };\n","import { App } from \"./App.js\";\nimport { Division, Measure } from \"./Core/Measure.js\";\nimport { ConfigSettings, Theme } from \"./Types/Config.js\";\nimport { ISelectable } from \"./Types/ISelectable.js\";\nimport { Message } from \"./Types/Message.js\";\nimport { KeyMapping } from \"./Workers/Mappings.js\";\n\nlet gSheet: App;\n\nconst keymaps: KeyMapping = {\n  \"addmeasure\": \"a\",\n  \"changeinputmode\": \"n\",\n  \"value1\": \"1\",\n  \"value2\": \"2\",\n  \"value3\": \"3\",\n  \"value4\": \"4\",\n  \"value5\": \"5\",\n  \"value6\": \"6\",\n  \"restInput\": \"r\",\n  \"delete\": \"d\",\n  \"sharpen\": \"+\",\n  \"flatten\": \"-\",\n  \"scaleToggle\": \"'\",\n  \"save\": \"s\",\n  \"load\": \"l\",\n  \"test_triplet\": \"t\"\n}\n\nconst defaultTheme: Theme = {\n  NoteElements: \"black\",\n  SelectColour: \"blue\",\n  UneditableColour: \"gray\",\n  LineColour: \"black\",\n  BackgroundColour: \"gray\",\n  PageColour: \"white\",\n  PageShadowColour: \"darkgray\",\n}\n\n\nconst test_CONFIG: ConfigSettings = {\n  CameraSettings: {\n    DragEnabled: true,\n    ZoomEnabled: true,\n    Zoom: 4,\n    StartingPosition: { x: 0, y: 0 },\n    CenterMeasures: false,\n  },\n  FormatSettings: {\n    MeasureFormatSettings: { MaxWidth: 100, Selectable: false },\n  },\n  NoteSettings: {\n    InputValue: 0.5,\n  },\n  PageSettings: {\n    UsePages: false,\n    RenderPage: false,\n    RenderBackground: false,\n    ContainerWidth: false,\n  },\n  Theme: defaultTheme,\n}\n\nfunction mouseMove(app: App, canvas: HTMLCanvasElement, e: MouseEvent): void {\n  let rect = canvas.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const y = e.clientY - rect.top;\n  app.Hover(x, y);\n}\n\nfunction mouseDown(app: App, canvas: HTMLCanvasElement, e: MouseEvent): void {\n  e.preventDefault();\n  let rect = canvas.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const y = e.clientY - rect.top;\n  if (e.buttons === 1) {\n    app.Input(x, y, e.shiftKey);\n  } else if (e.buttons === 4) {\n    app.SetCameraDragging(true, x, y);\n  }\n}\n\nfunction mouseUp(app: App, canvas: HTMLCanvasElement, e: MouseEvent): void {\n  let rect = canvas.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const y = e.clientY - rect.top;\n  app.SetCameraDragging(false, 0, 0);\n  app.StopNoteDrag(x, y);\n}\n\nfunction keyDown(app: App, keymaps: any, e: KeyboardEvent): void {\n  const key = e.key;\n  app.KeyInput(key, keymaps);\n}\n\nfunction zoom(app: App, e: WheelEvent): void {\n    if (e.ctrlKey) {\n    e.preventDefault();\n    const scale = e.deltaY * -0.01;\n    scale > 0 ? app.AlterZoom(0.05) : app.AlterZoom(-0.05);\n  }\n}\n\nfunction resize(app: App, context: CanvasRenderingContext2D, canvas: HTMLCanvasElement, container: HTMLElement): void {\n  canvas.width = container.clientWidth - 50;\n  if (app.Config.CameraSettings?.CenterMeasures === true) {\n    app.CenterMeasures();\n  } else if (app.Config.CameraSettings?.CenterPage) {\n    app.CenterPage();\n  }\n  app.AlterZoom(0);\n  app.Update(0, 0);\n}\n\nexport module sheet {\n  export function CreateApp(\n    canvas: HTMLCanvasElement,\n    container: HTMLElement,\n    doc: Document,\n    keyMap: any,\n    notifyCallBack: (msg: Message) => void,\n    config: ConfigSettings): App {\n    const ctx = canvas.getContext(\"2d\");\n    const app = new App(canvas, container, ctx, notifyCallBack, config);\n    canvas.addEventListener(\"mousemove\", (e) => mouseMove(app, canvas, e));\n    canvas.addEventListener(\"mousedown\", (e) => mouseDown(app, canvas, e));\n    canvas.addEventListener(\"mouseup\", (e) => mouseUp(app, canvas, e));\n    doc.addEventListener(\"keydown\", (e) => keyDown(app, keyMap, e));\n    window.addEventListener(\"resize\", () => resize(app, app.Context, canvas, container));\n    canvas.addEventListener(\"wheel\", (e) => zoom(app, e));\n    screen.orientation.addEventListener(\"change\", (e) => resize(app, app.Context, canvas, container));\n    gSheet = app;\n    canvas.width = container.clientWidth;\n    canvas.height = container.clientHeight;\n    app.Update(0, 0);\n    if (config.CameraSettings?.Zoom) {\n      app.SetCameraZoom(config.CameraSettings.Zoom);\n    }\n    if (config.CameraSettings?.CenterMeasures) {\n      app.CenterMeasures();\n    }\n    return app;\n  }\n\n  // API\n  export function ChangeInputMode(): void {\n    gSheet.ChangeInputMode();\n  } \n\n  export function SetAccidental(acc: number): void {\n    gSheet.SetAccidental(acc);\n  }\n\n  export function Sharpen(): void {\n    gSheet.Sharpen();\n  }\n\n  export function Flatten(): void {\n    gSheet.Flatten();\n  }\n\n  export function SetNoteValue(value: number): void {\n    gSheet.SetNoteValue(value);\n  }\n\n  export function AddMeasure(): void {\n    gSheet.AddMeasure();\n  }\n\n  export function AddNoteOnMeasure(\n    msr: Measure,\n    noteVal: number,\n    line: number,\n    div: Division,\n    rest: boolean): void {\n    gSheet.AddNoteOnMeasure(\n      msr,\n      noteVal,\n      line,\n      div,\n      rest);\n  }\n\n  export function Delete(): void {\n    gSheet.Delete();\n  }\n\n  export function SelectById(id: number): ISelectable {\n    return gSheet.SelectById(id);\n  }\n\n  export function ToggleFormatting(): void {\n    gSheet.ToggleFormatting();\n  }\n\n  export function DeleteSelected(): void {\n    gSheet.Delete();\n  }\n\n  export function ChangeTimeSignature(\n    top: number,\n    bottom: number,\n    transpose: boolean = false): void {\n      console.log(\"Changing time sisiigiangiangiang\");\n      gSheet.ChangeTimeSignature(top, bottom, transpose);\n  }\n}\n//public exports\nexport * from './Workers/Mappings.js';\nexport * from './App.js';\nexport * from './Workers/Loader.js';\nexport * from './Core/Note.js';\nexport * from './Workers/Pitcher.js';\nexport * from './Types/Message.js';\nexport * from './Types/Config.js';\n"],"mappings":"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","names":["Sheet","properties","Bounds","x","y","width","height","ix","iy","cam","MessageType","ClearMessage","stdFontSize","RenderSymbol","renderProps","symbol","x","y","theme","selected","canvas","context","camera","stdFontSize","Clef","id","pos","type","beat","Bounds","renderProps","theme","clefSymbol","RenderSymbol","msr","staff","div","d","xPosition","xBuffer","lineBuffer","yBuffer","msrMidLine","Measure","x","y","cam","GetNoteClefType","noteBeat","clefType","a","b","c","NoteNames","ClefPitchRef","calcPitch","midiNumber","ReturnLineFromMidi","clef","midi","staff","onNote","a4Midi","accidental","a4Line","line","i","ReturnMidiNumber","acc","a4line","midiNote","GeneratePitchMap","map","midiMap","noteNameCount","noteNumberCount","lineNum","lineCounter","lineMax","n","NoteNames","calcPitch","Note","props","Bounds","bounds","id","s","e","x","y","cam","line","ReturnMidiNumber","ValueMap","GetLargestValues","duration","remainingDiff","values","key","val","DivisionMinWidth","CreateDivisions","msr","notes","staff","cam","divisions","nextBeat","runningValue","a","b","n","restProps","Note","div","CreateBeatBounds","GenerateMissingBeatDivisions","UpdateNoteBounds","beat","duration","singleHeight","grandHeight","height","width","y","x","Bounds","ResizeDivisions","msr","divisions","staff","divs","d","s0divs","s1divs","divCount","minWidth","DivisionMinWidth","xBuffer","a","b","div","i","lastDivEnd","GenerateMissingBeatDivisions","sortedDivs","divA","divB","startingBeat","divisionsToAdd","notesOnDiv","n","val","newDivs","GetLargestValues","sBeat","v","CreateBeatBounds","clefType","GetNoteClefType","restProps","Note","msrDuration","reSortedDivs","lastDiv","lastBeat","lastDivisionsToAdd","rem","GetDivisionGroups","msr","staff","divGroups","divs","notes","startFlag","d","a","b","div","i","divNotes","n","restBeat","IsRestOnBeat","beat","notesOnBeat","restFound","noteXBuffer","AddNoteOnMeasure","msr","noteValue","line","beat","rest","InputNote","Bounds","InputOnMeasure","x","y","cam","inputtingNote","Measure","beatOver","b","division","tupleCount","notesInDiv","n","addingToTuple","clefType","GetNoteClefType","noteProps","newNote","Note","MeasureHasRoom","AddToDivision","UpdateNoteBounds","staff","GetDivisionGroups","g","Divisions","Notes","stemDir","DetermineStemDirection","div","divNotes","a","i","flipNoteOffset","IsFlippedNote","lineSubt","duration","tuple","IsRestOnBeat","notes","notesOnBeat","restFound","remainingValue","tying","tStart","tEnd","d","newNoteProps","note","remValue","tiedNoteValues","GetLargestValues","tiedStart","tiedEnd","nextBeat","dur","shouldTie","tiedNote","noteObj","CreateTuplet","selNotes","count","measure","tupleDuration","newDuration","lastBeat","details","TimeSignature","top","bottom","useSymbol","Bounds","renderProps","msr","theme","tGlyph","GetTimeSignatureGlyph","bGlyph","RenderSymbol","staff","msrMidLine","Measure","x","y","cam","n","glyph","CreateTimeSignature","props","Measure","_Measure","properties","runningId","CreateTimeSignature","trebleClef","Clef","bassClef","y","msr","cam","relYPos","line","actualLine","bounds","Bounds","diff","afterInput","CreateDivisions","ResizeDivisions","UpdateNoteBounds","prevMsr","topStaffHeight","heightInLines","height","expand","lineOver","dist","note","fromInput","msg","beat","staff","ignoreNotes","n","duration","tuple","tupleDetails","clefType","GetNoteClefType","restProps","Note","DivisionMinWidth","staffZeroDivs","div","staffOneDivs","lowestValue","a","b","sel","x","top","bottom","transpose","Stem","bounds","context","cam","theme","sharpPath","doubleSharp","flatPath","naturalPath","RenderAccidental","renderProps","note","type","theme","canvas","context","camera","posString","dflatString","RenderSymbol","crotchetRest","quaverRest","semiQuaverRest","demiSemiQuaverRest","quaverFlag","quaverFlagInverted","noteXBuffer","RenderNote","note","renderProps","Bounds","selected","flipNote","stemDir","theme","colour","RenderAccidental","x","y","width","height","canvas","context","camera","flipNoteOffset","posString","noteString","RenderSymbol","RenderDots","dotXStart","dotCount","circle","d","lineY","cpath","RenderRest","ctx","div","cam","msr","noteXBuffer","Measure","path","demiSemiQuaverRest","semiQuaverRest","quaverRest","crotchetRest","RenderTupletAnnotation","coords","count","GetTupletGlyph","RenderTuplets","divisions","notes","staff","divs","a","b","foundTuplet","tupleX","tupleXEnd","tupleY","tupleCount","i","notesInDiv","n","nArray","DetermineStemDirection","RenderTies","divNotes","nextDivNotes","tiedTo","nextNote","x1","y1","x2","y2","curveOffset","curveStartOffset","measure","dir","match","middleLine","highestLine","lowestLine","na","RenderStemRevise","beamDir","stemDirection","stemToMidLine","beamDirection","stemEndY","beamStartX","beamEndX","yLineBuffer","staffTopLine","midStemThreshHold","lineHeight","xBuffer","stemX","sortedNotes","highLine","lowLine","startPos","flagLoop","GetFlagCount","flagString","quaverFlag","quaverFlagInverted","startY","endY","xB","fNoteX","lNoteX","Beam","diff","Stem","value","renderLedgerLines","division","ledgerX","ledgerString","bdNotes","midLine","l","ledgerY","h","Beam","bounds","start","end","context","cam","count","stemDir","theme","baseThickness","svgLine","yBuffer","flagBuffer","i","line","DetermineBeamDirection","measure","divGroup","divisions","a","b","firstDivTopLine","lastDivTopLine","firstDivBotLine","lastDivBotLine","clefPath","RenderTrebleClef","x","y","KeySignatures","RenderKeySignature","renderProps","msr","keyString","clefString","xOff","canvas","context","camera","keyProps","GetKeyProps","posString","i","sharpPath","flatPath","props","notes","KeySignatures","acc","fromTreble","accidental","lines","line_space","line_width","endsWidth","noteXBuffer","RenderMeasure","measure","renderProps","hovId","mousePos","lastMeasure","noteInput","index","restInput","noteValue","config","RenderHovered","RenderMeasureBase","RenderNotes","MiddleLineBounds","b","Bounds","diff","theme","canvas","context","camera","line","Measure","s","noteY","line_space","tempNoteProps","tempNote","Note","RenderRest","RenderNote","RenderStemRevise","renderLedgerLines","msr","msrMidLine","grndMsrMidLine","lastEndThickness","endsWidth","grandMsrHeight","msrLineHeight","lineTopStaff","grandLineHeight","measureBegin","measureEnd","measureDoubleEnd","l","lineString","line_width","linePath","RenderMeasureClef","xOff","RenderKeySignature","RenderTimeSig","bassClefSmall","RenderMeasureClef","renderProps","msr","theme","canvas","context","camera","msrMidLine","Measure","gMsrMidLine","clef","div","d","clefPath","RenderTrebleClef","line_space","RenderTimeSig","top","bottom","xOffset","RenderNotes","staff","i","divNotes","note","a","b","IsRestOnBeat","RenderRest","renderLedgerLines","GetDivisionGroups","group","stemDir","DetermineStemDirection","beamAngle","DetermineBeamDirection","RenderStemRevise","hasFlipped","dN","n","yPos","isFlipped","IsFlippedNote","flipNoteOffset","RenderNote","RenderDots","noteXBuffer","RenderTies","RenderTuplets","notes","index","dir","flipped","countAbove","countBelow","nLine","line","totalCount","notePos","RenderPage","page","canvas","context","cam","formatting","config","measures","_a","a4w","a4h","x","y","adjusterColour","lineColour","RenderAdjuster","line","dir","colour","Renderer","c","ctx","measures","pages","hovElements","mousePos","cam","noteInput","restInput","formatting","config","noteValue","_a","_b","page","RenderPage","m","i","renderProps","lastMeasure","RenderMeasure","RenderDebug","sheet","selector","sTopLine","sBotLine","lineHeight","mh","CreateInstrument","y","config","staff","CreateDefaultMeasure","id","instr","page","cam","callback","msrHeight","mh","props","Bounds","Measure","CreateMeasure","bounds","timeSignature","keySignature","clef","runningId","renderClef","Camera","x","y","Selector","msr","x","y","cam","shiftKey","msg","elems","elem","elements","selectedElements","UpdateNoteBounds","e","n","tiedNotes","SelectTiedNotes","measure","notes","note","noteIndex","i","indexes","key","measures","id","selectable","m","nArray","index","clef","c","noteHit","div","na","deselect","tStart","tEnd","tn","canonSave","randomSaveOne","allSaves","canonSave","randomSaveOne","KeyPress","app","key","keyMaps","allSaves","defaultMargins","scale","a4w","a4h","Page","x","y","pageNum","Bounds","lineHeight","latestLine","newLine","SetPagesAndLines","measures","pages","usePage","defaultLineHeight","page","runningWidth","currentPage","currentLine","msrsOnLine","pageWidth","m","msr","i","msrWidth","GetMaxWidth","config","cam","_a","_b","maxWidth","ResizeMeasuresOnPage","pageSize","line","msrs","msrsLineWidth","fillWidth","calculatedWidth","c","LoadSheet","sheet","page","cam","instr","savedJson","callback","runningId","m","i","notes","n","noteProps","newNote","Note","msr","CreateMeasure","SaveSheet","saved","App","canvas","container","context","notifyCallback","config","load","_a","_b","_c","GeneratePitchMap","ClearMessage","Selector","camStartX","camStartY","Camera","newPage","Page","sProps","page","CreateInstrument","CreateDefaultMeasure","Sheet","x","y","m","d","UpdateNoteBounds","msr","elem","shiftKey","msrOver","InputOnMeasure","selectedMeasureElement","Measure","mousePos","Renderer","RenderDebug","newMeasureID","prevMsr","i","latestLine","newMeasureBounds","Bounds","newMsr","CreateMeasure","liner","line","lineDiff","e","n","dragging","num","measures","lineHeight","SetPagesAndLines","ResizeMeasuresOnPage","val","acc","note","key","keymaps","KeyPress","id","sel","SaveSheet","sheet","LoadSheet","allSaves","CreateTuplet","top","bottom","transpose","msrWidth","padding","z","totalWidth","emptySpace","noteValue","beat","rest","AddNoteOnMeasure","gSheet","mouseMove","app","canvas","e","rect","x","y","mouseDown","mouseUp","keyDown","keymaps","key","zoom","resize","context","container","_a","_b","sheet","CreateApp","doc","keyMap","notifyCallBack","config","ctx","App","gSheet","ChangeInputMode","SetAccidental","acc","Sharpen","Flatten","SetNoteValue","value","AddMeasure","AddNoteOnMeasure","msr","noteVal","line","div","rest","Delete","SelectById","id","ToggleFormatting","DeleteSelected","ChangeTimeSignature","top","bottom","transpose"]}