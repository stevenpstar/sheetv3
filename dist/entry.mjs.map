{"version":3,"sources":["../src/Types/Bounds.ts","../src/Core/Staff.ts","../src/Core/Barline.ts","../src/Types/Message.ts","../src/Renderers/MusicFont.Renderer.ts","../src/Core/Clef.ts","../src/Core/Values.ts","../src/Renderers/Note.Renderer.ts","../src/Workers/Pitcher.ts","../src/Core/Note.ts","../src/Core/Division.ts","../src/Core/Beam.ts","../src/Factory/Beam.Fact.ts","../src/Core/KeySignatures.ts","../src/Workers/Accidentaler.ts","../src/Renderers/Accidentals.Renderer.ts","../src/Renderers/KeySignature.Renderer.ts","../src/Core/Dynamic.ts","../src/Renderers/Clef.Renderer.ts","../src/Renderers/Staff.Renderer.ts","../src/Renderers/Measure.RendererRev.ts","../src/Renderers/Measure.Renderer.ts","../src/Core/Stem.ts","../src/Renderers/Stem.Fact.ts","../src/Workers/NoteInput.ts","../src/Core/TimeSignatures.ts","../src/Core/Voice.ts","../src/Core/Measure.ts","../src/Factory/Instrument.Factory.ts","../src/Core/Page.ts","../src/Core/Sheet.ts","../src/Renderers/Page.Renderer.ts","../src/Core/Renderer.ts","../src/Core/Camera.ts","../src/Workers/Selector.ts","../src/testsaves.ts","../src/Workers/Mappings.ts","../src/Workers/Formatter.ts","../src/Workers/Loader.ts","../src/App.ts","../src/entry.ts"],"sourcesContent":["import { Camera } from \"../Core/Camera\";\n\nclass Bounds {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  constructor(x: number, y: number, width: number, height: number) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  IsHovered(ix: number, iy: number, cam: Camera): boolean {\n    if (this.height < 0) {\n      return (\n        ix >= this.x + cam.x &&\n        ix <= this.x + cam.x + this.width &&\n        iy > this.y - Math.abs(this.height) + cam.y &&\n        iy <= this.y + cam.y\n      );\n    }\n    return (\n      ix >= this.x + cam.x &&\n      ix <= this.x + cam.x + this.width &&\n      iy >= this.y + cam.y &&\n      iy <= this.y + cam.y + this.height\n    );\n  }\n}\n\nexport { Bounds };\n","import { Measure } from \"./Measure.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../Types/Config.js\";\n\nclass Staff {\n  // Determines line offset / Order of staff\n  Num: number;\n  TopLine: number;\n  MidLine: number;\n  BotLine: number;\n  Buffer: number;\n  constructor(num: number) {\n    this.Num = num;\n    this.Buffer = this.Num * 1000;\n    // These defaults will change/be configurable\n    this.TopLine = 5;\n    this.BotLine = 35;\n    this.MidLine = 15;\n  }\n}\n\nfunction RenderMeasureLines(\n  renderProps: RenderProperties,\n  measure: Measure,\n  lastMeasure: boolean,\n  theme: Theme,\n): void {\n  const { context, camera } = renderProps;\n  const endsWidth = lastMeasure ? 4 : 2;\n  const startWidth = 2;\n\n  const staves = measure.Staves;\n  let staffHeight = GetStaffHeightUntil(staves, staves.length - 1) + 41;\n  const yStart = measure.Bounds.y + (GetStaffMiddleLine(staves, 0) - 4) * 5;\n  context.fillStyle = theme.LineColour;\n  const measureBegin = `M${measure.Bounds.x + camera.x} \n        ${yStart + camera.y} h \n        ${startWidth} v ${staffHeight} h -${startWidth} Z`;\n\n  const measureEnd = `M${measure.Bounds.x + measure.Bounds.width + measure.XOffset + camera.x} \n        ${yStart + camera.y} h \n        ${endsWidth} v ${staffHeight} h -${endsWidth} Z`;\n\n  const measureEndDouble = `M${measure.Bounds.x + measure.Bounds.width + measure.XOffset + camera.x - 3} \n        ${yStart + camera.y} h \n        ${startWidth} v ${staffHeight} h -${startWidth} Z`;\n\n  context.fill(new Path2D(measureBegin));\n  context.fill(new Path2D(measureEnd));\n  if (lastMeasure) {\n    context.fill(new Path2D(measureEndDouble));\n  }\n}\n\nfunction GetStaffHeightUntil(staves: Staff[], staffNum: number = -1): number {\n  let height = 0;\n  staves.forEach((s: Staff, i: number) => {\n    if (i < staffNum || staffNum === -1) {\n      const topNegative = s.TopLine < 0;\n      const lineCount = topNegative\n        ? s.BotLine + Math.abs(s.TopLine)\n        : s.BotLine - s.TopLine;\n      height += lineCount * 5;\n    }\n  });\n  return height;\n}\n\nfunction GetStaffHeight(staves: Staff[], staffNum: number): number {\n  const staff = staves.find((s: Staff) => s.Num === staffNum);\n  // TODO Write an error or something\n  if (!staff) {\n    console.error(\"Cannot find staff: \", staffNum);\n    return -1;\n  }\n  const topNegative = staff.TopLine < 0;\n  const lineCount = topNegative\n    ? staff.BotLine + Math.abs(staff.TopLine)\n    : staff.BotLine - staff.TopLine;\n  return lineCount * 5;\n}\n\nfunction GetStaffMiddleLine(staves: Staff[], staffNum: number): number {\n  const linesBefore = 0; //GetStaffHeightUntil(staves, staffNum) / 5;\n  const staff = staves.find((s: Staff) => s.Num === staffNum);\n  return linesBefore + (staff.MidLine - staff.TopLine);\n}\n\nfunction GetStaffActualMidLine(staves: Staff[], staffNum: number): number {\n  const linesBefore = GetStaffHeightUntil(staves, staffNum) / 5;\n  const staff = staves.find((s: Staff) => s.Num === staffNum);\n  return linesBefore + (staff.MidLine - staff.TopLine);\n}\n\n// TODO: Probably move this render function once it is working.\nfunction RenderStaffLines(\n  renderProps: RenderProperties,\n  msr: Measure,\n  staff: Staff,\n): void {\n  // These should be defined somewhere else\n  const { canvas, context, camera } = renderProps;\n  const line_space = 10;\n  const line_width = 1;\n  const endsWidth = 2;\n\n  const staves = msr.Staves;\n  const yStart = msr.Bounds.y + GetStaffHeightUntil(staves, staff.Num);\n  const staffMidLine = GetStaffMiddleLine(staves, staff.Num);\n  const staffHeight =\n    GetStaffHeightUntil(staves, staves.length - 2) +\n    (GetStaffMiddleLine(staves, staves.length - 1) - 2) * 5;\n\n  // Render Staff Lines\n  for (let l = 0; l < 5; l++) {\n    const lineString = `M${msr.Bounds.x + camera.x} \n    ${yStart + 5 * staffMidLine - line_space * 2 + line_space * l + camera.y} h \n    ${msr.Bounds.width + msr.XOffset} v ${line_width} h -${msr.Bounds.width + msr.XOffset} Z`;\n\n    const linePath = new Path2D(lineString);\n    context.fill(linePath);\n  }\n}\n\nexport {\n  Staff,\n  GetStaffHeightUntil,\n  GetStaffMiddleLine,\n  GetStaffHeight,\n  RenderStaffLines,\n  RenderMeasureLines,\n  GetStaffActualMidLine,\n};\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Camera } from \"./Camera.js\";\nimport { Measure } from \"./Measure.js\";\nimport { GetStaffHeightUntil, GetStaffMiddleLine, Staff } from \"./Staff.js\";\n\nenum BarlineType {\n  SINGLE,\n  DOUBLE,\n  END,\n  REPEAT_BEGIN,\n  REPEAT_END,\n}\n\nenum BarlinePos {\n  START,\n  END,\n}\n\nclass Barline implements ISelectable {\n  ID: number;\n  Selected: boolean;\n  SelType: SelectableTypes;\n  Bounds: Bounds;\n  Editable: boolean;\n  Position: BarlinePos;\n  Type: BarlineType;\n\n  constructor(pos: BarlinePos, type: BarlineType) {\n    this.ID = 0; // no id for now\n    this.Selected = false;\n    this.SelType = SelectableTypes.Barline;\n    this.Bounds = new Bounds(0, 0, 0, 0);\n    this.Editable = false;\n    this.Position = pos;\n    this.Type = type;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n}\n\nfunction RenderBounds(renderProps: RenderProperties, barline: Barline): void {\n  renderProps.context.strokeStyle = \"green\";\n  renderProps.context.strokeRect(\n    barline.Bounds.x + renderProps.camera.x,\n    barline.Bounds.y + renderProps.camera.y,\n    barline.Bounds.width,\n    barline.Bounds.height,\n  );\n}\n\n// Rendering barlines requires us to consider the end and start of two measures\nfunction RenderBarline(\n  renderProps: RenderProperties,\n  endMeasure: Measure,\n  beginMeasure: Measure,\n  cam: Camera,\n): void {\n  if (!endMeasure) {\n    if (beginMeasure.Barlines[0].Selected) {\n      renderProps.context.fillStyle = \"blue\";\n    }\n    switch (beginMeasure.Barlines[0].Type) {\n      case BarlineType.SINGLE:\n        RenderStandardBarline(\n          renderProps,\n          beginMeasure,\n          cam,\n          beginMeasure.Barlines[0].Position,\n        );\n        break;\n      case BarlineType.REPEAT_END:\n        RenderRepeatEnd(renderProps, beginMeasure, cam);\n        break;\n      default:\n        RenderStandardBarline(\n          renderProps,\n          beginMeasure,\n          cam,\n          beginMeasure.Barlines[0].Position,\n        );\n    }\n    return;\n  } else if (!beginMeasure) {\n    if (endMeasure.Barlines[1].Selected) {\n      renderProps.context.fillStyle = \"blue\";\n    }\n\n    switch (endMeasure.Barlines[1].Type) {\n      case BarlineType.SINGLE:\n        RenderStandardBarline(\n          renderProps,\n          endMeasure,\n          cam,\n          endMeasure.Barlines[1].Position,\n        );\n        break;\n      case BarlineType.REPEAT_END:\n        RenderRepeatEnd(renderProps, endMeasure, cam);\n        break;\n      case BarlineType.END:\n        RenderFinalBarline(renderProps, endMeasure, cam);\n        break;\n      default:\n        RenderStandardBarline(\n          renderProps,\n          endMeasure,\n          cam,\n          endMeasure.Barlines[1].Position,\n        );\n    }\n\n    renderProps.context.fillStyle = \"black\";\n    return;\n  }\n  if (\n    endMeasure.Barlines[1].Type == BarlineType.SINGLE &&\n    beginMeasure.Barlines[0].Type == BarlineType.SINGLE\n  ) {\n    if (endMeasure.Barlines[1].Selected || beginMeasure.Barlines[0].Selected) {\n      renderProps.context.fillStyle = \"blue\";\n    } else {\n      renderProps.context.fillStyle = \"black\";\n    }\n    RenderStandardBarline(\n      renderProps,\n      beginMeasure,\n      cam,\n      beginMeasure.Barlines[0].Position,\n    );\n  }\n}\n\nfunction RenderStandardBarline(\n  renderProps: RenderProperties,\n  measure: Measure,\n  cam: Camera,\n  pos: BarlinePos,\n): void {\n  const lineHeight = 5;\n  const midLine = GetStaffMiddleLine(measure.Staves, 0);\n\n  const yStart =\n    measure.Bounds.y +\n    GetStaffHeightUntil(measure.Staves, 0) +\n    midLine * lineHeight -\n    4 * lineHeight;\n\n  const yEnd =\n    measure.Bounds.y +\n    GetStaffHeightUntil(measure.Staves, measure.Staves.length - 1) +\n    midLine * lineHeight +\n    4 * lineHeight;\n\n  const barlineHeight = yEnd - yStart;\n\n  var xStart = measure.Bounds.x;\n  if (pos == BarlinePos.END) {\n    xStart += measure.GetBoundsWithOffset().width;\n  }\n\n  xStart = Math.floor(xStart);\n\n  const line = `M${xStart + cam.x}\n      ${yStart + cam.y} h\n      1 v ${barlineHeight} h -1 Z`;\n\n  renderProps.context.fill(new Path2D(line));\n}\n\nfunction RenderFinalBarline(\n  renderProps: RenderProperties,\n  measure: Measure,\n  cam: Camera,\n): void {\n  const lineHeight = 5;\n  const midLine = GetStaffMiddleLine(measure.Staves, 0);\n\n  const yStart =\n    measure.Bounds.y +\n    GetStaffHeightUntil(measure.Staves, 0) +\n    midLine * lineHeight -\n    4 * lineHeight;\n\n  const yEnd =\n    measure.Bounds.y +\n    GetStaffHeightUntil(measure.Staves, measure.Staves.length - 1) +\n    midLine * lineHeight +\n    4 * lineHeight;\n\n  const barlineHeight = yEnd - yStart;\n\n  var xStart = measure.Bounds.x + measure.GetBoundsWithOffset().width;\n\n  const line = `M${xStart + cam.x - 9}\n      ${yStart + cam.y} h\n      1 v ${barlineHeight} h -1 Z`;\n\n  const thickLine = `M${xStart + cam.x - 4}\n      ${yStart + cam.y} h\n      4 v ${barlineHeight + 1} h -4 Z`;\n\n  renderProps.context.fill(new Path2D(line));\n  renderProps.context.fill(new Path2D(thickLine));\n}\n\nfunction RenderRepeatEnd(\n  renderProps: RenderProperties,\n  measure: Measure,\n  cam: Camera,\n): void {\n  const lineHeight = 5;\n  const midLine = GetStaffMiddleLine(measure.Staves, 0);\n\n  const yStart =\n    measure.Bounds.y +\n    GetStaffHeightUntil(measure.Staves, 0) +\n    midLine * lineHeight -\n    4 * lineHeight;\n\n  const yEnd =\n    measure.Bounds.y +\n    GetStaffHeightUntil(measure.Staves, measure.Staves.length - 1) +\n    midLine * lineHeight +\n    4 * lineHeight;\n\n  const barlineHeight = yEnd - yStart;\n\n  var xStart = measure.Bounds.x + measure.GetBoundsWithOffset().width;\n\n  const line = `M${xStart + cam.x - 9}\n      ${yStart + cam.y} h\n      1 v ${barlineHeight} h -1 Z`;\n\n  const thickLine = `M${xStart + cam.x - 4}\n      ${yStart + cam.y} h\n      4 v ${barlineHeight + 1} h -4 Z`;\n\n  const circle = \"a1.485 1.485 90 10-2.97 0 1.485 1.485 90 102.97 0\";\n\n  renderProps.context.fill(new Path2D(line));\n  renderProps.context.fill(new Path2D(thickLine));\n\n  measure.Staves.forEach((s: Staff) => {\n    const midLine = GetStaffMiddleLine(measure.Staves, s.Num);\n    const midLinePosition =\n      GetStaffHeightUntil(measure.Staves, s.Num) +\n      measure.Bounds.y +\n      midLine * lineHeight;\n\n    const cPath1 =\n      `m${xStart - 12 + renderProps.camera.x} ${midLinePosition + 0.5 + renderProps.camera.y - 5}` +\n      circle;\n    const cPath2 =\n      `m${xStart - 12 + renderProps.camera.x} ${midLinePosition + 0.5 + renderProps.camera.y + 5}` +\n      circle;\n\n    renderProps.context.fill(new Path2D(cPath1));\n    renderProps.context.fill(new Path2D(cPath2));\n  });\n}\n\nexport { Barline, BarlineType, BarlinePos, RenderBarline };\n","enum MessageType {\n  None,\n  Selection,\n  Deletion,\n  InputChange,\n  AddNote,\n}\ntype MessageData = {\n  MessageType: MessageType;\n  Message: { msg: string, obj: any };\n}\ninterface Message {\n  messageString: string;\n  messageData: MessageData;\n}\n\nfunction ClearMessage(): Message {\n  return {\n    messageString: \"\",\n    messageData: {\n      MessageType: MessageType.None,\n      Message: { msg: \"\", obj: {} }\n    }\n  }\n}\n\nexport { Message, ClearMessage, MessageType }\n","import { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Note, Theme } from \"../entry.js\";\n\nconst stdFontSize = 40;\nenum Clefs {\n  G = \"\\u{1D11E}\",\n  GOttavaBassa = \"\\u{1D120}\",\n  GOttavaAlta = \"\\u{1D11F}\",\n  GQuindicesimaBassa = \"\\u{E051}\",\n  F = \"\\u{1D122}\",\n}\n\nenum NoteHeads {\n  whole = \"\\u{E0A2}\",\n  minim = \"\\u{E0A3}\",\n  crotchet = \"\\u{E0A4}\",\n}\n\nenum TimeSigNumbers {\n  Zero = \"\\u{E080}\",\n  One = \"\\u{E081}\",\n  Two = \"\\u{E082}\",\n  Three = \"\\u{E083}\",\n  Four = \"\\u{E084}\",\n  Five = \"\\u{E085}\",\n  Six = \"\\u{E086}\",\n  Seven = \"\\u{E087}\",\n  Eight = \"\\u{E088}\",\n  Nine = \"\\u{E089}\",\n  Common = \"\\u{E08A}\",\n  CutCommon = \"\\u{E08B}\",\n}\n\nenum TupletNumbers {\n  Zero = \"\\u{E880}\",\n  One = \"\\u{E881}\",\n  Two = \"\\u{E882}\",\n  Three = \"\\u{E883}\",\n  Four = \"\\u{E884}\",\n  Five = \"\\u{E885}\",\n  Six = \"\\u{E886}\",\n  Seven = \"\\u{E887}\",\n  Eight = \"\\u{E888}\",\n  Nine = \"\\u{E889}\",\n  Colon = \"\\u{E88A}\",\n}\n\nenum StdAccidentals {\n  Natural = \"\\u{E261}\",\n  NaturalSharp = \"\\u{E268}\",\n  NaturalFlat = \"\\u{E267}\",\n  Flat = \"\\u{E260}\",\n  DoubleFlat = \"\\u{E264}\",\n  TripleFlat = \"\\u{E266}\",\n  Sharp = \"\\u{E262}\",\n  DoubleSharp = \"\\u{E263}\",\n  TripleSharp = \"\\u{E265}\",\n  ParenthLeft = \"\\u{E26A}\",\n  ParenthRight = \"\\u{E26B}\",\n  ParenthNatural = \"\\u{E26A}\\u{E261}\\u{E26B}\",\n  ParenthSharp = \"\\u{E26A}\\u{E262}\\u{E26B}\",\n  ParenthFlat = \"\\u{E26A}\\u{E260}\\u{E26B}\",\n}\n\nenum DynamicSymbol {\n  Piano = \"\\u{E520}\",\n  Mezzo = \"\\u{E521}\",\n  Forte = \"\\u{E522}\",\n  Rinforzando = \"\\u{E523}\",\n  SForzando = \"\\u{E524}\",\n  Z = \"\\u{E525}\",\n  N = \"\\u{E526}\",\n}\n\nenum ArticulationSymbol {\n  AccentAbove = \"\\u{E4A0}\",\n  AccentBelow = \"\\u{E4A1}\",\n  StaccatoAbove = \"\\u{E4A2}\",\n  StaccatoBelow = \"\\u{E4A3}\",\n}\n\nfunction RenderSymbol(\n  renderProps: RenderProperties,\n  symbol: string,\n  x: number,\n  y: number,\n  theme: Theme,\n  selected: boolean,\n): void {\n  const { canvas, context, camera } = renderProps;\n  context.fillStyle = selected ? theme.SelectColour : theme.NoteElements;\n  context.font = `${stdFontSize}px Bravura`;\n  context.fillText(symbol, x + camera.x, y + camera.y);\n}\n\nfunction RenderScaledSymbol(\n  renderProps: RenderProperties,\n  symbol: string,\n  x: number,\n  y: number,\n  theme: Theme,\n  selected: boolean,\n  fontSize: number,\n): void {\n  const { canvas, context, camera } = renderProps;\n  var colour = selected ? theme.SelectColour : theme.NoteElements;\n  context.fillStyle = selected ? theme.SelectColour : theme.NoteElements;\n  context.font = `${fontSize}px Bravura`;\n  context.fillText(symbol, x + camera.x, y + camera.y);\n}\n\nfunction RenderScaledNote(\n  note: Note,\n  renderProps: RenderProperties,\n  symbol: string,\n  x: number,\n  y: number,\n  theme: Theme,\n  selected: boolean,\n  fontSize: number,\n): void {\n  const { canvas, context, camera } = renderProps;\n  var colour = selected ? theme.SelectColour : theme.NoteElements;\n  if (note.OutOfBounds) {\n    colour = \"red\";\n  }\n  context.fillStyle = colour;\n  context.font = `${fontSize}px Bravura`;\n  context.fillText(symbol, x + camera.x, y + camera.y);\n}\n\n//TODO: Test(?) Function, maybe. - testing opacity only here\nfunction RenderAnimatedSymbol(\n  renderProps: RenderProperties,\n  symbol: string,\n  x: number,\n  y: number,\n  theme: Theme,\n  opacity: number,\n): void {\n  renderProps.context.fillStyle = `rgba(0, 0, 0, ${opacity})`;\n  renderProps.context.font = `${stdFontSize}px Bravura`;\n  renderProps.context.fillText(\n    symbol,\n    x + renderProps.camera.x,\n    y + renderProps.camera.y,\n  );\n}\n\nexport {\n  Clefs,\n  NoteHeads,\n  StdAccidentals,\n  TimeSigNumbers,\n  TupletNumbers,\n  DynamicSymbol,\n  ArticulationSymbol,\n  RenderSymbol,\n  RenderScaledSymbol,\n  RenderScaledNote,\n  RenderAnimatedSymbol,\n  stdFontSize,\n};\n","import { Clefs, RenderSymbol } from \"../Renderers/MusicFont.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\nimport { StaffType } from \"./Instrument.js\";\nimport { Measure } from \"./Measure.js\";\nimport { GetStaffActualMidLine, GetStaffMiddleLine } from \"./Staff.js\";\n\n// TODO: Move this somewhere central\nconst lineSpace = 10;\n\nclass Clef implements ISelectable {\n  ID: number;\n  Selected: boolean;\n  Staff: number;\n  Position: { x: number; y: number };\n  Bounds: Bounds;\n  SelType: SelectableTypes;\n  Type: string;\n  Beat: number;\n  Editable: boolean;\n  constructor(id: number, type: string, beat: number, staff: number) {\n    this.ID = id;\n    this.Position = { x: 0, y: 0 };\n    this.Staff = staff;\n    this.Bounds = new Bounds(0, 0, 0, 0);\n    this.Type = type;\n    this.SelType = SelectableTypes.Clef;\n    this.Beat = beat;\n    this.Selected = false;\n    // TODO: shouldn't only be true\n    this.Editable = true;\n  }\n\n  render(renderProps: RenderProperties, theme: Theme): void {\n    let clefSymbol: Clefs;\n    switch (this.Type) {\n      case \"treble\":\n        clefSymbol = Clefs.G;\n        break;\n      case \"bass\":\n        clefSymbol = Clefs.F;\n        break;\n      default:\n        clefSymbol = Clefs.G;\n    }\n\n    RenderSymbol(\n      renderProps,\n      clefSymbol,\n      this.Position.x,\n      this.Position.y,\n      theme,\n      this.Selected,\n    );\n  }\n\n  SetBounds(msr: Measure, staff: number): void {\n    // There is a difference between position and bounds\n    // Position is for visually positioning the clef glyph, bounds is for selection\n    const div = msr.Voices[msr.ActiveVoice].Divisions.find(\n      (d) => d.Beat === this.Beat && d.Staff === staff,\n    );\n    const xPosition: number = this.Beat === 1 ? msr.Bounds.x : div.Bounds.x;\n    const xBuffer = 3;\n    let lineBuffer = 2;\n    let yBuffer = 0;\n    // TODO: Replace with relative mid line function (i think it might exist\n    // already)\n    const msrMidLine = GetStaffMiddleLine(msr.Staves, staff); //GetStaffActualMidLine(msr.Staves, staff);\n    this.Position.x = xPosition + xBuffer;\n    this.Bounds.x = xPosition + xBuffer;\n    switch (this.Type) {\n      case \"bass\":\n        lineBuffer = -2;\n    }\n    this.Position.y = div.Bounds.y + yBuffer + (msrMidLine + lineBuffer) * 5;\n    this.Bounds.y = div.Bounds.y;\n    this.Bounds.width = 30;\n    this.Bounds.height = 85;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n}\n\nfunction GetNoteClefType(\n  msr: Measure,\n  noteBeat: number,\n  staff: StaffType,\n): string {\n  let clefType: string = staff === StaffType.Single ? \"treble\" : \"bass\";\n  if (staff === StaffType.Single) {\n    msr.Clefs.sort((a: Clef, b: Clef) => {\n      return a.Beat - b.Beat;\n    });\n    msr.Clefs.forEach((c: Clef) => {\n      // clefs can change part way through measure\n      // need to find latest clef to pass on to note (by beat)\n      if (c.Beat <= noteBeat) {\n        clefType = c.Type;\n        return;\n      }\n    });\n  }\n  return clefType;\n}\n\nexport { Clef, GetNoteClefType };\n","enum NoteValues {\n  n32 = 0.03125,\n  n32d = n32 + (n32 / 2),\n  n32dd = n32d + (n32 / 4),\n  n32ddd = n32dd + (n32 / 8),\n  n16 = 0.0625,\n  n16d = n16 + (n16 / 2),\n  n16dd = n16d + (n16 / 4),\n  n16ddd = n16dd + (n16 / 8),\n  n8 = 0.125,\n  n8d = n8 + (n8 / 2),\n  n8dd = n8d + (n8 / 4),\n  n8ddd = n8dd + (n8 / 8),\n  n4 = 0.25,\n  n4d = n4 + (n4 / 2),\n  n4dd = n4d + (n4 / 4),\n  n4ddd = n4dd + (n4 / 8),\n  n2 = 0.5,\n  n2d = n2 + (n2 / 2),\n  n2dd = n2d + (n2 / 4),\n  n2ddd = n2dd + (n2 / 8),\n  n1 = 1,\n  n1d = n1 + (n1 / 2),\n  n1dd = n1d + (n1 / 4),\n  n1ddd = n1dd + (n1 / 8 )\n}\n\nconst ValueMap = new Map<number, number>([\n  [1, NoteValues.n1],\n  [0.5, NoteValues.n2],\n  [0.25, NoteValues.n4],\n  [0.125, NoteValues.n8],\n  [0.0625, NoteValues.n16],\n  [0.03125, NoteValues.n32],\n]);\n\nfunction GetLargestValues(duration: number): number[] {\n  let remainingDiff = duration;\n  let values: number[] = [];\n  const divByStdVal = duration % NoteValues.n32 === 0;\n  if (!divByStdVal) {\n    console.error(\"Not divisible by standard value, not implemented\");\n  }\n  // check if the duration matches a standard value perfectly\n  if (ValueMap.has(duration)) {\n    values.push(duration);\n    remainingDiff -= duration;\n    if (remainingDiff !== 0) { console.error(\"HUH?\"); }\n  }\n  while (remainingDiff > 0) {\n    for (let [key, val] of ValueMap) {\n      if (ValueMap.get(key) <= remainingDiff) {\n        values.push(ValueMap.get(key));\n        remainingDiff -= ValueMap.get(key);\n      }\n    }\n    // Emergency exit\n    if (remainingDiff < NoteValues.n32) {\n      remainingDiff = 0;\n    }\n  }\n\n  return values;\n}\n\nexport { NoteValues, GetLargestValues }\n","import { Camera } from \"../Core/Camera.js\";\nimport { Division, Measure } from \"../Core/Measure.js\";\nimport { Note } from \"../Core/Note.js\";\nimport { NoteValues } from \"../Core/Values.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport {\n  NoteHeads,\n  RenderScaledNote,\n  RenderSymbol,\n  TupletNumbers,\n  stdFontSize,\n} from \"./MusicFont.Renderer.js\";\n\nenum StemDirection {\n  Up,\n  Down,\n}\n\nenum BeamDirection {\n  UpMax,\n  UpDynamic,\n  DownMax,\n  DownDynamic,\n  Flat,\n}\n\nconst crotchetRest =\n  \"c-.2863.1212-.4577.5392-.326.8318.0397.0418.4556.5392.8736 1.0868.9551 1.0764 1.1182 1.3313 1.3292 1.8288.8339 1.7054.3762 3.877-1.0847 5.2501-.1233.163-.6625.6186-1.1683.9948-1.4525 1.2498-2.1214 1.9604-2.368 2.5874-.0899.1651-.0899.3281-.0899.581-.0397.5789 0 .6291 1.7159 2.6209 2.3262 2.7922 3.9919 4.7506 4.1215 4.8739l.1233.1212-.163-.0815c-2.2948-.9551-4.8739-1.4128-5.7475-.9948-.2947.1212-.4661.2926-.5873.5789-.3365.7106-.2466 1.7556.2529 3.2897.4556 1.3794 1.371 3.2082 2.2844 4.5813.3762.5873 1.0868 1.5006 1.1683 1.5424.1233.1233.2947.0815.4159 0 .1233-.163.1233-.2947-.1212-.5789-.8736-1.2498-1.2895-3.8372-.7921-5.2104.2027-.6186.4577-.9551.9133-1.1662 1.208-.5392 3.879.1296 4.9972 1.2477.0815.0836.2529.255.3344.2947.2947.1233.7106-.0397.8339-.3344.1714-.2947.0815-.4974-.2947-.9551-.7022-.8339-2.8257-3.3315-3.1183-3.7077-.7524-.8736-1.0868-1.7054-1.1683-2.7504-.0397-1.3313.4974-2.7421 1.5027-3.6659.1212-.163.6604-.6207 1.16-.9948 1.5424-1.2916 2.1715-2.0001 2.416-2.671.1714-.5392.0899-1.0366-.2863-1.4943-.1296-.1212-1.5842-1.9186-3.2897-3.9585-2.3345-2.7442-3.1684-3.7474-3.2897-3.7892-.1714-.0397-.3762-.0397-.5476.0418z\";\nconst quaverRest =\n  \"c-.884.1666-1.5606.7769-1.8666 1.6201-.0663.272-.0663.3383-.0663.7106 0 .5117.0323.7837.272 1.1883.3383.6783 1.0489 1.2223 1.8598 1.4212.85.2397 2.2712.034 3.8981-.5049l.4046-.1394-1.9992 5.525-1.9652 5.5182c0 0 .0663.034.1734.1071.1989.1326.5372.2329.7769.2329.4046 0 .9163-.2329.9826-.4386 0-.0663.9486-3.2878 2.0978-7.1128l2.0315-7.0125-.0663-.0986c-.1649-.2057-.5032-.272-.7106-.1071-.0663.0663-.1717.2057-.238.306-.306.5117-1.0829 1.4212-1.4875 1.7595-.3723.306-.578.3383-.9163.2057-.306-.1666-.4063-.3383-.612-1.2546-.1989-.9095-.4369-1.3226-.9486-1.6609-.4726-.3043-1.0829-.4046-1.6201-.2652z\";\nconst semiQuaverRest =\n  \"c-.6228.1176-1.1016.5484-1.3116 1.1436-.0516.192-.0516.2388-.0516.5016 0 .3612.0228.5532.192.8388.2388.4788.7404.8628 1.3176 1.0032.5952.1692 1.5504.0468 2.7-.3324.168-.0708.3084-.1224.3084-.0984 0 .0276-1.0728 3.516-1.1196 3.6372-.1224.3096-.5304.882-.8868 1.242-.3324.3336-.5016.408-.7632.2868-.216-.1176-.2868-.24-.432-.8868-.1212-.4776-.2148-.7404-.4068-.9276-.5016-.5532-1.3644-.624-2.0304-.192-.3144.2148-.5532.5484-.6936.9096-.0516.1872-.0516.2388-.0516.5004 0 .3564.0276.5496.192.8352.2388.4776.7404.8628 1.3176 1.0032.2628.0744.9324.0744 1.3872 0 .3792-.0708.834-.1884 1.2888-.3336.192-.0696.3612-.1164.3612-.0936 0 0-2.3436 7.6272-2.3904 7.7436 0 .024.1872.1692.3792.216.192.0756.3852.0756.5772 0 .1872-.0468.3792-.1644.3792-.2388.024-.024.9804-3.6324 2.1516-8.0112l2.1288-7.9596-.0468-.0696c-.0948-.1452-.2868-.1692-.4548-.0984-.0948.0468-.0948.0468-.3804.4776-.2388.384-.576.7872-.768.9792-.2628.216-.4032.2628-.6432.1692-.2148-.1176-.2904-.2388-.4308-.8856-.1452-.642-.3144-.9336-.6708-1.1724-.3324-.2148-.7632-.2856-1.1484-.1872z\";\nconst demiSemiQuaverRest =\n  \"m0 0c-.516.101-.918.461-1.094.957-.043.16-.043.199-.043.418 0 .218 0 .3.043.418.137.441.418.777.856.976.297.16.437.18.855.18.52 0 .957-.078 1.657-.297.179-.063.316-.102.316-.102.019 0-.16.7-.399 1.536-.296 1.175-.417 1.554-.457 1.671-.16.301-.5.758-.718.957-.2.18-.317.219-.516.141-.18-.098-.242-.199-.359-.738-.102-.399-.18-.617-.34-.778-.418-.457-1.137-.515-1.692-.156-.261.176-.46.457-.578.754-.043.16-.043.199-.043.418 0 .301.024.461.161.699.199.399.617.719 1.097.836.219.063.778.063 1.156 0 .317-.058.696-.16 1.075-.277.179-.059.32-.102.32-.102 0 .02-.797 3.051-.84 3.11-.156.34-.476.758-.715.996-.258.258-.398.301-.617.219-.18-.098-.242-.2-.359-.739-.102-.398-.18-.617-.34-.773-.418-.461-1.137-.52-1.692-.16-.261.179-.46.457-.578.758-.043.156-.043.199-.043.417 0 .219 0 .297.043.418.137.438.418.778.856.977.32.16.437.18.875.18.32 0 .422 0 .679-.043.36-.059.739-.176 1.157-.297l.258-.102v.063c-.02.078-1.696 6.375-1.715 6.414-.02.082.34.238.558.238.219 0 .539-.137.559-.238.019-.02.976-4.145 2.172-9.164 2.133-9.086 2.133-9.106 2.094-9.168-.063-.078-.161-.117-.282-.117-.14.019-.199.078-.34.316-.277.481-.597.898-.773 1.039-.121.078-.223.078-.379.02-.18-.102-.242-.2-.359-.739-.121-.539-.262-.777-.559-.976-.277-.18-.637-.238-.957-.16z\";\nconst noteXBuffer = 9;\n\nfunction RenderNote(\n  note: Note,\n  renderProps: RenderProperties,\n  Bounds: Bounds,\n  selected: boolean,\n  flipNote: boolean,\n  stemDir: StemDirection,\n  theme: Theme,\n  colour: string = \"black\",\n): void {\n  // TODO: This will be determined by key signature\n  // if (note.Accidental !== 0) {\n  //   RenderAccidental(renderProps, note, note.Accidental, theme);\n  // }\n  let { x, y, width, height } = Bounds;\n  const { canvas, context, camera } = renderProps;\n  // TODO: Move this offset somewhere else to be constant\n  y = y + 3;\n  //\n  colour = note.Editable ? theme.NoteElements : theme.UneditableColour;\n  colour = selected ? theme.SelectColour : colour;\n  const noteScale = note.Grace ? Math.floor(stdFontSize * 0.6) : stdFontSize;\n  switch (note.Duration) {\n    case 0.125:\n    case 0.25:\n      //   noteString = posString + noteHead;\n      if (note.Opacity < 1.0) {\n        note.Opacity += 0.01;\n      }\n      RenderScaledNote(\n        note,\n        renderProps,\n        NoteHeads.crotchet,\n        x,\n        y,\n        theme,\n        selected,\n        noteScale,\n      );\n      break;\n    case 0.5:\n      RenderScaledNote(\n        note,\n        renderProps,\n        NoteHeads.minim,\n        x,\n        y,\n        theme,\n        selected,\n        noteScale,\n      );\n      break;\n    case 1:\n      RenderScaledNote(\n        note,\n        renderProps,\n        NoteHeads.whole,\n        x - 2.5,\n        y,\n        theme,\n        selected,\n        noteScale,\n      );\n      break;\n    default:\n      RenderScaledNote(\n        note,\n        renderProps,\n        NoteHeads.crotchet,\n        x,\n        y,\n        theme,\n        selected,\n        noteScale,\n      );\n  }\n  context.fillStyle = theme.NoteElements;\n  if (selected) {\n    context.fillStyle = theme.SelectColour;\n  }\n\n  let debug = false;\n  if (debug) {\n    context.fillStyle = \"rgba(200, 0, 0, 0.5)\";\n    context.fillRect(x + camera.x, y + camera.y - 5, width, height);\n    context.fillStyle = theme.NoteElements;\n  }\n}\n\nfunction RenderDots(\n  renderProps: RenderProperties,\n  note: Note,\n  dotXStart: number,\n): void {\n  const { canvas, context, camera } = renderProps;\n\n  let dotCount = 0;\n  //doing two separate switches for now\n  switch (note.Duration) {\n    case NoteValues.n32d:\n    case NoteValues.n16d:\n    case NoteValues.n8d:\n    case NoteValues.n4d:\n    case NoteValues.n2d:\n    case NoteValues.n1d:\n      dotCount = 1;\n      break;\n    case NoteValues.n32dd:\n    case NoteValues.n16dd:\n    case NoteValues.n8dd:\n    case NoteValues.n4dd:\n    case NoteValues.n2dd:\n    case NoteValues.n1dd:\n      dotCount = 2;\n      break;\n    case NoteValues.n32ddd:\n    case NoteValues.n16ddd:\n    case NoteValues.n8ddd:\n    case NoteValues.n4ddd:\n    case NoteValues.n2ddd:\n    case NoteValues.n1ddd:\n      dotCount = 3;\n      break;\n    default:\n      dotCount = 0;\n  }\n  const circle = \"a1.485 1.485 90 10-2.97 0 1.485 1.485 90 102.97 0\";\n  for (let d = 0; d < dotCount; d++) {\n    let lineY = note.Line * 5;\n    if (note.Line % 2 !== 0) {\n      lineY = (note.Line - 1) * 5;\n    }\n    const cpath =\n      `m${dotXStart + camera.x + 17 + d * 5} \n      ${lineY + camera.y}` + circle;\n    context.fill(new Path2D(cpath));\n  }\n}\n\nfunction RenderRest(\n  ctx: CanvasRenderingContext2D,\n  div: Division,\n  cam: Camera,\n  note: Note,\n  msr: Measure,\n  theme: Theme,\n): void {\n  if (!note) {\n    return;\n  }\n  ctx.fillStyle = theme.NoteElements;\n\n  let x = div.Bounds.x + cam.x + noteXBuffer;\n  //    let y = div.Bounds.y + cam.y + ((note.Line - 3 - msr.SALineTop) * 5);\n  let y = msr.GetNotePositionOnLine(note.Line + 2.5, note.Staff) + cam.y;\n  let path = `m${x} ${y}`;\n  ctx.fillStyle = note.Selected ? theme.SelectColour : theme.NoteElements;\n\n  if (div.Duration === 0.3125) {\n    y += 7;\n    path = `m ${x} ${y}` + demiSemiQuaverRest;\n    ctx.fill(new Path2D(path));\n  } else if (div.Duration === 0.0625) {\n    y += 9;\n    path = `m ${x} ${y}` + semiQuaverRest;\n    ctx.fill(new Path2D(path));\n  } else if (div.Duration > 0.0625 && div.Duration <= 0.125) {\n    y = y + 10;\n    path = `m${x} ${y}` + quaverRest;\n    ctx.fill(new Path2D(path));\n  } else if (div.Duration === 0.25) {\n    path = path + crotchetRest;\n    ctx.fill(new Path2D(path));\n  } else if (div.Duration === 0.5) {\n    y = msr.GetNotePositionOnLine(note.Line + 4.5, note.Staff) + cam.y;\n    ctx.fillRect(x, y, 14, 6);\n  } else if (div.Duration === 1) {\n    y = msr.GetNotePositionOnLine(note.Line + 3.6, note.Staff) + cam.y;\n    x = div.Bounds.x + cam.x + div.Bounds.width / 2 - 7;\n    ctx.fillRect(x, y, 14, 6);\n  }\n}\n\nfunction RenderTupletAnnotation(\n  renderProps: RenderProperties,\n  coords: { x1: number; y1: number; x2: number; y2: number },\n  count: string,\n  theme: Theme,\n): void {\n  const { canvas, context, camera } = renderProps;\n\n  const width = coords.x2 - coords.x1;\n\n  // TODO: Add this to theme maybe\n  context.fillStyle = \"#75757\";\n  context.fillRect(coords.x1 + camera.x, coords.y1 - 12 + camera.y, 1, 6);\n  context.fillRect(\n    coords.x1 + camera.x,\n    coords.y1 - 12 + camera.y,\n    width / 2 - 14,\n    1,\n  );\n\n  context.fillRect(\n    coords.x1 + width + camera.x,\n    coords.y1 - 12 + camera.y,\n    1,\n    6,\n  );\n  context.fillRect(\n    coords.x1 + width / 2 + 14 + camera.x,\n    coords.y1 - 12 + camera.y,\n    width / 2 - 14,\n    1,\n  );\n\n  RenderSymbol(\n    renderProps,\n    GetTupletGlyph(count),\n    coords.x1 + width / 2 - 7,\n    coords.y1 - 5,\n    theme,\n    false,\n  );\n}\n\nfunction GetTupletGlyph(count: string): TupletNumbers {\n  switch (count) {\n    case \"0\":\n      return TupletNumbers.Zero;\n    case \"1\":\n      return TupletNumbers.One;\n    case \"2\":\n      return TupletNumbers.Two;\n    case \"3\":\n      return TupletNumbers.Three;\n    case \"4\":\n      return TupletNumbers.Four;\n    case \"5\":\n      return TupletNumbers.Five;\n    case \"6\":\n      return TupletNumbers.Six;\n    case \"7\":\n      return TupletNumbers.Seven;\n    case \"8\":\n      return TupletNumbers.Eight;\n    case \"9\":\n      return TupletNumbers.Nine;\n    default:\n      return TupletNumbers.Three;\n  }\n}\n\nfunction RenderTuplets(\n  renderProps: RenderProperties,\n  divisions: Division[],\n  notes: Note[],\n  staff: number,\n  msr: Measure,\n  theme: Theme,\n): void {\n  const { canvas, context, camera } = renderProps;\n  const divs = divisions.filter((d) => d.Staff === staff);\n  divs.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n  let foundTuplet = false;\n  let tupleX = 0;\n  let tupleXEnd = 0;\n  let tupleY = 0;\n  let tupleCount = 0;\n\n  divs.forEach((div: Division, i: number) => {\n    const notesInDiv = notes.filter(\n      (n) => n.Beat === div.Beat && n.Staff === staff,\n    );\n    let nArray = [...notesInDiv];\n    const stemDir = DetermineStemDirection([notesInDiv], [div]);\n    if (!notesInDiv[0].Tuple) {\n      if (foundTuplet) {\n        foundTuplet = false;\n        RenderTupletAnnotation(\n          renderProps,\n          { x1: tupleX, y1: tupleY, x2: tupleXEnd, y2: tupleY },\n          tupleCount.toString(),\n          theme,\n        );\n        tupleX = 0;\n        tupleXEnd = 0;\n        tupleY = 0;\n        tupleCount = 0;\n      }\n      return;\n    }\n    if (!foundTuplet) {\n      foundTuplet = true;\n      tupleX = div.Bounds.x + 9;\n      tupleCount = notesInDiv[0].TupleDetails.Count;\n      tupleY = div.Bounds.y;\n      tupleXEnd = div.Bounds.x + 19;\n    } else {\n      tupleXEnd = div.Bounds.x + 19;\n    }\n  });\n}\n\nfunction RenderTies(\n  renderProps: RenderProperties,\n  divisions: Division[],\n  notes: Note[],\n  staff: number,\n  msr: Measure,\n): void {\n  const { canvas, context, camera } = renderProps;\n  const divs = divisions.filter((d) => d.Staff === staff);\n  divs.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n  divs.forEach((div: Division, i: number) => {\n    if (i === divs.length - 1) {\n      return;\n    }\n    const divNotes = notes.filter((note: Note) => note.Beat === div.Beat);\n    divNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n    const nextDivNotes = notes.filter(\n      (note: Note) => note.Beat === divs[i + 1].Beat,\n    );\n    nextDivNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n\n    divNotes.forEach((note) => {\n      if (\n        !note.Tied ||\n        note.Rest ||\n        (note.Tied &&\n          note.Beat + note.Duration * msr.TimeSignature.bottom > note.TiedEnd)\n      ) {\n        return;\n      }\n      const tiedTo = nextDivNotes.find(\n        (n) => n.Line === note.Line && n.Tied && n.Beat <= n.TiedEnd,\n      );\n      if (tiedTo === undefined) {\n        console.error(\"No tied note found: \", note);\n        console.log(\"note: \", note);\n        console.log(nextDivNotes);\n        return;\n      }\n      const nextNote = tiedTo;\n      const x1 = div.Bounds.x + noteXBuffer + camera.x + 3;\n      const y1 =\n        msr.GetNotePositionOnLine(note.Line, note.Staff) + camera.y - 4;\n      const x2 = divs[i + 1].Bounds.x + noteXBuffer + camera.x + 3;\n      const y2 =\n        msr.GetNotePositionOnLine(nextNote.Line, note.Staff) + camera.y;\n      const midPointX = x2 - (x2 - x1) / 2;\n      const distanceX = x2 - x1;\n      const curveOffset = note.Line < 15 ? -15 : 15;\n      const curveStartOffset = note.Line < 15 ? -8 : 8;\n      // TODO: This is temporary, will get more complicated if we do things like\n      // collision avoidance probably\n      const curveHighPoint = note.Line < 15 ? -20 : 20;\n      const curveLowPoint = note.Line < 15 ? -17 : 17;\n      // TODO: Testing slurs/ties as svg path\n      const slurPath = `\n      m ${x1} ${y1} q ${distanceX / 2} ${curveHighPoint} ${distanceX} 0 q -${distanceX / 2} ${curveLowPoint} -${distanceX} 0 z\n      //      `;\n      context.fill(new Path2D(slurPath));\n    });\n  });\n}\n\n// This will replace some parts of renderStemRevise eventually\nfunction DetermineStemDirection(\n  notes: Array<Note[]>,\n  divisions: Division[],\n): StemDirection {\n  let dir = StemDirection.Up;\n  // TODO: Not sure we will actually need this, seems like it shouldn't come\n  // out of order in the first place.\n  notes.sort((a: Note[], b: Note[]) => {\n    return a[0].Beat - b[0].Beat;\n  });\n\n  let match = true;\n  divisions.forEach((div: Division, i: number) => {\n    if (div.Beat !== notes[i][0].Beat) {\n      console.error(\"Index: \", i);\n      console.error(\"Match failed on div: \", div);\n      console.error(\"Match failed on beat: \", div.Beat);\n      console.error(\"Match fail note: \", notes[i][0]);\n      match = false;\n    }\n  });\n\n  if (!match) {\n    console.error(\"Divisions and note array do not match\");\n    return;\n  }\n\n  const middleLine = 15;\n  let highestLine: number = Number.MAX_SAFE_INTEGER;\n  let lowestLine: number = Number.MIN_SAFE_INTEGER;\n\n  notes.forEach((na: Note[]) => {\n    na.forEach((n: Note) => {\n      if (n.Line < highestLine) {\n        highestLine = n.Line;\n      }\n      if (n.Line > lowestLine) {\n        lowestLine = n.Line;\n      }\n    });\n  });\n\n  if (middleLine - highestLine < lowestLine - middleLine) {\n    dir = StemDirection.Up;\n  } else {\n    dir = StemDirection.Down;\n  }\n\n  return dir;\n}\n\nfunction renderLedgerLines(\n  notes: Note[],\n  division: Division,\n  renderProps: RenderProperties,\n  staff: number,\n  msr: Measure,\n  theme: Theme,\n  colour?: string,\n): void {\n  const { canvas, context, camera } = renderProps;\n  // TODO: This code is repeated (search for dynNoteXBuffer)\n  // Could be a good idea to make it a function\n  let dynNoteXBuffer = noteXBuffer;\n  const divNotes = msr.Voices[msr.ActiveVoice].Notes.filter(\n    (n) => n.Beat === division.Beat && n.Staff === division.Staff,\n  );\n  const numOfAcc = divNotes.filter((n) => n.Accidental !== 0).length;\n  if (numOfAcc > 0) {\n    dynNoteXBuffer += noteXBuffer * numOfAcc - 1;\n  }\n\n  const ledgerX = division.Bounds.x + dynNoteXBuffer - 6 + camera.x;\n\n  //const ledgerString = `m ${x - 6} ${y - 5} h 22 v 2 h-20 v-2 Z`;\n  const ledgerString = `h 22 v 1.5 h-20 v-1.5 Z`;\n\n  const bdNotes = notes.filter(\n    (note: Note) =>\n      note.Beat === division.Beat && note.Staff === division.Staff,\n  );\n  const midLine = 15;\n  if (bdNotes.length === 0) {\n    return;\n  }\n  bdNotes.sort((a: Note, b: Note) => {\n    return a.Line - b.Line;\n  });\n\n  const highestLine = bdNotes[0];\n  const lowestLine = bdNotes[bdNotes.length - 1];\n  context.fillStyle = theme.NoteElements;\n\n  for (let l = midLine - 6; l >= highestLine.Line; l -= 2) {\n    const ledgerY = msr.GetNotePositionOnLine(l, staff) + camera.y + 2.5;\n    const path = `m ${ledgerX} ${ledgerY}` + ledgerString;\n    context.fill(new Path2D(path));\n  }\n  for (let h = midLine + 6; h <= lowestLine.Line; h += 2) {\n    const ledgerY = msr.GetNotePositionOnLine(h, staff) + camera.y + 2.5;\n    const path = `m ${ledgerX} ${ledgerY}` + ledgerString;\n    context.fill(new Path2D(path));\n  }\n}\n\nexport {\n  RenderNote,\n  RenderRest,\n  renderLedgerLines,\n  RenderTies,\n  DetermineStemDirection,\n  RenderDots,\n  StemDirection,\n  BeamDirection,\n  RenderTuplets,\n};\n","const MIDI_START = 21;\nconst MIDI_END = 127;\n\nconst A4Midi: number = 69;\nconst A4Hz: number = 440;\n\n//const NoteNames = [\n//  \"C\",\n//  \"C#\",\n//  \"D\",\n//  \"D#\",\n//  \"E\",\n//  \"F\",\n//  \"F#\",\n//  \"G\",\n//  \"G#\",\n//  \"A\",\n//  \"A#\",\n//  \"B\"\n//];\n\nconst NoteNames = [\n  \"A\",\n  \"A#\",\n  \"B\",\n  \"C\",\n  \"C#\",\n  \"D\",\n  \"D#\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"G\",\n  \"G#\",\n];\n\n// Clef type to line number of A4 (440hz)\nconst ClefPitchRef: Map<string, number> = new Map<string, number>([\n  [\"treble\", 16],\n  [\"bass\", 4],\n]);\n\n// midiNumber = the integer assigned to the note value, A4 = 69 = 440hz\nfunction calcPitch(midiNumber: number): number {\n  return (\n    Math.floor(A4Hz * Math.pow(2, (midiNumber - A4Midi) / 12) * 1000) / 1000\n  );\n}\n\nfunction ReturnLineFromMidi(\n  clef: string,\n  midi: number,\n  staff: number = 0,\n): number {\n  let onNote = 0; // A note entry in NoteNames array\n  let a4Midi = 69;\n  let accidental = 0;\n  const a4Line = staff === 0 ? 16 : 34;\n  let line = a4Line;\n  if (midi === a4Midi) {\n    return a4Line;\n  }\n  if (midi > a4Midi) {\n    for (let i = a4Midi; i < midi; i++) {\n      if (NoteNames[onNote] === \"C\" || NoteNames[onNote] === \"F\") {\n        line -= 0;\n        if (onNote === 0) {\n          onNote = NoteNames.length - 1;\n        } else {\n          onNote -= 1;\n        }\n      } else {\n        line -= 1;\n        onNote -= 1;\n      }\n    }\n  } else if (a4Midi > midi) {\n    for (let i = a4Midi; i > midi; i--) {\n      if (NoteNames[onNote] === \"B\" || NoteNames[onNote] === \"E\") {\n        line += 0;\n        if (onNote === NoteNames.length - 1) {\n          onNote = 0;\n        } else {\n          onNote += 1;\n        }\n      } else {\n        line += 1;\n        onNote += 1;\n      }\n    }\n  }\n  return line;\n}\n\nfunction ReturnMidiNumber(\n  clef: string,\n  line: number,\n  acc: number = 0,\n  staff: number = 0,\n): number {\n  let onNote = 0; // A entry in NoteNames array\n  let a4line = ClefPitchRef.get(clef);\n  let midiNumber = 69;\n  let midiNote = midiNumber;\n  if (line === a4line) {\n    return midiNumber + acc;\n  } else if (line > a4line) {\n    for (let i = a4line; i < line; i++) {\n      if (NoteNames[onNote] === \"C\" || NoteNames[onNote] === \"F\") {\n        midiNote -= 1;\n        onNote -= 1;\n      } else {\n        if (onNote === 0) {\n          onNote = NoteNames.length - 2;\n        } else {\n          onNote -= 2;\n        }\n        midiNote -= 2;\n      }\n    }\n  } else {\n    for (let i = a4line; i > line; i--) {\n      if (NoteNames[onNote] === \"B\" || NoteNames[onNote] === \"E\") {\n        midiNote += 1;\n        if (onNote === NoteNames.length - 1) {\n          onNote = 0;\n        } else {\n          onNote += 1;\n        }\n      } else {\n        midiNote += 2;\n        onNote += 2;\n      }\n    }\n  }\n\n  midiNote += acc;\n\n  return midiNote;\n}\n\nfunction ReturnFrequency(clef: string, line: number): number {\n  const a4line = ClefPitchRef.get(clef);\n  let diff = 0;\n  let midiNumber = 69;\n  if (line === a4line) {\n    return A4Hz;\n  }\n\n  if (line > a4line) {\n    diff = line - a4line;\n    midiNumber += diff;\n  } else {\n    if (line <= 0) {\n      diff = a4line - line;\n      midiNumber -= diff;\n    } else {\n      diff = a4line + -line;\n      midiNumber -= diff;\n    }\n  }\n\n  return calcPitch(midiNumber);\n}\n\ntype MappedMidi = {\n  NoteString: string;\n  Frequency: number;\n  // only for treble clef atm\n  Line: number;\n  Accidental: number;\n};\n\nfunction nextLineCounter(counter: number): number {\n  let next = counter + 1;\n  if (counter + 1 > 11) {\n    next = 0;\n  }\n  return next;\n}\n\nfunction GeneratePitchMap(): Map<number, MappedMidi> {\n  let map = new Map<string, number>();\n  let midiMap = new Map<number, MappedMidi>();\n  let noteNameCount = 0;\n  let noteNumberCount = 0;\n  let lineNum = 16 + 30 - 1;\n  let lineCounter = 0;\n  let lineMax = 11;\n  for (let n = MIDI_START; n <= MIDI_END; n++) {\n    if (noteNameCount >= NoteNames.length) {\n      noteNameCount = 0;\n      noteNumberCount++;\n    }\n    lineNum = [0, 2, 3, 5, 7, 8, 10].includes(lineCounter)\n      ? lineNum - 1\n      : lineNum;\n    map.set(\n      (NoteNames[noteNameCount] + noteNumberCount).toString(),\n      calcPitch(n),\n    );\n    midiMap.set(n, {\n      NoteString: (NoteNames[noteNameCount] + noteNumberCount).toString(),\n      Frequency: calcPitch(n),\n      Line: lineNum,\n      Accidental: NoteNames[noteNameCount].includes(\"#\") ? 1 : 0,\n    });\n    noteNameCount++;\n\n    if (lineCounter >= lineMax) {\n      lineCounter = 0;\n    } else {\n      lineCounter++;\n    }\n  }\n\n  return midiMap;\n}\n\nfunction FromPitchMap(\n  midiNote: number,\n  map: Map<number, MappedMidi>,\n  clef: string,\n): MappedMidi {\n  const mapped: MappedMidi = map.get(midiNote);\n\n  let alteredNote: MappedMidi = {\n    NoteString: mapped.NoteString,\n    Line: mapped.Line,\n    Frequency: mapped.Frequency,\n    Accidental: mapped.Accidental,\n  };\n\n  // if the clef is not a treble clef we need to alter the line returned by a\n  // set amount\n  if (clef === \"bass\") {\n    alteredNote.Line -= 12;\n  }\n  return alteredNote;\n}\n\nexport {\n  GeneratePitchMap,\n  ReturnMidiNumber,\n  ReturnLineFromMidi,\n  MappedMidi,\n  FromPitchMap,\n};\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { ReturnMidiNumber } from \"../Workers/Pitcher.js\";\nimport { Camera } from \"./Camera.js\";\n\ninterface TupleDetails {\n  StartBeat: number;\n  EndBeat: number;\n  Value: number; // Total tuple value, not value of individual note\n  Count: number; // Total tuple count (3 for triplet etc.)\n}\ninterface NoteProps {\n  Beat: number;\n  Duration: number;\n  Line: number;\n  Rest: boolean;\n  Tied: boolean;\n  Staff: number;\n  Tuple: boolean;\n  TupleDetails?: TupleDetails;\n  Clef: string;\n  Editable?: boolean;\n  Grace: boolean;\n}\n\nclass Note implements ISelectable {\n  Beat: number;\n  Duration: number;\n  Line: number;\n  Rest: boolean;\n  Tied: boolean;\n  Accidental: number;\n  ID: number;\n  SelType: SelectableTypes;\n  Clef: string;\n  Editable: boolean;\n  Grace: boolean;\n  OutOfBounds: boolean;\n\n  // TEST FOR ANIMATION:\n  Opacity: number;\n\n  TiedStart: number; // beat\n  TiedEnd: number; // beat\n\n  Bounds: Bounds;\n  Selected: boolean;\n\n  Staff: number;\n  // Staff Group will be if notes need to interact between staffs (beaming\n  // across staffs for example)\n  StaffGroup: number;\n\n  Tuple: boolean;\n  TupleDetails?: TupleDetails;\n\n  constructor(props: NoteProps) {\n    this.Beat = props.Beat;\n    this.Duration = props.Duration;\n    this.Line = props.Line;\n    this.Rest = props.Rest;\n    this.Tied = props.Tied;\n    this.Accidental = 0;\n    this.Staff = props.Staff;\n    this.Clef = props.Clef;\n    this.Grace = props.Grace;\n    // Out of bounds may happen when changing time signatures (4th beat in a 3/4 bar for example)\n    this.OutOfBounds = false;\n\n    this.Selected = false;\n    this.SelType = SelectableTypes.Note;\n    this.Bounds = new Bounds(0, 0, 0, 0);\n    this.Bounds.width = 12;\n    this.Bounds.height = 10;\n    this.Editable = props.Editable !== undefined ? props.Editable : true;\n    this.ID = -1;\n\n    this.Tuple = props.Tuple;\n    if (props.TupleDetails) {\n      this.TupleDetails = props.TupleDetails;\n    }\n    // note position is not based on bounds property\n    this.Opacity = 1.0;\n  }\n\n  SetBounds(bounds: Bounds): void {\n    this.Bounds = bounds;\n  }\n\n  SetID(id: number): void {\n    this.ID = id;\n  }\n\n  SetTiedStartEnd(s: number, e: number): void {\n    this.TiedStart = s;\n    this.TiedEnd = e;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n\n  GetMidiNumber(): number {\n    const line = this.Staff === 0 ? this.Line : this.Line - 1000;\n    return ReturnMidiNumber(this.Clef, line, this.Staff);\n  }\n}\n\nexport { Note, NoteProps, TupleDetails };\n","import { StemDirection } from \"../Renderers/Note.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { UpdateNoteBounds } from \"../Workers/NoteInput.js\";\nimport { Beam } from \"./Beam.js\";\nimport { Camera } from \"./Camera.js\";\nimport { GetNoteClefType } from \"./Clef.js\";\nimport { Measure } from \"./Measure.js\";\nimport { Note, NoteProps } from \"./Note.js\";\nimport {\n  GetStaffHeight,\n  GetStaffHeightUntil,\n  GetStaffMiddleLine,\n} from \"./Staff.js\";\nimport { Stem } from \"./Stem.js\";\nimport { GetLargestValues } from \"./Values.js\";\n\nenum SubdivisionType {\n  CLEF,\n  GRACE_NOTE,\n  NOTE,\n}\n\ntype Subdivision = {\n  Type: SubdivisionType;\n  Bounds: Bounds;\n};\n\ninterface Division {\n  Beat: number;\n  Duration: number;\n  Bounds: Bounds;\n  Staff: number;\n  StaffGroup: number;\n  Direction: StemDirection;\n  NoteXBuffer: number;\n  Subdivisions: Subdivision[];\n}\n\ninterface DivGroup {\n  Divisions: Division[];\n  Notes: Array<Note[]>;\n  CrossStaff: boolean;\n  Staff: number;\n  Beams: Beam[];\n  Stems: Stem[];\n  StemDir?: StemDirection;\n}\n\ninterface DivGroups {\n  DivGroups: DivGroup[];\n}\n\nconst DivisionMinWidth = 30;\nconst DivisionMaxWidth = 40;\n\nfunction CreateDivisions(\n  msr: Measure,\n  notes: Note[],\n  staff: number,\n  cam: Camera,\n): Division[] {\n  const divisions: Division[] = [];\n  let nextBeat = 0;\n  let runningValue = 0;\n\n  notes.sort((a: Note, b: Note) => {\n    return a.Beat - b.Beat;\n  });\n\n  if (notes.filter((n) => n.Staff === staff).length === 0) {\n    const restProps: NoteProps = {\n      Beat: 1,\n      Duration: 1,\n      Line: GetStaffMiddleLine(msr.Staves, staff),\n      Rest: true,\n      Tied: false,\n      Staff: staff,\n      Tuple: false,\n      Clef: staff === 0 ? \"treble\" : \"bass\",\n      Grace: false,\n    };\n    // TODO: Clef should not be determined by staff that makes no sense\n    msr.AddNote(new Note(restProps));\n  }\n  notes\n    .filter((n) => n.Staff === staff)\n    .forEach((n) => {\n      // TODO: This should be somewhere else but testing\n      if (n.Beat >= msr.TimeSignature.top + 1) {\n        n.OutOfBounds = true;\n      } else {\n        n.OutOfBounds = false;\n      }\n      if (\n        !divisions.find((div) => div.Beat === n.Beat && div.Staff === n.Staff)\n      ) {\n        divisions.push(CreateDivision(msr, n, staff, StemDirection.Up));\n        if (!n.Tuple) {\n          nextBeat = n.Beat + n.Duration * msr.TimeSignature.bottom;\n        } else {\n          nextBeat =\n            n.Beat +\n            (n.Duration / n.TupleDetails.Count) * msr.TimeSignature.bottom;\n        }\n        runningValue += n.Duration;\n      }\n    });\n  if (runningValue > 0 && nextBeat - 1 < msr.TimeSignature.bottom) {\n    GenerateMissingBeatDivisions(msr, divisions, staff);\n  }\n  GenerateMissingBeatDivisions(msr, divisions, staff);\n  divisions\n    .filter((div: Division) => div.Staff === staff)\n    .forEach((div: Division) => {\n      CreateSubdivisions(\n        div,\n        notes.filter((n: Note) => n.Beat === div.Beat),\n      );\n    });\n  UpdateNoteBounds(msr, staff);\n  return divisions;\n}\n\nfunction CreateDivision(\n  msr: Measure,\n  note: Note,\n  staff: number,\n  stemDir: StemDirection,\n): Division {\n  // clefs\n  // grace notes\n  // else\n  var div: Division = {\n    Beat: note.Beat,\n    Duration: note.Duration,\n    Bounds: CreateBeatBounds(msr, note.Beat, note.Duration, staff),\n    Staff: staff,\n    StaffGroup: note.StaffGroup,\n    Direction: stemDir,\n    NoteXBuffer: 0,\n    Subdivisions: [],\n  };\n\n  return div;\n}\n\nfunction CreateSubdivisions(div: Division, notes: Note[]): void {\n  div.Subdivisions = [];\n  notes.forEach((note) => {\n    if (\n      note.Grace &&\n      !div.Subdivisions.find(\n        (sd: Subdivision) => sd.Type === SubdivisionType.GRACE_NOTE,\n      )\n    ) {\n      const graceSubdiv: Subdivision = {\n        Type: SubdivisionType.GRACE_NOTE,\n        Bounds: new Bounds(div.Bounds.x, div.Bounds.y, 30, div.Bounds.height),\n      };\n\n      div.Subdivisions.push(graceSubdiv);\n    }\n  });\n  var xBuffer = 0;\n  div.Subdivisions.forEach((sd: Subdivision) => {\n    xBuffer += sd.Bounds.width;\n  });\n  const noteSubdiv: Subdivision = {\n    Type: SubdivisionType.NOTE,\n    Bounds: new Bounds(\n      div.Bounds.x + xBuffer,\n      div.Bounds.y,\n      div.Bounds.width - xBuffer,\n      div.Bounds.height,\n    ),\n  };\n\n  div.Subdivisions.push(noteSubdiv);\n  div.Subdivisions.sort((a: Subdivision, b: Subdivision) => {\n    return b.Type - a.Type;\n  });\n}\n\nfunction CreateBeatBounds(\n  msr: Measure,\n  beat: number,\n  duration: number,\n  staff: number,\n): Bounds {\n  // single height\n  const width = msr.Bounds.width * duration; // value will max at 1 (entire measure)\n  const height = GetStaffHeight(msr.Staves, staff);\n  const x =\n    msr.Bounds.x +\n    msr.XOffset +\n    ((beat - 1) / msr.TimeSignature.bottom) * msr.Bounds.width;\n  const y = msr.Bounds.y + GetStaffHeightUntil(msr.Staves, staff);\n  return new Bounds(x, y, width, height);\n}\n\nfunction PositionDivByBeat(msr: Measure, divisions: Division[]): void {\n  const s0divs = divisions.filter((d) => d.Staff === 0);\n  const s1divs = divisions.filter((d) => d.Staff === 1);\n  if (s1divs.length > s0divs.length) {\n    divisions.forEach((div: Division) => {\n      div.Bounds.x = 0;\n    });\n  } else {\n  }\n}\n\nfunction ResizeDivisions(\n  msr: Measure,\n  divisions: Division[],\n  staff: number,\n): void {\n  const divs = divisions.filter((d) => d.Staff === staff);\n  const s0divs = divisions.filter((d) => d.Staff === 0);\n  const s1divs = divisions.filter((d) => d.Staff === 1);\n  let divCount = s1divs.length > s0divs.length ? s1divs.length : s0divs.length;\n  const minWidth = DivisionMinWidth * divCount;\n  const space = msr.Bounds.width - minWidth;\n  const xBuffer = space / divCount;\n  divs.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n  divs.forEach((div: Division, i: number) => {\n    div.Bounds.width = div.Duration * msr.Bounds.width;\n    if (i > 0) {\n      const lastDivEnd = divs[i - 1].Bounds.x + divs[i - 1].Bounds.width;\n      if (lastDivEnd !== div.Bounds.x) {\n        div.Bounds.x = lastDivEnd;\n      }\n    }\n\n    if (i === 0 && divs.length === 1) {\n      div.Bounds.width = msr.Bounds.width;\n    }\n  });\n}\n\nfunction GenerateMissingBeatDivisions(\n  msr: Measure,\n  divisions: Division[],\n  staff: number,\n): void {\n  const sortedDivs = divisions.sort((divA: Division, divB: Division) => {\n    return divA.Beat - divB.Beat;\n  });\n  let startingBeat = 1; // always start at the beginning\n  const divisionsToAdd: Division[] = [];\n  sortedDivs\n    .filter((d) => d.Staff === staff)\n    .forEach((div: Division, i: number) => {\n      const notesOnDiv = msr.Voices[msr.ActiveVoice].Notes.filter(\n        (n) => n.Beat === div.Beat,\n      );\n      if (div.Beat === startingBeat) {\n        // there is a div for this beat, set the startingBeat to the next\n        // expected division\n        startingBeat = div.Beat + div.Duration * msr.TimeSignature.bottom;\n        if (notesOnDiv[0].Tuple) {\n          // TODO: This is not finished, currently skipping tuplet divisions\n          // But there may be cases where we need to generate missiong divisions\n          // within a tuplet group (maybe), and this will need to be revisited\n          startingBeat = notesOnDiv[0].TupleDetails.EndBeat;\n        }\n      } else if (div.Beat >= startingBeat) {\n        let val = (div.Beat - startingBeat) / msr.TimeSignature.bottom;\n        let newDivs = GetLargestValues(val);\n        let sBeat = startingBeat;\n        newDivs.sort();\n        newDivs.forEach((v) => {\n          divisionsToAdd.push({\n            Beat: sBeat,\n            Duration: v,\n            Bounds: CreateBeatBounds(msr, sBeat, v, div.Staff),\n            Staff: div.Staff,\n            StaffGroup: notesOnDiv[0].StaffGroup,\n            Direction: StemDirection.Up,\n            NoteXBuffer: 0,\n            Subdivisions: [],\n          });\n          sBeat += v * msr.TimeSignature.bottom;\n        });\n        startingBeat = div.Beat + div.Duration * msr.TimeSignature.bottom;\n      }\n    });\n\n  // Add divisions created above and then empty\n  divisions.push(...divisionsToAdd);\n  // add RESTS to division gaps\n  divisionsToAdd.forEach((div) => {\n    const notesOnBeat = msr.Voices[msr.ActiveVoice].Notes.find(\n      (n) => n.Beat === div.Beat,\n    );\n    if (notesOnBeat !== undefined) {\n      console.error(\"Note found in division gap\");\n    }\n    const clefType = GetNoteClefType(msr, div.Beat, staff);\n    const restProps: NoteProps = {\n      Beat: div.Beat,\n      Duration: div.Duration,\n      Line: GetStaffMiddleLine(msr.Staves, staff),\n      Rest: true,\n      Tied: false,\n      Staff: div.Staff,\n      Tuple: false,\n      Clef: clefType,\n      Grace: false,\n    };\n    msr.AddNote(new Note(restProps));\n  });\n\n  // check remaining measure for empty divisions\n  const msrDuration =\n    (msr.TimeSignature.top / msr.TimeSignature.bottom) *\n      msr.TimeSignature.bottom +\n    1;\n  let reSortedDivs = divisions.filter((div) => div.Staff === staff);\n  reSortedDivs = divisions.sort((divA: Division, divB: Division) => {\n    return divA.Beat - divB.Beat;\n  });\n  const lastDiv = reSortedDivs[reSortedDivs.length - 1];\n  const lastBeat = lastDiv.Beat + lastDiv.Duration * msr.TimeSignature.bottom;\n\n  const lastDivisionsToAdd = [];\n  const rem = msrDuration - lastBeat;\n  if (rem > 0) {\n    let val = rem / msr.TimeSignature.bottom;\n    let newDivs = GetLargestValues(val);\n    let sBeat = lastBeat;\n    newDivs.sort();\n    newDivs.forEach((v) => {\n      lastDivisionsToAdd.push({\n        Beat: sBeat,\n        Duration: v,\n        Bounds: CreateBeatBounds(msr, sBeat, v, lastDiv.Staff),\n        Staff: staff,\n      });\n      sBeat += v * msr.TimeSignature.bottom;\n    });\n  }\n  divisions.push(...lastDivisionsToAdd);\n  lastDivisionsToAdd.forEach((div) => {\n    const notesOnBeat = msr.Voices[msr.ActiveVoice].Notes.find(\n      (n) => n.Beat === div.Beat && n.Staff === div.Staff,\n    );\n    if (notesOnBeat !== undefined) {\n      console.error(\"Note found in division gap\");\n    }\n\n    const clefType = GetNoteClefType(msr, div.Beat, staff);\n    const restProps: NoteProps = {\n      Beat: div.Beat,\n      Duration: div.Duration,\n      Line: GetStaffMiddleLine(msr.Staves, staff),\n      Rest: true,\n      Tied: false,\n      Staff: div.Staff,\n      Tuple: false,\n      Clef: clefType,\n      Grace: false,\n    };\n    msr.AddNote(new Note(restProps));\n  });\n}\n\nfunction GetDivisionTotalWidth(divisions: Division[]): number {\n  let width = 0;\n  let staff0w = 0;\n  let staff1w = 0;\n  divisions\n    .filter((d) => d.Staff === 0)\n    .forEach((div) => {\n      staff0w += div.Bounds.width;\n    });\n  divisions\n    .filter((d) => d.Staff === 1)\n    .forEach((div) => {\n      staff1w += div.Bounds.width;\n    });\n\n  width = staff0w > staff1w ? staff0w : staff1w;\n\n  return width;\n}\n\nfunction GetDivisionGroups(msr: Measure, staff: number): DivGroup[] {\n  const divGroups: DivGroups = { DivGroups: [] };\n  let divs: Division[] = [];\n  let notes: Array<Note[]> = [];\n  let crossStaff: boolean = false;\n  // started creating a div group or not\n  let startFlag = false;\n\n  const mDivs = msr.Voices[msr.ActiveVoice].Divisions.filter(\n    (d) => d.Staff === staff || d.StaffGroup === staff,\n  ).sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n\n  // only looking for grace notes, eventually refactor below and only need one\n  // loop with functions/branching\n  mDivs.forEach((div: Division, i: number) => {\n    const divNotes = msr.Voices[msr.ActiveVoice].Notes.filter(\n      (n: Note) =>\n        n.Beat === div.Beat &&\n        (n.Staff === staff || n.StaffGroup === staff) &&\n        n.Grace,\n    );\n    if (divNotes.length > 0) {\n      divGroups.DivGroups.push({\n        Divisions: [div],\n        Notes: [divNotes],\n        CrossStaff: crossStaff,\n        Staff: staff,\n        Stems: [],\n        Beams: [],\n      });\n    }\n  });\n\n  mDivs.forEach((div: Division, i: number) => {\n    if (div.Staff !== staff) {\n      crossStaff = true;\n    }\n    const divNotes = msr.Voices[msr.ActiveVoice].Notes.filter(\n      (n) =>\n        n.Beat === div.Beat &&\n        (n.Staff === staff || n.StaffGroup === staff) &&\n        !n.Grace,\n    );\n    divNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n\n    const restBeat = IsRestOnBeat(div.Beat, divNotes, staff);\n\n    // this can definitely be cleaned up but it seems to\n    // work for now, add tests later and then refactor\n    if (restBeat && startFlag) {\n      divGroups.DivGroups.push({\n        Divisions: divs,\n        Notes: notes,\n        CrossStaff: crossStaff,\n        Staff: staff,\n        Stems: [],\n        Beams: [],\n      });\n      divs = [];\n      notes = [];\n      startFlag = false;\n    } else if (!restBeat) {\n      if (!startFlag) {\n        divs.push(div);\n        notes.push(divNotes);\n        if (div.Duration > 0.125) {\n          divGroups.DivGroups.push({\n            Divisions: divs,\n            Notes: notes,\n            CrossStaff: crossStaff,\n            Staff: staff,\n            Stems: [],\n            Beams: [],\n          });\n          divs = [];\n          notes = [];\n        } else {\n          startFlag = true;\n          if (\n            i ===\n            msr.Voices[msr.ActiveVoice].Divisions.filter(\n              (d) => d.Staff === staff || d.StaffGroup === staff,\n            ).length -\n              1\n          ) {\n            // end of measure\n            divGroups.DivGroups.push({\n              Divisions: divs,\n              Notes: notes,\n              CrossStaff: crossStaff,\n              Staff: staff,\n              Stems: [],\n              Beams: [],\n            });\n            divs = [];\n            notes = [];\n          }\n        }\n      } else {\n        if (div.Duration > 0.125) {\n          startFlag = false;\n          divGroups.DivGroups.push({\n            Divisions: divs,\n            Notes: notes,\n            CrossStaff: crossStaff,\n            Staff: staff,\n            Stems: [],\n            Beams: [],\n          });\n          divs = [];\n          notes = [];\n\n          divs.push(div);\n          notes.push(divNotes);\n          divGroups.DivGroups.push({\n            Divisions: divs,\n            Notes: notes,\n            CrossStaff: crossStaff,\n            Staff: staff,\n            Stems: [],\n            Beams: [],\n          });\n          divs = [];\n          notes = [];\n        } else {\n          // breakpoint check TODO: Actually implement this is prototype code\n          if (div.Beat === 3) {\n            divGroups.DivGroups.push({\n              Divisions: divs,\n              Notes: notes,\n              CrossStaff: crossStaff,\n              Staff: staff,\n              Stems: [],\n              Beams: [],\n            });\n            divs = [];\n            notes = [];\n          }\n          divs.push(div);\n          notes.push(divNotes);\n          if (\n            i ===\n            msr.Voices[msr.ActiveVoice].Divisions.filter(\n              (d) => d.Staff === staff || d.StaffGroup === staff,\n            ).length -\n              1\n          ) {\n            divGroups.DivGroups.push({\n              Divisions: divs,\n              Notes: notes,\n              CrossStaff: crossStaff,\n              Staff: staff,\n              Stems: [],\n              Beams: [],\n            });\n            divs = [];\n            notes = [];\n          }\n        }\n      }\n    }\n  });\n  return divGroups.DivGroups;\n}\n\nfunction IsRestOnBeat(beat: number, notes: Note[], staff: number): boolean {\n  const notesOnBeat = notes.filter(\n    (n) => n.Beat === beat && (n.Staff === staff || n.StaffGroup === staff),\n  );\n  var restFound = !notesOnBeat.find((n) => !n.Rest);\n  if (restFound === undefined) {\n    restFound = false;\n  }\n  //  if (restFound && notesOnBeat.length > 1) {\n  //    console.error(\"Rest found on beat with multiple notes, beat: \", beat);\n  //  }\n  return restFound;\n}\n\nexport {\n  Division,\n  CreateDivisions,\n  ResizeDivisions,\n  GetDivisionTotalWidth,\n  DivGroups,\n  DivGroup,\n  Subdivision,\n  SubdivisionType,\n  IsRestOnBeat,\n  GetDivisionGroups,\n  DivisionMinWidth,\n  DivisionMaxWidth,\n};\n","import { BeamDirection, StemDirection } from \"../Renderers/Note.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { Vector2 } from \"../Types/Vectors.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\nimport { DivGroup, Division } from \"./Division.js\";\nimport { Measure } from \"./Measure.js\";\nimport { Note } from \"./Note.js\";\nimport { NoteValues } from \"./Values.js\";\n\nfunction DetermineBeamDirection(\n  measure: Measure,\n  divGroup: DivGroup,\n  stemDir: StemDirection,\n): BeamDirection {\n  const divisions = divGroup.Divisions.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n\n  if (stemDir === StemDirection.Up) {\n    const firstDivTopLine = divGroup.Notes[0].sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    })[0].Line;\n    const lastDivTopLine = divGroup.Notes[divGroup.Notes.length - 1].sort(\n      (a: Note, b: Note) => {\n        return a.Line - b.Line;\n      },\n    )[0].Line;\n\n    if (firstDivTopLine === lastDivTopLine) {\n      return BeamDirection.Flat;\n    } else if (firstDivTopLine < lastDivTopLine) {\n      return BeamDirection.DownMax;\n    } else if (firstDivTopLine > lastDivTopLine) {\n      return BeamDirection.UpMax;\n    }\n  } else {\n    const firstDivBotLine = divGroup.Notes[0].sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    })[divGroup.Notes[0].length - 1].Line;\n    const lastDivBotLine = divGroup.Notes[divGroup.Notes.length - 1].sort(\n      (a: Note, b: Note) => {\n        return a.Line - b.Line;\n      },\n    )[divGroup.Notes[divGroup.Notes.length - 1].length - 1].Line;\n\n    // Flat beam direction\n    if (firstDivBotLine === lastDivBotLine) {\n      return BeamDirection.Flat;\n    } else if (firstDivBotLine < lastDivBotLine) {\n      return BeamDirection.UpMax;\n    } else if (firstDivBotLine > lastDivBotLine) {\n      return BeamDirection.DownMax;\n    }\n  }\n  return BeamDirection.Flat;\n}\n\nfunction GenerateBeams(\n  measure: Measure,\n  divGroup: DivGroup,\n  stemDir: StemDirection,\n): Beam {\n  // lines go top - bot in terms of value (0... 30 etc.)\n  let startTopLine: number,\n    endTopLine = Number.MIN_SAFE_INTEGER;\n  let startBotLine: number,\n    endBotLine = Number.MAX_SAFE_INTEGER;\n  const divisions = divGroup.Divisions.sort((a: Division, b: Division) => {\n    return a.Beat - b.Beat;\n  });\n  const staff = divisions[0].StaffGroup;\n  // assuming that divGroup.notes array is sorted by beat\n  startTopLine = divGroup.Notes[0].sort((a: Note, b: Note) => {\n    return a.Line - b.Line;\n  })[0].Line;\n  startBotLine = divGroup.Notes[0].sort((a: Note, b: Note) => {\n    return a.Line - b.Line;\n  })[divGroup.Notes[0].length - 1].Line;\n\n  endTopLine = divGroup.Notes[divGroup.Notes.length - 1].sort(\n    (a: Note, b: Note) => {\n      return a.Line - b.Line;\n    },\n  )[0].Line;\n  endBotLine = divGroup.Notes[divGroup.Notes.length - 1].sort(\n    (a: Note, b: Note) => {\n      return a.Line - b.Line;\n    },\n  )[divGroup.Notes[divGroup.Notes.length - 1].length - 1].Line;\n\n  // we'll figure this shit out\n  //  if (stemDir === StemDirection.Up) {}\n  //  19 = various buffers (x / note)\n  const beamStartX = divisions[0].Bounds.x + 19;\n  const beamStartY = measure.GetNotePositionOnLine(startTopLine, staff) - 35;\n\n  const beamEndX = divisions[divisions.length - 1].Bounds.x + 19;\n  const beamEndY = measure.GetNotePositionOnLine(endTopLine, staff) - 35;\n\n  const beam = new Beam(\n    new Bounds(beamStartX, beamStartY, beamEndX - beamStartX, 5),\n    { x: beamStartX, y: beamStartY },\n    { x: beamEndX, y: beamEndY },\n  );\n  return beam;\n}\n\nfunction GetBeamString(\n  beam: Beam,\n  cam: Camera,\n  stemDir: StemDirection,\n  no: number,\n): string {\n  const baseThickness = stemDir === StemDirection.Up ? -6 : 6;\n  const yBuffer = stemDir === StemDirection.Up ? 8 : -8;\n  const lineBuffer = yBuffer * no;\n  const svgLine = `M ${beam.StartPoint.x + cam.x + 1} ${beam.StartPoint.y + cam.y - baseThickness + lineBuffer}\n        L${beam.EndPoint.x + cam.x + 1} ${beam.EndPoint.y + cam.y - baseThickness + lineBuffer}\n        V${beam.EndPoint.y + cam.y + lineBuffer} \n        L${beam.StartPoint.x + cam.x + 1} ${beam.StartPoint.y + cam.y + lineBuffer} z `;\n  return svgLine;\n}\n\nclass Beam implements ISelectable {\n  ID: number;\n  Selected: boolean = false;\n  Bounds: Bounds;\n  SelType: SelectableTypes = SelectableTypes.Beam;\n  Editable: boolean = false;\n  Direction: string;\n  StartPoint: Vector2;\n  EndPoint: Vector2;\n  Count: number;\n  constructor(bounds: Bounds, start: Vector2, end: Vector2, count: number = 1) {\n    this.Bounds = bounds;\n    this.StartPoint = start;\n    this.EndPoint = end;\n    this.Count = count;\n    this.ID = 0;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n\n  Render(\n    context: CanvasRenderingContext2D,\n    cam: Camera,\n    count: number,\n    stemDir: StemDirection,\n    theme: Theme,\n  ): void {\n    context.fillStyle = theme.NoteElements;\n    if (this.Selected) {\n      context.fillStyle = theme.SelectColour;\n    }\n    const svgLine = GetBeamString(this, cam, stemDir, 0);\n    context.fill(new Path2D(svgLine));\n    for (let i = 1; i < this.Count; i++) {\n      context.fill(new Path2D(GetBeamString(this, cam, stemDir, i)));\n    }\n\n    //    this.RenderBounds(context, cam);\n  }\n\n  RenderBounds(context: CanvasRenderingContext2D, cam: Camera): void {\n    context.strokeStyle = \"green\";\n    context.strokeRect(\n      this.Bounds.x + cam.x,\n      this.Bounds.y + cam.y,\n      this.Bounds.width,\n      this.Bounds.height,\n    );\n    context.stroke();\n  }\n\n  static BeamCount(duration: number, tuplet: boolean = false): number {\n    let count = 0;\n    if (duration >= 0.25) {\n      return count;\n    }\n    if (duration >= NoteValues.n32 && duration < NoteValues.n16) {\n      count = 3;\n    } else if (duration >= NoteValues.n16 && duration < NoteValues.n8) {\n      count = 2;\n    } else {\n      count = 1;\n    }\n    // TODO: This is a band-aid fix, may not work for all durations/counts\n    if (tuplet) {\n      count -= 1;\n    }\n    return count;\n  }\n}\n\nexport { Beam, GenerateBeams, DetermineBeamDirection };\n","import { Beam } from \"../Core/Beam.js\";\nimport { DivGroup, Division } from \"../Core/Division.js\";\nimport { Measure } from \"../Core/Measure.js\";\nimport { Stem } from \"../Core/Stem.js\";\nimport {\n  DetermineStemDirection,\n  StemDirection,\n} from \"../Renderers/Note.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { Vector2 } from \"../Types/Vectors.js\";\n\nfunction CreateBeams(\n  divGroup: DivGroup,\n  stems: Stem[],\n  measure: Measure,\n): Beam[] {\n  let beams: Beam[] = [];\n  stems.sort((a: Stem, b: Stem) => a.Bounds.x - b.Bounds.x);\n\n  // Primary Beam (top/main)\n  const beamOne = new Beam(\n    new Bounds(\n      stems[0].Bounds.x,\n      stems[0].Bounds.y + stems[0].Bounds.height,\n      5,\n      5,\n    ),\n    { x: stems[0].Bounds.x, y: stems[0].Bounds.y + stems[0].Bounds.height },\n    {\n      x: stems[stems.length - 1].Bounds.x,\n      y:\n        stems[stems.length - 1].Bounds.y +\n        stems[stems.length - 1].Bounds.height,\n    },\n  );\n  beams.push(beamOne);\n\n  //for divGroup.Divisions\n\n  return beams;\n}\n\nfunction CreateBeamsRevise(\n  divGroup: DivGroup,\n  stems: Stem[],\n  tuplet: boolean,\n): Array<Beam> {\n  const beams: Array<Beam> = [];\n  let newBeam = true;\n  let tempBeam: Beam = null;\n  const stemDir = DetermineStemDirection(divGroup.Notes, divGroup.Divisions);\n  divGroup.Divisions.forEach((div: Division, i: number) => {\n    if (i > stems.length || stems.length == 0) {\n      return;\n    }\n    const startingStem: Stem = i == 0 ? stems[i] : stems[i - 1];\n    const stem: Stem = stems[i];\n    if (!newBeam) {\n      if (\n        Beam.BeamCount(div.Duration, tuplet) !== beams[beams.length - 1].Count\n      ) {\n        newBeam = true;\n      }\n    }\n    if (newBeam) {\n      const count = Beam.BeamCount(div.Duration, tuplet);\n      tempBeam = new Beam(\n        new Bounds(0, 0, 0, 0),\n        {\n          x: startingStem.Bounds.x,\n          y: startingStem.Bounds.y + startingStem.Bounds.height,\n        },\n        { x: stem.Bounds.x, y: stem.Bounds.y + stem.Bounds.height },\n        count,\n      );\n      beams.push(tempBeam);\n      newBeam = false;\n    } else {\n      tempBeam.EndPoint = {\n        x: stem.Bounds.x,\n        y: stem.Bounds.y + stem.Bounds.height,\n      };\n    }\n\n    // Updating beam bounds\n    tempBeam.Bounds.x = tempBeam.StartPoint.x + 1;\n    var beamGapBuffer = 0;\n    if (tempBeam.Count > 1) {\n      beamGapBuffer = 2 * (tempBeam.Count - 1);\n    }\n\n    tempBeam.Bounds.width = tempBeam.EndPoint.x - tempBeam.StartPoint.x;\n\n    if (stemDir == StemDirection.Up) {\n      if (tempBeam.StartPoint.y > tempBeam.EndPoint.y) {\n        tempBeam.Bounds.y = tempBeam.EndPoint.y;\n        tempBeam.Bounds.height =\n          tempBeam.StartPoint.y -\n          tempBeam.EndPoint.y +\n          6 * tempBeam.Count +\n          beamGapBuffer;\n      } else {\n        tempBeam.Bounds.y = tempBeam.StartPoint.y;\n        tempBeam.Bounds.height =\n          tempBeam.EndPoint.y -\n          tempBeam.StartPoint.y +\n          6 * tempBeam.Count +\n          beamGapBuffer;\n      }\n    } else if (stemDir === StemDirection.Down) {\n      if (tempBeam.StartPoint.y > tempBeam.EndPoint.y) {\n        tempBeam.Bounds.y =\n          tempBeam.EndPoint.y - 6 * tempBeam.Count - beamGapBuffer;\n        tempBeam.Bounds.height =\n          tempBeam.StartPoint.y -\n          tempBeam.EndPoint.y +\n          6 * tempBeam.Count +\n          beamGapBuffer;\n      } else {\n        tempBeam.Bounds.y =\n          tempBeam.StartPoint.y - 6 * tempBeam.Count - beamGapBuffer;\n        tempBeam.Bounds.height =\n          tempBeam.EndPoint.y -\n          tempBeam.StartPoint.y +\n          6 * tempBeam.Count +\n          beamGapBuffer;\n      }\n    }\n  });\n\n  return beams;\n}\n\nexport { CreateBeams, CreateBeamsRevise };\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { Camera } from \"./Camera.js\";\n\n// TODO: Finish this enum, replace keys in keysig map\nenum Key {\n  CMajAmin = \"CMaj/Amin\",\n  GMajEmin = \"GMaj/Emin\",\n  DMajBmin = \"DMaj/Bmin\",\n}\n\nconst KeySignatures: Map<string, string[]> = new Map<string, string[]>([\n  [\"CMaj/Amin\", []],\n\n  [\"GMaj/Emin\", [\"F#\"]],\n  [\"DMaj/Bmin\", [\"F#\", \"C#\"]],\n  [\"AMaj/F#min\", [\"F#\", \"C#\", \"G#\"]],\n  [\"EMaj/C#min\", [\"F#\", \"C#\", \"G#\", \"D#\"]],\n  [\"BMaj/G#min\", [\"F#\", \"C#\", \"G#\", \"D#\", \"A#\"]],\n  [\"F#Maj/D#min\", [\"F#\", \"C#\", \"G#\", \"D#\", \"A#\", \"E#\"]],\n  [\"C#Maj/A#min\", [\"F#\", \"C#\", \"G#\", \"D#\", \"A#\", \"E#\", \"B#\"]],\n\n  [\"FMaj/Dmin\", [\"Bb\"]],\n  [\"BbMaj/Gmin\", [\"Bb\", \"Eb\"]],\n  [\"EbMaj/Cmin\", [\"Bb\", \"Eb\", \"Ab\"]],\n  [\"AbMaj/Fmin\", [\"Bb\", \"Eb\", \"Ab\", \"Db\"]],\n  [\"DbMaj/Bbmin\", [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\"]],\n  [\"GbMaj/Ebmin\", [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\", \"Cb\"]],\n  [\"CbMaj/Abmin\", [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\", \"Cb\", \"Fb\"]],\n]);\n\ninterface KeySignature {\n  Name: string;\n  Accidentals: string[];\n}\n\nclass KeySig implements ISelectable {\n  ID: number;\n  Selected: boolean;\n  SelType: SelectableTypes = SelectableTypes.KeySig;\n  Bounds: Bounds;\n  Editable: boolean;\n  constructor() {\n    this.Bounds = new Bounds(0, 0, 0, 0);\n    this.Selected = false;\n    this.Editable = true;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n}\n\nexport { KeySignature, KeySignatures, KeySig };\n","import { Note } from '../Core/Note.js';\n\nconst ACC_OFFSET = 12;\n\n// TODO: Pass in measure/key signature to determine if\n// the notes need to display accidentals\n// This will solve for accidental === 0\nfunction ReturnAccidentalOffset(notes: Note[]): number[] {\n  let offset = [];\n  const nA = notes.filter(n => n.Accidental !== 0);\n  nA.sort((a: Note, b: Note) => {\n    return a.Line - b.Line;\n  });\n  switch (nA.length) {\n    case 0:\n      return [];\n    case 1:\n      return [ACC_OFFSET];\n    case 2:\n      return [ACC_OFFSET, ACC_OFFSET * 2];\n    default:\n      let lineDiff = Math.abs(nA[0].Line - nA[nA.length-1].Line);\n      if (lineDiff > 4) {\n        // TODO: Fix mirror offset bug\n        // At this point, mirroring is bugged. Setting everything to cascade\n//        offset = MirrorOffset(nA);\n        offset = CascadingOffset(nA);\n      } else {\n        offset = CascadingOffset(nA);\n      }\n  }\n  return offset;\n}\n\nfunction MirrorOffset(notes: Note[]): number[] {\n  let offset: number[] = [];\n  notes.forEach((_: Note, i: number) => {\n    if (i === 0 || i === notes.length-1) {\n      offset.push(ACC_OFFSET);\n    } else {\n      offset.push(ACC_OFFSET * i);\n    }\n  });\n  return offset;\n}\n\nfunction CascadingOffset(notes: Note[]): number[] {\n  let offset: number[] = [];\n  notes.forEach((_: Note, i: number) => {\n    if (i === 0) {\n      offset.push(ACC_OFFSET);\n    } else {\n      offset.push((notes.length + 1 - i) * ACC_OFFSET);\n    }\n  });\n  return offset;\n}\n\nexport { ReturnAccidentalOffset }\n","import { Note } from \"../Core/Note.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { RenderSymbol, StdAccidentals } from \"./MusicFont.Renderer.js\";\n\nconst sharpPath =\n  \"m0 0 0-5.6448 2.4-.6624 0 5.616-2.4.6912zm4.7256-1.3656-1.65.4728 0-5.616 1.65-.4608 0-2.3328-1.65.4608 0-5.7382-.6756 0 0 5.9122-2.4.69 0-5.5798-.6372 0 0 5.7922-1.65.462 0 2.3376 1.65-.4608 0 5.6052-1.65.4596 0 2.328 1.65-.4608 0 5.7058.6372 0 0-5.9098 2.4-.66 0 5.551.6756 0 0-5.7598 1.65-.462 0-2.3364z\";\nconst doubleSharp =\n  \"c-1.2495-.1955-2.5177-.1955-3.7791-.1938-.0272-.9231.1207-1.904-.2448-2.771-.2448-.5763-.7089-1.0302-1.1203-1.4977-.6579.5882-1.1985 1.3651-1.2512 2.2678-.051.6664-.0136 1.3345-.0255 2.0009-1.2614.0187-2.5347-.0425-3.7791.2057.2397-1.2376.1853-2.5024.2074-3.7553.9605-.0255 1.9873.1122 2.8798-.306.5253-.2465.9724-.6324 1.4178-.9996-.5814-.6579-1.3362-1.2376-2.2474-1.292-.6817-.0544-1.3668-.0153-2.0502-.0272-.0425-1.2444.102-2.5024-.1564-3.7315 1.2308.2227 2.4854.1649 3.7281.1819.0187.8857-.0799 1.8037.17 2.6554.1904.6511.7106 1.1526 1.1441 1.666.6137-.5338 1.1662-1.2036 1.2665-2.0417.0918-.7582.0187-1.5198.0612-2.2797 1.2529-.034 2.5432.1258 3.7553-.2703-.1802 1.2631-.1972 2.5466-.1836 3.8199-.8942.0255-1.8309-.0748-2.6809.2278-.646.2278-1.1543.7276-1.6677 1.1696.5576.5712 1.2291 1.0965 2.0587 1.1747.7616.0714 1.5266.0391 2.2899.0527.0187 1.2495-.0425 2.5109.2074 3.7434z\";\nconst flatPath =\n  \"c0 .805-.3018 1.576-1.1298 2.6109-.8772 1.0963-1.6156 1.7237-2.5886 2.4615l0-4.8049c.2212-.5586.5474-1.0108.98-1.358.4312-.3458.868-.5194 1.3104-.5194.7308 0 1.1942.4144 1.3944 1.2404.0224.0672.0336.1904.0336.3696zm-.105-3.36c-.6034 0-1.2166.1666-1.841.5012-.6244.3332-1.2152.7798-1.7724 1.3356l0-10.1804-.7882 0 0 17.4367c0 .4928.1344.7392.4032.7392.1554 0 .3485-.1302.637-.3024.8166-.4873 1.3257-.8131 1.8788-1.1567.6308-.392 1.3412-.8497 2.2806-1.7457.6482-.651 1.1172-1.3076 1.4084-1.9684.2898-.6622.4354-1.3174.4354-1.9684 0-.9632-.2562-1.6478-.7686-2.0524-.5796-.4256-1.2054-.6384-1.8732-.6384z\";\nconst naturalPath =\n  \"m0 0-.7875.2813 0-6.4406-4.5281 1.9688 0-16.7063.7594-.3375 0 6.5531 4.5563-2.0813 0 16.7625zm-.7875-9 0-4.5-3.7688 1.6594 0 4.5 3.7688-1.6594z\";\n\nfunction RenderAccidental(\n  renderProps: RenderProperties,\n  note: Note,\n  type: number,\n  offset: number,\n  theme: Theme,\n): void {\n  const { canvas, context, camera } = renderProps;\n  let posString = \"\";\n  let dflatString = \"\"; // posString for second flat\n  switch (type) {\n    case 0:\n      posString = `m ${note.Bounds.x + camera.x - 2} ${note.Bounds.y + camera.y + 16}`;\n      posString += naturalPath;\n      break;\n    case 1:\n      RenderSymbol(\n        renderProps,\n        StdAccidentals.Sharp,\n        note.Bounds.x - offset,\n        note.Bounds.y + 3,\n        theme,\n        note.Selected,\n      );\n      break;\n    case 2:\n      posString = `m ${note.Bounds.x + camera.x - 2} ${note.Bounds.y + camera.y + 10}`;\n      posString += doubleSharp;\n      break;\n    case -2:\n      dflatString = `m ${note.Bounds.x + camera.x - 15} ${note.Bounds.y + camera.y + 4}`;\n      dflatString += flatPath;\n    case -1:\n      posString = `m ${note.Bounds.x + camera.x - 5} ${note.Bounds.y + camera.y + 4}`;\n      posString += flatPath;\n      RenderSymbol(\n        renderProps,\n        StdAccidentals.Flat,\n        note.Bounds.x - offset,\n        note.Bounds.y + 3,\n        theme,\n        note.Selected,\n      );\n      break;\n    default:\n      break;\n  }\n  context.fillStyle = \"black\";\n  //  context.fill(new Path2D(posString));\n  //  if (type === -2) {\n  //    context.fill(new Path2D(dflatString));\n  //  }\n}\n\nexport { RenderAccidental, sharpPath, flatPath };\n","import { KeySignatures } from \"../Core/KeySignatures.js\";\nimport { Clef, Measure } from \"../Core/Measure.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { flatPath, sharpPath } from \"./Accidentals.Renderer.js\";\nimport { RenderSymbol, StdAccidentals } from \"./MusicFont.Renderer.js\";\n\ninterface keyProps {\n  Accidental: string;\n  Lines: number[];\n}\n\nfunction RenderKeySignature(\n  renderProps: RenderProperties,\n  msr: Measure,\n  keyString: string,\n  clefString: string,\n  xOff: number,\n  theme: Theme,\n  staff: number,\n): void {\n  const { canvas, context, camera } = renderProps;\n  context.fillStyle = \"black\";\n  const staffClefs = msr.Clefs.filter((c: Clef) => c.Staff === staff);\n  if (!staffClefs) {\n    console.error(\"(RenderKeySignature): Something went very wrong here\");\n    return;\n  }\n  //staff clefs should probably be sorted by beat here\n  const clefTypeString = staffClefs[0].Type;\n  const keyProps = GetKeyProps(clefTypeString, keyString);\n  keyProps.Lines.forEach((l: number, i: number) => {\n    if (keyProps.Accidental === \"#\") {\n      RenderSymbol(\n        renderProps,\n        StdAccidentals.Sharp,\n        msr.Bounds.x + xOff + i * 10,\n        msr.GetNotePositionOnLine(l, staff) + 2.5,\n        theme,\n        false,\n      );\n    } else {\n      RenderSymbol(\n        renderProps,\n        StdAccidentals.Flat,\n        msr.Bounds.x + xOff + i * 10,\n        msr.GetNotePositionOnLine(l, staff) + 2.5,\n        theme,\n        false,\n      );\n    }\n  });\n}\n\nfunction GetKeyProps(clefString: string, keyString: string): keyProps {\n  const props = { Accidental: \"\", Lines: [] };\n  const notes = KeySignatures.get(keyString);\n  let acc = \"\";\n  if (clefString === \"\" || !clefString || !keyString || keyString === \"\") {\n    console.error(\"ClefString or KeyString missing\");\n    return props;\n  }\n  if (!notes) {\n    console.error(\"Notes undefined/null\");\n    return props;\n  }\n  if (notes.length > 0) {\n    if (notes[0].includes(\"#\")) {\n      acc = \"#\";\n    } else {\n      acc = \"b\";\n    }\n  }\n\n  props.Accidental = acc;\n  switch (clefString) {\n    case \"bass\":\n      props.Lines = fromTreble(notes, acc);\n      props.Lines = [...props.Lines.map((l) => (l += 2))];\n      break;\n    case \"treble\":\n      props.Lines = fromTreble(notes, acc);\n      break;\n    default:\n  }\n  return props;\n}\n\nfunction fromTreble(notes: string[], accidental: string): number[] {\n  let lines: number[] = [];\n  const sharpLines = [11, 14, 10, 13, 16, 12, 15];\n  const flatLines = [15, 12, 16, 13, 17, 14, 18];\n  if (accidental === \"#\") {\n    lines = sharpLines.slice(0, notes.length);\n  } else {\n    lines = flatLines.slice(0, notes.length);\n  }\n  return lines;\n}\n\nexport { RenderKeySignature };\n","import {\n  DynamicSymbol,\n  RenderSymbol,\n} from \"../Renderers/MusicFont.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\nimport { Division, Measure } from \"./Measure.js\";\nimport { Note } from \"./Note.js\";\n\nconst DynamicSymbolMap = new Map<string, DynamicSymbol>([\n  [\"p\", DynamicSymbol.Piano],\n  [\"m\", DynamicSymbol.Mezzo],\n  [\"f\", DynamicSymbol.Forte],\n  [\"r\", DynamicSymbol.Rinforzando],\n  [\"s\", DynamicSymbol.SForzando],\n  [\"z\", DynamicSymbol.Z],\n  [\"n\", DynamicSymbol.N],\n]);\n\n// Trying non-class based to see how it goes, will prob re-write as\n// they will need to be selectable/deletable - but may re-write how that\n// functions too, wait and see\nclass Dynamic implements ISelectable {\n  Symbol: string;\n  Staff: number;\n  Beat: number;\n  Selected: boolean;\n  Editable: boolean;\n  Bounds: Bounds;\n  SelType: SelectableTypes;\n  ID: number;\n  constructor(symbol: string, staff: number, beat: number) {\n    this.Symbol = symbol;\n    this.Selected = false;\n    this.Staff = staff;\n    this.Beat = beat;\n    this.Bounds = new Bounds(0, 0, 13 * symbol.length, 20);\n  }\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n}\n\nfunction RenderDynamic(\n  renderProps: RenderProperties,\n  measure: Measure,\n  dynamic: Dynamic,\n  theme: Theme,\n): void {\n  if (dynamic.Symbol === \"\") {\n    console.error(\"(RenderDynamic): No Symbol String\");\n    return;\n  }\n  if (dynamic.Staff >= measure.Staves.length) {\n    console.error(\"(RenderDynamic): Staff out of bounds of measure\");\n    return;\n  }\n  let findDiv = measure.Voices[measure.ActiveVoice].Divisions.filter(\n    (d: Division) => d.Beat === dynamic.Beat,\n  );\n  if (findDiv.length === 0) {\n    console.error(\"(RenderDynamic): Division Beat not matching with dynamic\");\n    return;\n  }\n  const div = findDiv[0];\n  const divNotes = measure.Voices[measure.ActiveVoice].Notes.filter(\n    (n: Note) => n.Beat === div.Beat,\n  ).sort((a: Note, b: Note) => a.Line - b.Line);\n  const minHeight = div.Bounds.y + 11 * 10;\n  const noteHeight = divNotes[divNotes.length - 1].Bounds.y;\n  const yBuffer = 20; // this will  be changed, needs a minimum y value so the dynamic is not on the staff\n  const yPos = minHeight > noteHeight ? minHeight : noteHeight + yBuffer;\n  const xBuffer = 8;\n  // Updating bounds here is a bit ugly\n  dynamic.Bounds.x = div.Bounds.x + xBuffer;\n  dynamic.Bounds.y = yPos - 10;\n  for (let i = 0; i < dynamic.Symbol.length; i++) {\n    RenderSymbol(\n      renderProps,\n      DynamicSymbolMap.get(dynamic.Symbol[i]),\n      div.Bounds.x + xBuffer * (i + 1) + i * 5,\n      yPos,\n      theme,\n      dynamic.Selected,\n    );\n  }\n  RenderBounds(renderProps, dynamic);\n}\n\nfunction RenderBounds(renderProps: RenderProperties, dynamic: Dynamic) {\n  renderProps.context.strokeStyle = \"green\";\n  renderProps.context.strokeRect(\n    dynamic.Bounds.x + renderProps.camera.x,\n    dynamic.Bounds.y + renderProps.camera.y,\n    dynamic.Bounds.width,\n    dynamic.Bounds.height,\n  );\n  renderProps.context.strokeStyle = \"black\";\n}\n\nexport { Dynamic, RenderDynamic };\n","import { Clef, Measure } from \"../Core/Measure.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\n\nfunction RenderClef(\n  renderProps: RenderProperties,\n  clef: Clef,\n  theme: Theme,\n): void {\n  // Only rendering for clefs at start of measure at this moment\n  // Will require more here when that is fixed\n  clef.render(renderProps, theme);\n}\n\nexport { RenderClef };\n","import { Measure } from \"../Core/Measure.js\";\nimport {\n  GetStaffHeightUntil,\n  GetStaffMiddleLine,\n  Staff,\n} from \"../Core/Staff.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\n\nfunction RenderStaff(\n  renderProps: RenderProperties,\n  msr: Measure,\n  staff: Staff,\n): void {\n  // These should be defined somewhere else\n  const { canvas, context, camera } = renderProps;\n  const line_space = 10;\n  const line_width = 1;\n  const endsWidth = 2;\n\n  const staves = msr.Staves;\n  const yStart = msr.Bounds.y + GetStaffHeightUntil(staves, staff.Num);\n  const staffMidLine = GetStaffMiddleLine(staves, staff.Num);\n  const staffHeight =\n    GetStaffHeightUntil(staves, staves.length - 2) +\n    (GetStaffMiddleLine(staves, staves.length - 1) - 2) * 5;\n\n  // Render Staff Lines\n  for (let l = 0; l < 5; l++) {\n    const lineString = `M${msr.Bounds.x + camera.x} \n    ${yStart + 5 * staffMidLine - line_space * 2 + line_space * l + camera.y} h \n    ${msr.Bounds.width + msr.XOffset} v ${line_width} h -${msr.Bounds.width + msr.XOffset} Z`;\n\n    const linePath = new Path2D(lineString);\n    context.fill(linePath);\n  }\n}\n\nexport { RenderStaff };\n","import { Dynamic, RenderDynamic } from \"../Core/Dynamic.js\";\nimport { Clef, Division, Measure } from \"../Core/Measure.js\";\nimport { Staff } from \"../Core/Staff.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { RenderClef } from \"./Clef.Renderer.js\";\nimport { RenderKeySignature } from \"./KeySignature.Renderer.js\";\nimport { RenderStaff } from \"./Staff.Renderer.js\";\n\nfunction RenderMeasureRev(\n  measure: Measure,\n  renderProps: RenderProperties,\n  theme: Theme,\n): void {\n  // Render Barlines here\n  measure.Staves.forEach((s: Staff) => RenderStaff(renderProps, measure, s));\n  if (measure.RenderClef)\n    measure.Clefs.forEach((c: Clef) => RenderClef(renderProps, c, theme));\n  if (measure.RenderKey) {\n    measure.Staves.forEach((s: Staff) => {\n      // This needs work\n      RenderKeySignature(\n        renderProps,\n        measure,\n        measure.KeySignature,\n        measure.Clefs[0].Type,\n        34, // this is xOffset, should not be a constant.\n        theme,\n        s.Num,\n      );\n    });\n  }\n  if (measure.RenderTimeSig)\n    measure.TimeSignature.render(renderProps, measure, theme);\n  measure.Dynamics.forEach((d: Dynamic) =>\n    RenderDynamic(renderProps, measure, d, theme),\n  );\n  const debug = false;\n  if (debug) {\n    measure.Voices[measure.ActiveVoice].Divisions.forEach((d: Division) => {\n      renderProps.context.strokeStyle = \"blue\";\n      renderProps.context.strokeRect(\n        d.Bounds.x + renderProps.camera.x,\n        d.Bounds.y + renderProps.camera.y,\n        d.Bounds.width,\n        d.Bounds.height,\n      );\n      d.Subdivisions.forEach((sd, i) => {\n        if (i % 2 == 0) {\n          renderProps.context.fillStyle = \"rgba(0, 255, 0, 0.2)\";\n        } else {\n          renderProps.context.fillStyle = \"rgba(0, 255, 255, 0.2)\";\n        }\n        renderProps.context.fillRect(\n          sd.Bounds.x + renderProps.camera.x,\n          sd.Bounds.y + renderProps.camera.y,\n          sd.Bounds.width,\n          sd.Bounds.height,\n        );\n      });\n    });\n  }\n}\n\nexport { RenderMeasureRev };\n","import { Articulation } from \"../Core/Articulation.js\";\nimport { Beam } from \"../Core/Beam.js\";\nimport { DivGroup, IsRestOnBeat } from \"../Core/Division.js\";\nimport { Dynamic } from \"../Core/Dynamic.js\";\n\nimport { StaffType } from \"../Core/Instrument.js\";\nimport { KeySignatures } from \"../Core/KeySignatures.js\";\nimport { Clef, Division, Measure } from \"../Core/Measure.js\";\nimport { Note } from \"../Core/Note.js\";\nimport { RenderMeasureLines, RenderStaffLines, Staff } from \"../Core/Staff.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { ReturnAccidentalOffset } from \"../Workers/Accidentaler.js\";\nimport { ConfigSettings, Theme } from \"../entry.js\";\nimport { RenderAccidental } from \"./Accidentals.Renderer.js\";\nimport { RenderKeySignature } from \"./KeySignature.Renderer.js\";\nimport { RenderMeasureRev } from \"./Measure.RendererRev.js\";\nimport {\n  DetermineStemDirection,\n  RenderDots,\n  RenderNote,\n  RenderRest,\n  RenderTies,\n  RenderTuplets,\n  StemDirection,\n  renderLedgerLines,\n} from \"./Note.Renderer.js\";\n\nconst noteXBuffer = 9;\n\nfunction RenderMeasure(\n  measure: Measure,\n  renderProps: RenderProperties,\n  mousePos: { x: number; y: number },\n  lastMeasure: boolean,\n  noteInput: boolean,\n  index: number,\n  restInput: boolean,\n  noteValue: number,\n  config: ConfigSettings,\n) {\n  //    if (hovId === measure.ID)\n  RenderHovered(\n    measure,\n    renderProps,\n    mousePos,\n    noteInput,\n    restInput,\n    noteValue,\n    config.Theme,\n  );\n  //    if (debug)\n  // RenderDebug(measure, renderProps, index, mousePos);\n  //RenderMeasureBase(measure, renderProps, mousePos, lastMeasure, config.Theme);\n  RenderMeasureRev(measure, renderProps, config.Theme);\n  measure.Staves.forEach((s: Staff) => {\n    RenderNotes(measure, renderProps, s.Num, config.Theme);\n    // TODO: Temporary for testing dynamics rendering\n    measure.Voices[measure.ActiveVoice].Divisions.filter(\n      (div: Division) => div.Staff === s.Num && div.Beat === 1,\n    ).forEach((div: Division) => {\n      //      const tempDyn: Dynamic = new Dynamic(\"ppppp\", div.Staff, div.Beat);\n      //RenderDynamic(renderProps, measure, tempDyn, config.Theme);\n      measure.Articulations.filter(\n        (a: Articulation) => a.Beat == div.Beat && a.Staff == div.Staff,\n      ).forEach((a: Articulation) => {\n        a.Render(\n          renderProps,\n          measure.Voices[measure.ActiveVoice].Notes.filter(\n            (n: Note) => n.Beat == div.Beat && n.Staff == div.Staff,\n          ),\n          measure.Staves,\n          div,\n          config.Theme,\n        );\n      });\n\n      renderProps.context.fillStyle = `rgba(0, 0, 0, ${1.0})`;\n      renderProps.context.font = `${12}px Bravura`;\n      renderProps.context.fillText(\n        measure.Num.toString(),\n        measure.Bounds.x + 8 + renderProps.camera.x - 8,\n        measure.Bounds.y + 10 + renderProps.camera.y,\n      );\n    });\n  });\n}\n\n// TODO: move this function elsewhere\nfunction MiddleLineBounds(measure: Measure): Bounds {\n  // Temporary\n  // This is really bad TODO: Remove this method\n  if (measure.Staves.length === 0) {\n    return new Bounds(0, 0, 0, 0);\n  }\n  let b = new Bounds(\n    measure.Bounds.x,\n    0,\n    measure.GetBoundsWithOffset().width,\n    5,\n  );\n  let actualLine = 15; // middle line number\n  const diff = actualLine - measure.Staves[0].BotLine;\n  b.y = measure.Bounds.y + measure.GetMeasureHeight() + (diff * 5 - 2.5);\n  return b;\n}\n\nfunction RenderHovered(\n  measure: Measure,\n  renderProps: RenderProperties,\n  mousePos: { x: number; y: number },\n  noteInput: boolean,\n  restInput: boolean,\n  noteValue: number,\n  theme: Theme,\n) {\n  const { canvas, context, camera } = renderProps;\n\n  if (noteInput) {\n    // context.fillStyle = \"rgb(0, 0, 255, 0.1)\";\n    // const lineY = measure.Bounds.y + (line.num * (line_space / 2) - (line_space / 4));\n    // context.fillRect(line.bounds.x + camera.x, lineY + camera.y, line.bounds.width, line.bounds.height);\n  }\n  // now we are going to test \"Sections\" as they were in v2\n  const divisions = measure.Voices[measure.ActiveVoice].Divisions;\n  divisions.forEach((s) => {\n    if (s.Bounds.IsHovered(mousePos.x, mousePos.y, camera)) {\n      let line = measure.GetLineHovered(mousePos.y, s.Staff);\n      if (measure.Instrument.Staff === StaffType.Rhythm) {\n        line.num = 15;\n        line.bounds = MiddleLineBounds(measure);\n      }\n      line.bounds.y = measure.GetNotePositionOnLine(line.num, s.Staff);\n      // context.fillStyle=\"rgb(0, 0, 255, 0.1)\";\n      // context.fillRect(s.Bounds.x + camera.x,\n      //                  s.Bounds.y + camera.y,\n      //                  s.Bounds.width,\n      //                  s.Bounds.height);\n\n      if (noteInput) {\n        // temp note\n        const tempNoteProps = {\n          Beat: s.Beat,\n          Duration: noteValue,\n          Line: line.num,\n          Rest: restInput,\n          Tied: false,\n          Staff: s.Staff,\n          Tuple: false,\n          TupleIndex: 0,\n          TupleCount: 1,\n          Clef: \"treble\",\n          Grace: false,\n        };\n        const tempNote = new Note(tempNoteProps);\n        if (!restInput) {\n          RenderNote(\n            tempNote,\n            renderProps,\n            new Bounds(s.Bounds.x + noteXBuffer, line.bounds.y, 0, 0),\n            true,\n            false,\n            StemDirection.Up,\n            theme,\n          );\n          // RenderStemRevise(\n          //   renderProps,\n          //   [[tempNote]],\n          //   [s],\n          //   s.Staff,\n          //   measure,\n          //   BeamDirection.Flat,\n          //   theme);\n\n          renderLedgerLines(\n            [tempNote],\n            s,\n            renderProps,\n            s.Staff,\n            measure,\n            theme,\n          );\n        } else {\n          RenderRest(\n            renderProps.context,\n            s,\n            renderProps.camera,\n            tempNote,\n            measure,\n            theme,\n          );\n        }\n      }\n    }\n  });\n}\n\n// Renders the basic lines and bar endings of the measure, no notes or clefs or time\n// time signatures\nfunction RenderMeasureBase(\n  msr: Measure,\n  renderProps: RenderProperties,\n  mousePos: { x: number; y: number },\n  lastMeasure: boolean,\n  theme: Theme,\n): void {\n  const { canvas, context, camera } = renderProps;\n\n  // prob move elsewhere I don't know\n  if (msr.Selected) {\n    context.fillStyle = theme.SelectColour;\n    context.fillRect(\n      msr.Bounds.x + camera.x,\n      msr.Bounds.y + camera.y,\n      msr.Bounds.width + msr.XOffset,\n      msr.Bounds.height,\n    );\n  }\n  context.fillStyle = theme.NoteElements;\n  RenderMeasureLines(renderProps, msr, lastMeasure, theme);\n  msr.Staves.forEach((s: Staff) => {\n    RenderStaffLines(renderProps, msr, s);\n  });\n\n  if (msr.RenderClef) {\n    RenderMeasureClef(renderProps, msr, theme);\n  }\n  if (msr.RenderKey) {\n    let key = msr.KeySignature; //\"CMaj/Amin\";\n    if (key === undefined) {\n      key = \"CMaj/Amin\";\n      msr.RenderKey = false;\n      console.error(\"Measure Key Signature is undefined\");\n    }\n    if (key !== \"CMaj/Amin\") {\n      const xOff = msr.RenderClef ? 34 : 4;\n      msr.Staves.forEach((s: Staff) => {\n        RenderKeySignature(\n          renderProps,\n          msr,\n          key,\n          msr.Clefs[0].Type,\n          xOff,\n          theme,\n          s.Num,\n        );\n      });\n    } else {\n      msr.RenderKey = false;\n      // This is a temporary fix for dev\n    }\n  }\n  if (msr.RenderTimeSig) {\n    let xOff = msr.RenderClef ? 36 : 4;\n    if (msr.RenderKey && msr.KeySignature !== \"CMaj/Amin\") {\n      xOff += KeySignatures.get(msr.KeySignature).length * 10;\n    }\n    RenderTimeSig(renderProps, msr, theme);\n  }\n}\n\nfunction RenderMeasureClef(\n  renderProps: RenderProperties,\n  msr: Measure,\n  theme: Theme,\n): void {\n  // TODO: Rewrite clef rendering code\n\n  const { canvas, context, camera } = renderProps;\n\n  msr.Clefs.forEach((clef: Clef) => {\n    if (clef.Beat === 1) {\n      clef.render(renderProps, theme);\n    } else {\n      const div = msr.Voices[msr.ActiveVoice].Divisions.find(\n        (d) => d.Beat === clef.Beat,\n      );\n      if (clef.Type === \"treble\") {\n        // const clefPath = RenderTrebleClef(\n        //     div.Bounds.x + camera.x,\n        //     msr.Bounds.y + camera.y + (5 * msrMidLine + (line_space * 2)));\n        //   context.fill(new Path2D(clefPath));\n      } else if (clef.Type === \"bass\") {\n      }\n    }\n  });\n}\n\nfunction RenderTimeSig(\n  renderProps: RenderProperties,\n  msr: Measure,\n  theme: Theme,\n): void {\n  msr.TimeSignature.render(renderProps, msr, theme);\n}\n\nfunction RenderNotes(\n  msr: Measure,\n  renderProps: RenderProperties,\n  staff: number,\n  theme: Theme,\n) {\n  const { canvas, context, camera } = renderProps;\n  const mDivs = msr.Voices[msr.ActiveVoice].Divisions.filter(\n    (d) => d.Staff === staff,\n  );\n  mDivs.forEach((div: Division) => {\n    const divNotes = msr.Voices[msr.ActiveVoice].Notes.filter(\n      (note: Note) => note.Beat === div.Beat && note.Staff === div.Staff,\n    );\n    divNotes.sort((a: Note, b: Note) => {\n      return a.Line - b.Line;\n    });\n\n    if (IsRestOnBeat(div.Beat, divNotes, div.Staff)) {\n      RenderRest(context, div, camera, divNotes[0], msr, theme);\n      return;\n    }\n    renderLedgerLines(\n      msr.Voices[msr.ActiveVoice].Notes,\n      div,\n      renderProps,\n      staff,\n      msr,\n      theme,\n    );\n  });\n\n  msr.Voices[msr.ActiveVoice].DivisionGroups.forEach((group: DivGroup) => {\n    if (group.Divisions.length > 0) {\n      const stemDir = DetermineStemDirection(group.Notes, group.Divisions);\n\n      if (!group.StemDir) {\n        // Just in case this has failed to be set\n        group.StemDir = stemDir;\n      }\n      let tuplet = group.Notes[0][0].Tuple;\n      group.Stems.forEach((s) => {\n        s.Render(context, camera, theme);\n        //        s.RenderBounds(context, camera);\n      });\n      group.Beams.forEach((b) => {\n        b.Render(\n          context,\n          camera,\n          Beam.BeamCount(group.Divisions[0].Duration, tuplet),\n          group.StemDir,\n          theme,\n        );\n      });\n\n      group.Divisions.forEach((div) => {\n        let hasFlipped = false;\n\n        const dN = msr.Voices[msr.ActiveVoice].Notes.filter(\n          (note: Note) =>\n            note.Beat === div.Beat && note.Staff === staff && !note.Grace,\n        );\n        dN.sort((a: Note, b: Note) => {\n          return a.Line - b.Line;\n        });\n\n        dN.forEach((n: Note, i: number) => {\n          const isFlipped = IsFlippedNote(dN, i, stemDir);\n          if (isFlipped) {\n            hasFlipped = true;\n          }\n          let flipNoteOffset = isFlipped\n            ? stemDir === StemDirection.Up\n              ? 11\n              : -11\n            : 0;\n\n          if (n.Rest) {\n            RenderRest(context, div, camera, n, msr, theme);\n          } else {\n            RenderNote(\n              n,\n              renderProps,\n              n.Bounds,\n              n.Selected,\n              isFlipped,\n              stemDir,\n              theme,\n            );\n\n            const accNotes = dN.filter((n) => n.Accidental !== 0);\n            accNotes.sort((a: Note, b: Note) => {\n              return a.Line - b.Line;\n            });\n            const offsets = ReturnAccidentalOffset(accNotes);\n            accNotes.forEach((n: Note, i: number) => {\n              RenderAccidental(renderProps, n, n.Accidental, offsets[i], theme);\n            });\n          }\n        });\n        // render dots\n        dN.forEach((n: Note) => {\n          let flipNoteOffset = hasFlipped\n            ? stemDir === StemDirection.Up\n              ? 11\n              : 0\n            : 0;\n          RenderDots(\n            renderProps,\n            n,\n            div.Bounds.x + noteXBuffer + flipNoteOffset,\n          );\n        });\n      });\n    }\n  });\n  RenderGraceNotes(renderProps, msr, theme);\n  RenderTies(\n    renderProps,\n    msr.Voices[msr.ActiveVoice].Divisions,\n    msr.Voices[msr.ActiveVoice].Notes,\n    StaffType.Single,\n    msr,\n  );\n  RenderTuplets(\n    renderProps,\n    msr.Voices[msr.ActiveVoice].Divisions,\n    msr.Voices[msr.ActiveVoice].Notes,\n    StaffType.Single,\n    msr,\n    theme,\n  );\n\n  if (msr.Instrument.Staff === StaffType.Grand) {\n    RenderTies(\n      renderProps,\n      msr.Voices[msr.ActiveVoice].Divisions,\n      msr.Voices[msr.ActiveVoice].Notes,\n      StaffType.Grand,\n      msr,\n    );\n    RenderTuplets(\n      renderProps,\n      msr.Voices[msr.ActiveVoice].Divisions,\n      msr.Voices[msr.ActiveVoice].Notes,\n      StaffType.Grand,\n      msr,\n      theme,\n    );\n  }\n}\n\nfunction RenderGraceNotes(\n  renderProps: RenderProperties,\n  msr: Measure,\n  theme: Theme,\n): void {\n  msr.Voices[msr.ActiveVoice].Notes.filter((n: Note) => n.Grace).forEach(\n    (n: Note) => {\n      RenderNote(\n        n,\n        renderProps,\n        n.Bounds,\n        n.Selected,\n        false,\n        StemDirection.Up,\n        theme,\n      );\n    },\n  );\n}\n\nfunction IsFlippedNote(\n  notes: Note[],\n  index: number,\n  dir: StemDirection,\n): boolean {\n  let flipped = false;\n  let countAbove = 0;\n  let countBelow = 0;\n  const nLine = notes[index].Line;\n  if (notes.length <= 1) {\n    return false;\n  }\n\n  for (let b = index + 1; b <= notes.length - 1; b++) {\n    // ignore grace notes?\n    if (notes[b].Grace) {\n      continue;\n    }\n    const line = notes[b].Line;\n    if (line - nLine === b - index || line - nLine === index - index) {\n      countBelow++;\n    } else {\n      break;\n    }\n  }\n\n  for (let a = index - 1; a >= 0; a--) {\n    if (notes[a].Grace) {\n      continue;\n    }\n\n    const line = notes[a].Line;\n    if (nLine - line === index - a || nLine - line === index - index) {\n      countAbove++;\n    } else {\n      break;\n    }\n  }\n\n  const totalCount = countAbove + countBelow + 1;\n  const notePos = countAbove + 1;\n  if (totalCount % 2 === 0) {\n    flipped = dir === StemDirection.Up ? notePos % 2 !== 0 : notePos % 2 === 0;\n  } else {\n    flipped = notePos % 2 === 0;\n  }\n\n  return flipped;\n}\n\ninterface NoteGroup {\n  startBeat: number;\n  endBeat: number;\n}\n\nfunction GetNoteGroups(msr: Measure): NoteGroup[] {\n  let startBeat = -1;\n  let endBeat = -1;\n  const noteGroups = [];\n\n  return noteGroups;\n}\n\nexport { RenderMeasure, IsFlippedNote };\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\n\nclass Stem implements ISelectable {\n  ID: number;\n  Selected: boolean = false;\n  Bounds: Bounds;\n  SelType: SelectableTypes.Stem;\n  Editable: boolean = false;\n  Direction: string;\n  StartPoint: number;\n  EndPoint: number;\n  Staff: number;\n  constructor(bounds: Bounds) {\n    this.Bounds = bounds;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.IsHovered(x, y, cam);\n  }\n\n  // TODO: Note: Camera is currently baked into actual position\n  // This will change when we separate the creation logic from\n  // the Note renderer\n  Render(context: CanvasRenderingContext2D, cam: Camera, theme: Theme): void {\n    context.fillStyle = theme.NoteElements;\n    if (this.Selected) {\n      context.fillStyle = theme.SelectColour;\n    }\n    context.fillRect(\n      this.Bounds.x + cam.x,\n      this.Bounds.y + cam.y,\n      this.Bounds.width,\n      this.Bounds.height,\n    );\n  }\n  RenderBounds(context: CanvasRenderingContext2D, cam: Camera): void {\n    context.fillStyle = \"rgba(255, 0, 0, 255)\";\n    context.fillRect(\n      this.Bounds.x + cam.x,\n      this.Bounds.y + cam.y,\n      this.Bounds.width,\n      this.Bounds.height,\n    );\n  }\n}\n\nexport { Stem };\n","import { Division } from \"../Core/Division.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport {\n  BeamDirection,\n  DetermineStemDirection,\n  StemDirection,\n} from \"./Note.Renderer.js\";\nimport { Note } from \"../Core/Note.js\";\nimport { Measure } from \"../Core/Measure.js\";\nimport { Theme } from \"../Types/Config.js\";\nimport { Stem } from \"../Core/Stem.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { DetermineBeamDirection } from \"../Core/Beam.js\";\nimport {\n  GetStaffActualMidLine,\n  GetStaffHeightUntil,\n  GetStaffMiddleLine,\n} from \"../Core/Staff.js\";\nimport { IsFlippedNote } from \"./Measure.Renderer.js\";\n\nfunction AlterHeightForBeam(\n  stemDir: StemDirection,\n  beamDir: BeamDirection,\n  height: number,\n  alterAmount: number,\n): number {\n  if (\n    (stemDir === StemDirection.Up && beamDir === BeamDirection.UpMax) ||\n    (stemDir === StemDirection.Down && beamDir === BeamDirection.DownMax)\n  ) {\n    height -= alterAmount;\n  } else if (\n    (stemDir === StemDirection.Down && beamDir === BeamDirection.UpMax) ||\n    (stemDir === StemDirection.Up && beamDir === BeamDirection.DownMax)\n  ) {\n    height += alterAmount;\n  }\n  return height;\n}\n\nfunction StemToCenter(\n  stemDir: StemDirection,\n  lowestLine: number,\n  highestLine: number,\n  midLine: number,\n): boolean {\n  const lineDist = 7;\n  if (stemDir === StemDirection.Up) {\n    return highestLine > 15 + lineDist;\n  } else {\n    return lowestLine < 15 - lineDist;\n  }\n}\n\n// Create Stem Objects (Separate from render, allow to be selectable)\nfunction CreateStems(\n  notes: Array<Note[]>,\n  divisions: Division[],\n  staff: number,\n  measure: Measure,\n): Stem[] {\n  const stems: Stem[] = [];\n  let dynNoteXBuffer = 9;\n  const stemDir: StemDirection = DetermineStemDirection(notes, divisions);\n\n  let highestLine: number = Number.MAX_SAFE_INTEGER;\n  let lowestLine: number = Number.MIN_SAFE_INTEGER;\n  let hNote: Note;\n  let lNote: Note;\n\n  notes.forEach((na: Note[]) => {\n    na.forEach((n: Note) => {\n      if (n.Line < highestLine) {\n        highestLine = n.Line;\n        hNote = n;\n      }\n      if (n.Line > lowestLine) {\n        lowestLine = n.Line;\n        lNote = n;\n      }\n    });\n  });\n\n  const staffMidLinePos =\n    GetStaffHeightUntil(measure.Staves, staff) +\n    GetStaffMiddleLine(measure.Staves, staff) * 5;\n  const xBuffer = stemDir === StemDirection.Up ? 11.5 : 0.25;\n  const beamDir = DetermineBeamDirection(\n    measure,\n    {\n      Divisions: divisions,\n      Notes: notes,\n      CrossStaff: false,\n      Staff: staff,\n      Stems: [],\n      Beams: [],\n    },\n    stemDir,\n  );\n  const shouldBeam = divisions.length > 1 && divisions[0].Duration <= 0.25;\n\n  divisions.forEach((div: Division, i: number) => {\n    const beamAlt = i * (10 / divisions.length - 1);\n    const divNotes = notes[i];\n    const isGraceStem = divNotes[0].Grace ? true : false;\n    const scale = isGraceStem ? 0.6 : 1.0;\n    const numOfAcc = divNotes.filter((n) => n.Accidental !== 0).length;\n    if (numOfAcc > 0) {\n      dynNoteXBuffer += dynNoteXBuffer * numOfAcc - 1;\n    }\n    divNotes.sort((a: Note, b: Note) => a.Line - b.Line);\n    let stemX =\n      stemDir === StemDirection.Up\n        ? divNotes[0].Bounds.x + 10.25 * scale\n        : divNotes[0].Bounds.x + 0.0 * scale;\n    if (IsFlippedNote(divNotes, 0, stemDir)) {\n      stemX = divNotes[0].Bounds.x + 0.0;\n    }\n    // stem Y set to 0 for now, is updated later.\n    const stem: Stem = new Stem(new Bounds(stemX, 0, 1.5, 0));\n\n    if (stemDir === StemDirection.Up) {\n      stem.Bounds.y = divNotes[divNotes.length - 1].Bounds.y + 2.0;\n      stem.Bounds.height =\n        hNote.Bounds.y - divNotes[divNotes.length - 1].Bounds.y - 35;\n    } else {\n      stem.Bounds.y = divNotes[0].Bounds.y + 4.0;\n      stem.Bounds.height = lNote.Bounds.y - divNotes[0].Bounds.y + 35;\n    }\n\n    const diff =\n      measure.Staves[staff].TopLine < 0\n        ? Math.abs(measure.Staves[staff].TopLine)\n        : measure.Staves[staff].TopLine;\n    const staffRelativeMid =\n      GetStaffActualMidLine(measure.Staves, staff) + diff;\n    if (StemToCenter(stemDir, lowestLine, highestLine, staffRelativeMid)) {\n      stem.Bounds.height = staffMidLinePos - stem.Bounds.y + measure.Bounds.y;\n    }\n    if (shouldBeam) {\n      stem.Bounds.height = AlterHeightForBeam(\n        stemDir,\n        beamDir,\n        stem.Bounds.height,\n        beamAlt,\n      );\n    }\n    // scale\n    if (notes.length > 0 && notes[0][0].Grace) {\n      stem.Bounds.height *= 0.6;\n    }\n    stem.Staff = staff;\n    stems.push(stem);\n  });\n  return stems;\n}\n\n// v3 of this bloody function\nfunction RenderStem(\n  renderProps: RenderProperties,\n  notes: Array<Note[]>,\n  divisions: Division[],\n  staff: number,\n  msr: Measure,\n  beamDir: BeamDirection,\n  theme: Theme,\n) {\n  const { canvas, context, camera } = renderProps;\n  let dynNoteXBuffer = 9;\n\n  const stemDir: StemDirection = DetermineStemDirection(notes, divisions);\n\n  const xBuffer = stemDir === StemDirection.Up ? 11.5 : 0.25;\n\n  divisions.forEach((div: Division, i: number) => {\n    const divNotes = notes[i];\n    divNotes.sort((a: Note, b: Note) => a.Line - b.Line);\n    let lowestNote: Note = divNotes[divNotes.length - 1];\n    let highestNote: Note = divNotes[0];\n    const stemX = Math.floor(\n      div.Bounds.x + xBuffer + camera.x + dynNoteXBuffer,\n    );\n  });\n}\n\nexport { CreateStems };\n","import { Camera } from \"../Core/Camera.js\";\nimport { GetNoteClefType } from \"../Core/Clef.js\";\nimport {\n  DivGroup,\n  GetDivisionGroups,\n  Subdivision,\n  SubdivisionType,\n} from \"../Core/Division.js\";\nimport { StaffType } from \"../Core/Instrument.js\";\nimport { Division, Measure } from \"../Core/Measure.js\";\nimport { Note, NoteProps, TupleDetails } from \"../Core/Note.js\";\nimport { GetStaffMiddleLine, Staff } from \"../Core/Staff.js\";\nimport { GetLargestValues } from \"../Core/Values.js\";\nimport { CreateBeamsRevise } from \"../Factory/Beam.Fact.js\";\nimport { IsFlippedNote } from \"../Renderers/Measure.Renderer.js\";\nimport {\n  DetermineStemDirection,\n  StemDirection,\n} from \"../Renderers/Note.Renderer.js\";\nimport { CreateStems } from \"../Renderers/Stem.Fact.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable } from \"../Types/ISelectable.js\";\n\nconst noteXBuffer = 9;\n\n// added for automatic/generated notes from external UIs.\n// eg. Generating a random rhythm in the music trainer app\nfunction AddNoteOnMeasure(\n  msr: Measure,\n  noteValue: number,\n  line: number,\n  beat: Division,\n  rest: boolean,\n  grace: boolean,\n): void {\n  InputNote(\n    msr,\n    noteValue,\n    beat,\n    { num: line, bounds: new Bounds(0, 0, 0, 0) },\n    rest,\n    grace,\n  );\n}\n\nfunction InputOnMeasure(\n  msr: Measure,\n  noteValue: number,\n  x: number,\n  y: number,\n  cam: Camera,\n  rest: boolean,\n  grace: boolean,\n): void {\n  let inputtingNote = true;\n  const beatOver = msr.Voices[msr.ActiveVoice].Divisions.find((b) =>\n    b.Bounds.IsHovered(x, y, cam),\n  );\n  if (!beatOver) {\n    console.error(\"Beat Over Not Found\");\n    return;\n  }\n  let line = msr.GetLineHovered(y, beatOver.Staff);\n  if (msr.Instrument.Staff === StaffType.Rhythm) {\n    line.num = 15;\n  }\n  if (inputtingNote) {\n    InputNote(msr, noteValue, beatOver, line, rest, grace);\n  }\n}\n\nfunction InputNote(\n  msr: Measure,\n  noteValue: number,\n  division: Division,\n  line: { num: number; bounds: Bounds },\n  rest: boolean,\n  grace: boolean,\n  tupleCount: number = 1,\n): void {\n  const notesInDiv = msr.Voices[msr.ActiveVoice].Notes.filter(\n    (n) => n.Beat === division.Beat,\n  );\n  if (notesInDiv.length < 1) {\n    console.error(\"No notes found in division\");\n    return;\n  }\n  const addingToTuple = notesInDiv[0].Tuple;\n  if (addingToTuple) {\n    if (noteValue !== division.Duration) {\n      //TODO: For now only same values can be added to tuplet grouping\n      noteValue = noteValue / notesInDiv[0].TupleDetails.Count;\n    }\n  }\n  const clefType: string = GetNoteClefType(msr, division.Beat, division.Staff);\n  const noteProps: NoteProps = {\n    Beat: division.Beat,\n    Duration: noteValue,\n    Line: line.num,\n    Rest: rest,\n    Tied: false,\n    Staff: division.Staff,\n    Tuple: addingToTuple,\n    TupleDetails: notesInDiv[0].TupleDetails,\n    Clef: clefType,\n    Grace: grace,\n  };\n  const newNote: Note = new Note(noteProps);\n\n  if (division.Duration === noteValue) {\n    msr.ClearRestNotes(division.Beat, division.Staff);\n    msr.AddNote(newNote, true);\n  } else {\n    if (MeasureHasRoom(noteProps.Beat, noteProps.Duration, msr)) {\n      AddToDivision(msr, noteProps, division.Staff);\n    }\n  }\n  RecreateDivisionGroups(msr);\n  msr.CreateDivisions(msr.Camera, true);\n  RecreateStemAndBeams(msr);\n}\n\nfunction RecreateStemAndBeams(msr: Measure): void {\n  msr.Voices[msr.ActiveVoice].DivisionGroups.forEach((g: DivGroup) => {\n    g.Stems = [];\n    g.Beams = [];\n    g.Stems.push(...CreateStems(g.Notes, g.Divisions, g.Staff, msr));\n    g.Beams.push(...CreateBeamsRevise(g, g.Stems, false));\n  });\n}\n\nfunction RecreateDivisionGroups(msr: Measure): void {\n  var groups = [];\n  msr.Staves.forEach((staff: Staff) => {\n    const group = GetDivisionGroups(msr, staff.Num);\n    groups.push(...group);\n  });\n\n  msr.Voices[msr.ActiveVoice].DivisionGroups = groups;\n}\n\nfunction UpdateNoteBounds(msr: Measure, staff: number): void {\n  // Maybe should go somewhere else\n  // Maybe should be more optimised\n  // For now seems to update bounds of notes properly\n  msr.Voices[msr.ActiveVoice].DivisionGroups.forEach((g: DivGroup) => {\n    const { Divisions, Notes } = g;\n    const stemDir = DetermineStemDirection(Notes, Divisions);\n    Divisions.forEach((div: Division) => {\n      // Set Division values for stem direction and X Buffer here\n      // TODO: This may need to be a function in the division file\n      div.Direction = stemDir;\n\n      const divNotes = msr.Voices[msr.ActiveVoice].Notes.filter(\n        (n) => n.Beat === div.Beat && n.Staff === staff,\n      );\n      divNotes.sort((a: Note, b: Note) => {\n        return a.Line - b.Line;\n      });\n      let dynNoteXBuffer = noteXBuffer;\n      const numOfAcc = divNotes.filter((n) => n.Accidental !== 0).length;\n      if (numOfAcc > 0) {\n        dynNoteXBuffer += noteXBuffer * numOfAcc - 1;\n      }\n      const noteSubDiv = div.Subdivisions.find(\n        (sd: Subdivision) => sd.Type === SubdivisionType.NOTE,\n      );\n      var subDivBuffer = 0;\n      if (noteSubDiv) {\n        subDivBuffer = noteSubDiv.Bounds.x - div.Bounds.x;\n      }\n      div.NoteXBuffer = dynNoteXBuffer + subDivBuffer;\n\n      divNotes.forEach((n: Note, i: number) => {\n        const isFlipped = IsFlippedNote(divNotes, i, stemDir);\n        let flipNoteOffset = isFlipped\n          ? stemDir === StemDirection.Up\n            ? 11\n            : -11\n          : 0;\n\n        if (!n.Rest) {\n          n.Bounds.x = Math.floor(\n            div.Bounds.x + dynNoteXBuffer + subDivBuffer + flipNoteOffset,\n          );\n          // This is really stupid, don't do this for final\n          if (n.Grace) {\n            n.Bounds.x -= subDivBuffer;\n          }\n          n.Bounds.y = msr.GetNotePositionOnLine(n.Line, n.Staff);\n        }\n      });\n    });\n  });\n  RecreateStemAndBeams(msr);\n}\n\nfunction MeasureHasRoom(\n  beat: number,\n  duration: number,\n  msr: Measure,\n  tuple: number = 1,\n): boolean {\n  return (\n    beat * duration <= msr.TimeSignature.top * (1 / msr.TimeSignature.bottom)\n  );\n}\n\nfunction IsRestOnBeat(\n  msr: Measure,\n  beat: number,\n  notes: Note[],\n  staff: number,\n): boolean {\n  const notesOnBeat = notes.filter((n) => n.Beat === beat && n.Staff === staff);\n  const restFound = notesOnBeat.find((n) => n.Rest);\n  if (restFound && notesOnBeat.length > 1) {\n    console.error(\"Rest found on beat with multiple notes, beat: \", beat);\n  } else if (restFound && notesOnBeat.length === 1) {\n    msr.ClearRestNotes(beat, notesOnBeat[0].Staff);\n  }\n  return restFound !== undefined;\n}\n\nfunction AddToDivision(\n  msr: Measure,\n  noteProps: NoteProps,\n  staff: number,\n): void {\n  let remainingValue = noteProps.Duration;\n  let beat = noteProps.Beat;\n  if (noteProps.Rest) {\n    noteProps.Line = GetStaffMiddleLine(msr.Staves, staff);\n  }\n  let tying = false;\n  let tStart = -1;\n  let tEnd = -1;\n  msr.Voices[msr.ActiveVoice].Divisions.filter(\n    (d) => d.Staff === staff,\n  ).forEach((div: Division, i: number) => {\n    if (tying && noteProps.Rest) {\n      tying = false;\n    }\n\n    if (remainingValue >= div.Duration && beat === div.Beat) {\n      // clear rests on beat regardless of what we are inputting\n      msr.ClearRestNotes(beat, noteProps.Staff);\n      let remVal = remainingValue;\n      let room: boolean = false;\n      let lastIndex: number = 0;\n      for (let j = i; j < msr.Voices[msr.ActiveVoice].Divisions.length; j++) {\n        if (remVal <= 0 && !room) {\n          continue;\n        }\n        const notesOnBeat = msr.Voices[msr.ActiveVoice].Notes.filter(\n          (n: Note) => n.Beat == msr.Voices[msr.ActiveVoice].Divisions[j].Beat,\n        );\n        if (notesOnBeat.length > 0 && notesOnBeat[0].Rest) {\n          remVal -= msr.Voices[msr.ActiveVoice].Divisions[j].Duration;\n          if (remVal <= 0) {\n            room = true;\n            lastIndex = j;\n          }\n        }\n      }\n\n      // TODO: Probably separate this out somewhere else for readability\n      if (room) {\n        // Clear all rest notes\n        for (let j = i; j <= lastIndex; j++) {\n          msr.ClearRestNotes(\n            msr.Voices[msr.ActiveVoice].Divisions[j].Beat,\n            noteProps.Staff,\n          );\n        }\n        const newNoteProps: NoteProps = {\n          Beat: div.Beat,\n          Duration: remainingValue,\n          Line: noteProps.Line,\n          Rest: noteProps.Rest,\n          Tied: false,\n          Staff: div.Staff,\n          Tuple: false,\n          Clef: GetNoteClefType(msr, div.Beat, div.Staff),\n          Grace: noteProps.Grace,\n        };\n\n        const newNote = new Note(newNoteProps);\n        msr.AddNote(newNote, true);\n        remainingValue = 0;\n        return;\n      }\n\n      if (remainingValue > div.Duration && tying === false && !noteProps.Rest) {\n        tying = true;\n        tStart = div.Beat;\n        tEnd =\n          div.Beat + (remainingValue - div.Duration) * msr.TimeSignature.bottom;\n      }\n\n      const newNoteProps: NoteProps = {\n        Beat: div.Beat,\n        Duration: div.Duration,\n        Line: noteProps.Line,\n        Rest: noteProps.Rest,\n        Tied: tying,\n        Staff: div.Staff,\n        Tuple: false,\n        Clef: GetNoteClefType(msr, div.Beat, div.Staff),\n        Grace: noteProps.Grace,\n      };\n\n      const newNote = new Note(newNoteProps);\n\n      if (tying) {\n        newNote.SetTiedStartEnd(tStart, tEnd);\n        if (remainingValue - div.Duration <= 0) {\n          tying = false;\n        }\n      }\n\n      remainingValue -= div.Duration;\n      beat += div.Duration * msr.TimeSignature.bottom;\n      msr.AddNote(newNote, true);\n    } else if (\n      remainingValue < div.Duration &&\n      beat === div.Beat &&\n      remainingValue > 0\n    ) {\n      // Get other notes that will be effected\n      const notesOnBeat = msr.Voices[msr.ActiveVoice].Notes.filter(\n        (note: Note) => {\n          return note.Beat === div.Beat && note.Staff === div.Staff;\n        },\n      );\n      if (IsRestOnBeat(msr, beat, notesOnBeat, div.Staff)) {\n        // If it does not effect any other notes (only rests in div)\n        // We can just add a note of our desired Duration.\n        const newNoteProps: NoteProps = {\n          Beat: div.Beat,\n          Duration: remainingValue,\n          Line: noteProps.Line,\n          Rest: noteProps.Rest,\n          Tied: tying,\n          Staff: div.Staff,\n          Tuple: false,\n          Clef: GetNoteClefType(msr, div.Beat, div.Staff),\n          Grace: noteProps.Grace,\n        };\n        const newNote = new Note(newNoteProps);\n\n        if (tying) {\n          newNote.SetTiedStartEnd(tStart, tEnd);\n          if (remainingValue - div.Duration <= 0) {\n            tying = false;\n          }\n        }\n\n        remainingValue = 0;\n        msr.AddNote(newNote, true);\n        return;\n      }\n\n      // This note is not tying, but existing notes will\n      // need to be tied together\n      const newNoteProps: NoteProps = {\n        Beat: div.Beat,\n        Duration: remainingValue,\n        Line: noteProps.Line,\n        Rest: noteProps.Rest,\n        Tied: false,\n        Staff: div.Staff,\n        Tuple: noteProps.Tuple,\n        TupleDetails: noteProps.TupleDetails,\n        Clef: GetNoteClefType(msr, div.Beat, div.Staff),\n        Grace: noteProps.Grace,\n      };\n\n      const remValue = div.Duration - remainingValue;\n      const tiedNoteValues = GetLargestValues(remValue).sort(\n        (a: number, b: number) => {\n          return a - b;\n        },\n      );\n      const tiedStart = div.Beat;\n      const tiedEnd = div.Beat + remValue * msr.TimeSignature.bottom;\n\n      notesOnBeat.forEach((n) => {\n        n.Duration = remainingValue;\n        n.Tied = true;\n        n.SetTiedStartEnd(tiedStart, tiedEnd);\n        let nextBeat = div.Beat + remainingValue * msr.TimeSignature.bottom;\n        tiedNoteValues.forEach((dur: number, i: number) => {\n          const shouldTie = i < tiedNoteValues.length - 1;\n          const tiedNote: NoteProps = {\n            Beat: nextBeat,\n            Duration: dur,\n            Line: n.Line,\n            Rest: false,\n            Tied: true,\n            Staff: n.Staff,\n            Tuple: n.Tuple,\n            TupleDetails: n.TupleDetails,\n            Clef: GetNoteClefType(msr, div.Beat, div.Staff),\n            Grace: n.Grace,\n          };\n          const noteObj = new Note(tiedNote);\n          noteObj.SetTiedStartEnd(tiedStart, tiedEnd);\n          msr.AddNote(noteObj, true);\n          nextBeat = nextBeat + dur * msr.TimeSignature.bottom;\n        });\n      });\n      msr.AddNote(new Note(newNoteProps), true);\n    }\n  });\n}\n\nfunction CreateTuplet(\n  selNotes: Map<Measure, ISelectable[]>,\n  count: number,\n): number {\n  let duration = 0;\n  for (let [measure, notes] of selNotes) {\n    notes.forEach((sel: ISelectable) => {\n      if (sel instanceof Note === false) {\n        return;\n      }\n      const n = sel as Note;\n      const tupleDuration = n.Duration;\n      const newDuration = n.Duration / count;\n      duration = newDuration;\n      let lastBeat = n.Beat;\n      n.Duration = newDuration;\n      n.Tuple = true;\n      const details: TupleDetails = {\n        StartBeat: n.Beat,\n        EndBeat: n.Beat + tupleDuration * measure.TimeSignature.bottom,\n        Value: tupleDuration,\n        Count: count,\n      };\n      n.TupleDetails = details;\n      // add newly created tuplet notes\n      for (let i = 1; i < count; i++) {\n        const newNote = new Note({\n          Beat: lastBeat + newDuration * measure.TimeSignature.bottom,\n          Duration: newDuration,\n          Line: n.Line,\n          Rest: true,\n          Tied: false,\n          Staff: n.Staff,\n          Tuple: true,\n          TupleDetails: details,\n          Clef: GetNoteClefType(\n            measure,\n            lastBeat + newDuration * measure.TimeSignature.bottom,\n            n.Staff,\n          ),\n          Grace: n.Grace,\n        });\n        lastBeat = newNote.Beat;\n        measure.AddNote(newNote, true);\n      }\n    });\n  }\n  return duration;\n}\n\nfunction AllNotesByBeat(msr: Measure): Array<Note[]> {\n  const notes: Array<Note[]> = [];\n  notes.push([]);\n  let currentBeat = 1;\n  let nIndex = 0;\n  msr.Voices[msr.ActiveVoice].Notes.sort((a: Note, b: Note) => {\n    return a.Beat - b.Beat;\n  });\n  msr.Voices[msr.ActiveVoice].Notes.forEach((n: Note) => {\n    if (n.Beat === currentBeat) {\n      notes[nIndex].push(n);\n    } else {\n      notes.push([]);\n      nIndex++;\n      currentBeat = n.Beat;\n      notes[nIndex].push(n);\n    }\n  });\n  return notes;\n}\n\nexport {\n  InputOnMeasure,\n  UpdateNoteBounds,\n  CreateTuplet,\n  AddNoteOnMeasure,\n  RecreateDivisionGroups,\n};\n","import {\n  RenderSymbol,\n  TimeSigNumbers,\n} from \"../Renderers/MusicFont.Renderer.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { RenderProperties } from \"../Types/RenderProperties.js\";\nimport { Theme } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\nimport { Measure } from \"./Measure.js\";\nimport { GetStaffMiddleLine, Staff } from \"./Staff.js\";\n\n// Returns beats that should separate note groupings etc.\nfunction ReturnBreakPoints(timeSig: { top: number; bottom: number }): number[] {\n  const bPoints: number[] = [];\n  const timeSigString =\n    timeSig.top.toString() + \"/\" + timeSig.bottom.toString();\n  switch (timeSigString) {\n    case \"4/4\":\n    default:\n      bPoints.push(3);\n  }\n  return bPoints;\n}\n\nclass TimeSignature implements ISelectable {\n  ID: number;\n  Selected: boolean;\n  SelType: SelectableTypes;\n  Bounds: Bounds[];\n  Editable: boolean;\n  top: number;\n  bottom: number;\n\n  TopPosition: { x: number; y: number }[];\n  BotPosition: { x: number; y: number }[];\n\n  constructor(top: number, bottom: number, useSymbol: boolean = false) {\n    this.Selected = false;\n    this.SelType = SelectableTypes.TimeSig;\n    this.top = top;\n    this.bottom = bottom;\n    this.Editable = true;\n    this.TopPosition = [{ x: 0, y: 0 }];\n    this.BotPosition = [{ x: 0, y: 0 }];\n    this.Bounds = [new Bounds(0, 0, 0, 0)];\n    // use symbol? (bad name) for things like common and cut common\n  }\n\n  render(renderProps: RenderProperties, msr: Measure, theme: Theme): void {\n    let tGlyph: TimeSigNumbers = GetTimeSignatureGlyph(this.top);\n    let bGlyph: TimeSigNumbers = GetTimeSignatureGlyph(this.bottom);\n    msr.Staves.forEach((s) => {\n      //      if (this.TopPosition.length > msr.Staves.length || this.BotPosition.length >= msr.Staves.length) { return ;}\n      RenderSymbol(\n        renderProps,\n        tGlyph,\n        this.TopPosition[s.Num].x,\n        this.TopPosition[s.Num].y,\n        theme,\n        this.Selected,\n      );\n      RenderSymbol(\n        renderProps,\n        bGlyph,\n        this.BotPosition[s.Num].x,\n        this.BotPosition[s.Num].y,\n        theme,\n        this.Selected,\n      );\n    });\n  }\n\n  SetBounds(msr: Measure): void {\n    // Delete and recreate, potential for optimisation later\n    this.Bounds = [];\n    this.TopPosition = [];\n    this.BotPosition = [];\n    //\n    msr.Staves.forEach((s: Staff) => {\n      // These probably shouldn't be recreated every single time\n      this.Bounds.push(new Bounds(0, 0, 0, 0));\n      this.TopPosition.push({ x: 0, y: 0 });\n      this.BotPosition.push({ x: 0, y: 0 });\n      const div = msr.Voices[msr.ActiveVoice].Divisions.find(\n        (div) => div.Staff === s.Num,\n      );\n      if (!div) {\n        return;\n      }\n      const divY = div.Bounds.y;\n      const msrMidLine = GetStaffMiddleLine(msr.Staves, s.Num);\n      this.Bounds[s.Num].x = msr.Bounds.x + msr.XOffset - 25;\n      this.Bounds[s.Num].y = divY + (msrMidLine - 4) * 5;\n      this.Bounds[s.Num].width = 30;\n      this.Bounds[s.Num].height = 50;\n      this.TopPosition[s.Num].x = this.Bounds[s.Num].x;\n      this.TopPosition[s.Num].y = divY + (msrMidLine - 2) * 5;\n      this.BotPosition[s.Num].x = this.Bounds[s.Num].x;\n      this.BotPosition[s.Num].y = divY + (msrMidLine + 2) * 5;\n    });\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.Bounds.filter((b) => b.IsHovered(x, y, cam)).length > 0;\n  }\n}\n\nfunction GetTimeSignatureGlyph(n: number): TimeSigNumbers {\n  let glyph: TimeSigNumbers;\n  switch (n) {\n    case 0:\n      glyph = TimeSigNumbers.Zero;\n      break;\n    case 1:\n      glyph = TimeSigNumbers.One;\n      break;\n    case 2:\n      glyph = TimeSigNumbers.Two;\n      break;\n    case 3:\n      glyph = TimeSigNumbers.Three;\n      break;\n    case 4:\n      glyph = TimeSigNumbers.Four;\n      break;\n    case 5:\n      glyph = TimeSigNumbers.Five;\n      break;\n    case 6:\n      glyph = TimeSigNumbers.Six;\n      break;\n    case 7:\n      glyph = TimeSigNumbers.Seven;\n      break;\n    case 8:\n      glyph = TimeSigNumbers.Eight;\n      break;\n    case 9:\n      glyph = TimeSigNumbers.Nine;\n      break;\n  }\n  return glyph;\n}\n\nfunction CreateTimeSignature(props: {\n  top: number;\n  bottom: number;\n}): TimeSignature {\n  return new TimeSignature(props.top, props.bottom);\n}\n\nexport { TimeSignature, CreateTimeSignature };\n","import { DivGroup, Division } from \"./Division.js\";\nimport { Note } from \"./Note.js\";\n\nclass Voice {\n  Notes: Note[];\n  Divisions: Division[];\n  DivisionGroups: DivGroup[];\n  constructor() {\n    this.Notes = [];\n    this.Divisions = [];\n    this.DivisionGroups = [];\n  }\n}\n\nexport { Voice };\n","import { Bounds } from \"../Types/Bounds.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { Message, MessageType } from \"../Types/Message.js\";\nimport { UpdateNoteBounds } from \"../Workers/NoteInput.js\";\nimport { MeasureSettings } from \"../entry.js\";\nimport { Articulation } from \"./Articulation.js\";\nimport { Barline } from \"./Barline.js\";\nimport { Camera } from \"./Camera.js\";\nimport { Clef, GetNoteClefType } from \"./Clef.js\";\nimport {\n  CreateDivisions,\n  type Division,\n  ResizeDivisions,\n  DivisionMinWidth,\n  DivGroup,\n} from \"./Division.js\";\nimport { Dynamic } from \"./Dynamic.js\";\nimport { Instrument, StaffType } from \"./Instrument.js\";\nimport { KeySignatures } from \"./KeySignatures.js\";\nimport { Note, NoteProps } from \"./Note.js\";\nimport { Page } from \"./Page.js\";\nimport { GetStaffHeightUntil, GetStaffMiddleLine, Staff } from \"./Staff.js\";\nimport { CreateTimeSignature, TimeSignature } from \"./TimeSignatures.js\";\nimport { Voice } from \"./Voice.js\";\n\ninterface MeasureProps {\n  Instrument: Instrument;\n  Bounds: Bounds;\n  TimeSignature: { top: number; bottom: number };\n  KeySignature: string;\n  Notes: Note[];\n  Staves: Staff[];\n  Clefs: Clef[];\n  RenderClef: boolean;\n  RenderTimeSig: boolean;\n  RenderKey: boolean;\n  Camera: Camera;\n  Page: Page;\n  Message: (msg: Message) => void;\n  Settings?: MeasureSettings;\n  Barlines: Barline[];\n}\n\nclass Measure implements ISelectable {\n  ID: number;\n  Num: number;\n  Selected: boolean;\n  SelType: SelectableTypes;\n  Instrument: Instrument;\n  Bounds: Bounds;\n  Editable: boolean;\n  RenderClef: boolean;\n  RenderKey: boolean;\n  RenderTimeSig: boolean;\n  Camera: Camera;\n  Page: Page;\n  PageLine: Number;\n  Message: (msg: Message) => void;\n\n  TimeSignature: TimeSignature;\n  KeySignature: string;\n\n  Voices: Voice[];\n  ActiveVoice: number = 0;\n  Clefs: Clef[] = [];\n  Staves: Staff[];\n  Barlines: Barline[];\n  Articulations: Articulation[];\n  Dynamics: Dynamic[];\n\n  XOffset: number; // not sure if this is what we want to go with\n\n  // Grouping of measures on a line/for formatting\n  Line: number;\n  RunningID: { count: number };\n\n  constructor(properties: MeasureProps, runningId: { count: number }) {\n    this.Voices = [new Voice(), new Voice(), new Voice(), new Voice()];\n    this.Num = 1;\n    this.Staves = properties.Staves;\n    this.Message = properties.Message;\n    this.RunningID = runningId;\n    this.ID = 0;\n    this.Selected = false;\n    this.Editable = true;\n    this.SelType = SelectableTypes.Measure;\n    this.Instrument = properties.Instrument;\n    this.Line = 0;\n    this.Bounds = properties.Bounds;\n    this.Bounds.height = GetStaffHeightUntil(this.Staves);\n    this.TimeSignature = CreateTimeSignature(properties.TimeSignature);\n    this.KeySignature = properties.KeySignature;\n    this.Voices[this.ActiveVoice].Notes = properties.Notes;\n    this.Articulations = [];\n    this.Dynamics = [];\n    this.RenderClef = properties.RenderClef;\n    if (this.Instrument.Staff === StaffType.Rhythm) {\n      this.RenderClef = false;\n    }\n    this.RenderKey = properties.RenderKey;\n    this.Camera = properties.Camera;\n    this.RenderTimeSig = properties.RenderTimeSig;\n    this.Page = properties.Page;\n    this.PageLine = properties.Page.PageLines[0].Number;\n\n    this.SetXOffset();\n\n    this.Barlines = properties.Barlines;\n\n    this.CreateDivisions(this.Camera);\n\n    this.Staves.forEach((s: Staff, i: number) => {\n      const clef = new Clef(0, properties.Clefs[i].Type, 1, s.Num);\n      clef.SetBounds(this, s.Num);\n      this.Clefs.push(clef);\n    });\n    this.TimeSignature.SetBounds(this);\n  }\n\n  GetLineHovered(y: number, staffNum: number): { num: number; bounds: Bounds } {\n    const cam = this.Camera;\n    const relYPos = y - this.Bounds.y - cam.y;\n    let line = Math.floor(relYPos / 5); // this should be a constant, line_height (defined somewhere)\n    let actualLine = line;\n    const bounds = new Bounds(\n      this.Bounds.x,\n      0,\n      this.Bounds.width + this.XOffset,\n      5,\n    );\n    const staff: Staff = this.Staves.find((s) => s.Num === staffNum);\n    const prevStaffLines = GetStaffHeightUntil(this.Staves, staffNum) / 5;\n    actualLine = line + staff.TopLine;\n    bounds.y = this.Bounds.y + 5 * actualLine;\n    return { num: actualLine - prevStaffLines, bounds: bounds };\n  }\n\n  GetNotePositionOnLine(line: number, staff: number): number {\n    const staffYPos = GetStaffHeightUntil(this.Staves, staff);\n    let y = staffYPos + this.Bounds.y + (line - this.Staves[staff].TopLine) * 5;\n    return y - 2.5;\n  }\n\n  GetBoundsWithOffset(): Bounds {\n    return new Bounds(\n      this.Bounds.x,\n      this.Bounds.y,\n      this.Bounds.width + this.XOffset,\n      this.Bounds.height,\n    );\n  }\n\n  SetXOffset(): void {\n    this.XOffset = 0;\n    if (this.RenderClef) {\n      this.XOffset += 30;\n    }\n    if (this.RenderKey) {\n      this.XOffset += KeySignatures.get(this.KeySignature).length * 11;\n    }\n    if (this.RenderTimeSig) {\n      this.XOffset += 30;\n    }\n    this.TimeSignature.SetBounds(this);\n  }\n\n  CreateDivisions(cam: Camera, afterInput: boolean = false) {\n    this.Voices[this.ActiveVoice].Divisions = [];\n    this.Staves.forEach((s: Staff) => {\n      this.Voices[this.ActiveVoice].Divisions.push(\n        ...CreateDivisions(\n          this,\n          this.Voices[this.ActiveVoice].Notes,\n          s.Num,\n          cam,\n        ),\n      );\n      ResizeDivisions(this, this.Voices[this.ActiveVoice].Divisions, s.Num);\n      UpdateNoteBounds(this, s.Num);\n    });\n  }\n\n  Reposition(prevMsr: Measure): void {\n    this.Bounds.x = prevMsr.Bounds.x + prevMsr.Bounds.width + prevMsr.XOffset;\n    this.CreateDivisions(this.Camera);\n  }\n\n  GetMeasureHeight(): number {\n    return GetStaffHeightUntil(this.Staves);\n  }\n\n  AddNote(note: Note, fromInput: boolean = false): void {\n    if (note.Rest) {\n      this.ClearNonRestNotes(note.Beat, note.Staff);\n    } else {\n      this.ClearRestNotes(note.Beat, note.Staff);\n    }\n    note.SetID(this.RunningID.count);\n    this.RunningID.count++;\n    this.Voices[this.ActiveVoice].Notes.push(note);\n\n    if (fromInput) {\n      const msg: Message = {\n        messageString: \"AddNote\",\n        messageData: {\n          Message: {\n            msg: \"AddingNote\",\n            obj: note,\n          },\n          MessageType: MessageType.AddNote,\n        },\n      };\n      this.Message(msg);\n    }\n  }\n\n  ClearNonRestNotes(beat: number, staff: number): void {\n    for (let n = this.Voices[this.ActiveVoice].Notes.length - 1; n >= 0; n--) {\n      if (\n        this.Voices[this.ActiveVoice].Notes[n].Beat === beat &&\n        this.Voices[this.ActiveVoice].Notes[n].Rest === false &&\n        this.Voices[this.ActiveVoice].Notes[n].Staff === staff\n      ) {\n        this.Voices[this.ActiveVoice].Notes.splice(n, 1);\n      }\n    }\n  }\n\n  ClearRestNotes(beat: number, staff: number): void {\n    for (let n = this.Voices[this.ActiveVoice].Notes.length - 1; n >= 0; n--) {\n      if (\n        this.Voices[this.ActiveVoice].Notes[n].Beat === beat &&\n        this.Voices[this.ActiveVoice].Notes[n].Rest === true &&\n        this.Voices[this.ActiveVoice].Notes[n].Staff === staff\n      ) {\n        this.Voices[this.ActiveVoice].Notes.splice(n, 1);\n      }\n    }\n  }\n\n  ClearMeasure(ignoreNotes?: Note[]): void {\n    for (let n = this.Voices[this.ActiveVoice].Notes.length - 1; n >= 0; n--) {\n      if (\n        this.Voices[this.ActiveVoice].Notes[n].Editable &&\n        !ignoreNotes.includes(this.Voices[this.ActiveVoice].Notes[n])\n      ) {\n        this.Voices[this.ActiveVoice].Notes.splice(n, 1);\n      }\n    }\n  }\n\n  DeleteSelected(): void {\n    for (let n = this.Voices[this.ActiveVoice].Notes.length - 1; n >= 0; n--) {\n      if (\n        this.Voices[this.ActiveVoice].Notes[n].Selected &&\n        this.Voices[this.ActiveVoice].Notes[n].Editable\n      ) {\n        let beat = this.Voices[this.ActiveVoice].Notes[n].Beat;\n        let duration = this.Voices[this.ActiveVoice].Notes[n].Duration;\n        let staff = this.Voices[this.ActiveVoice].Notes[n].Staff;\n        let tuple = this.Voices[this.ActiveVoice].Notes[n].Tuple;\n        let tupleDetails = this.Voices[this.ActiveVoice].Notes[n].TupleDetails;\n        this.Voices[this.ActiveVoice].Notes.splice(n, 1);\n        const notesOnBeat = this.Voices[this.ActiveVoice].Notes.filter(\n          (n) => n.Beat === beat,\n        );\n        if (notesOnBeat.length === 0) {\n          const clefType = GetNoteClefType(this, beat, staff);\n          // beat is empty and requires a rest note\n          const restProps: NoteProps = {\n            Beat: beat,\n            Duration: duration,\n            Line: GetStaffMiddleLine(this.Staves, staff),\n            Rest: true,\n            Tied: false,\n            Staff: staff,\n            Tuple: tuple,\n            TupleDetails: tupleDetails,\n            Clef: clefType,\n            Grace: false,\n          };\n\n          this.AddNote(new Note(restProps));\n        }\n      }\n    }\n    for (let d = this.Dynamics.length - 1; d >= 0; d--) {\n      if (this.Dynamics[d].Selected) {\n        this.Dynamics.splice(d, 1);\n      }\n    }\n  }\n\n  GetMinimumWidth(): number {\n    if (\n      this.Voices[this.ActiveVoice].Notes.filter((n) => n.Rest !== true)\n        .length === 0\n    ) {\n      return DivisionMinWidth * 4;\n    }\n    const lowestVal = this.Voices[this.ActiveVoice].Notes.sort(\n      (a: Note, b: Note) => {\n        return a.Duration - b.Duration;\n      },\n    )[0];\n    const count = 1 / lowestVal.Duration;\n    return count * DivisionMinWidth;\n  }\n\n  ReturnSelectableElements(): ISelectable[] {\n    const sel: ISelectable[] = [];\n    sel.push(...this.Voices[this.ActiveVoice].Notes);\n    sel.push(...this.Clefs);\n    return sel;\n  }\n\n  IsHovered(x: number, y: number, cam: Camera): boolean {\n    return this.GetBoundsWithOffset().IsHovered(x, y, cam);\n  }\n\n  ChangeTimeSignature(top: number, bottom: number, transpose: boolean): void {\n    this.TimeSignature.top = top;\n    this.TimeSignature.bottom = bottom;\n  }\n\n  RecalculateBarlines(): void {\n    this.Barlines[0].Bounds = new Bounds(\n      this.Bounds.x,\n      this.Bounds.y,\n      10,\n      this.GetMeasureHeight(),\n    );\n\n    this.Barlines[1].Bounds = new Bounds(\n      this.Bounds.x + this.GetBoundsWithOffset().width - 10,\n      this.Bounds.y,\n      10,\n      this.GetMeasureHeight(),\n    );\n  }\n}\n\nexport { Measure, MeasureProps, Division, Clef };\n","import { Barline, BarlinePos, BarlineType } from \"../Core/Barline.js\";\nimport { Camera } from \"../Core/Camera.js\";\nimport { Instrument, StaffType } from \"../Core/Instrument.js\";\nimport { Clef, Measure, MeasureProps } from \"../Core/Measure.js\";\nimport { Page } from \"../Core/Page.js\";\nimport { Staff } from \"../Core/Staff.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { Message } from \"../Types/Message.js\";\nimport { ConfigSettings, MeasureSettings } from \"../entry.js\";\n\n// Defaults, these will be moved somewhere else but fine here for now\nconst sTopLine = 5;\nconst sBotLine = 24;\nconst lineHeight = 5;\n\nconst mh = (sBotLine - sTopLine) * lineHeight;\n\nconst CreateDefaultPiano = (): Instrument => {\n  const defaultPiano: Instrument = {\n    Position: { x: 0, y: 5 },\n    Staff: StaffType.Grand,\n    Staves: [new Staff(0), new Staff(1)],\n  };\n\n  return defaultPiano;\n};\n\nfunction CreateInstrument(y: number, config: ConfigSettings): Instrument {\n  let staff: StaffType = StaffType.Single;\n  if (config.DefaultStaffType) {\n    switch (config.DefaultStaffType) {\n      case \"rhythm\":\n        staff = StaffType.Rhythm;\n        break;\n      case \"grand\":\n        staff = StaffType.Grand;\n        break;\n      case \"single\":\n      default:\n        staff = StaffType.Single;\n    }\n  }\n  const instr: Instrument = {\n    Position: { x: 0, y: y },\n    Staff: staff,\n    Staves: [new Staff(0)],\n  };\n\n  return instr;\n}\n\nconst CreateDefaultMeasure = (\n  id: { count: number },\n  instr: Instrument,\n  page: Page,\n  cam: Camera,\n  callback: (msg: Message) => void,\n  settings?: MeasureSettings,\n): Measure => {\n  const msrHeight = instr.Staff === StaffType.Single ? mh * 2 : mh;\n  const props: MeasureProps = {\n    Instrument: instr,\n    Bounds: new Bounds(\n      instr.Position.x,\n      page.PageLines[0].LineBounds.y,\n      150,\n      msrHeight,\n    ),\n    TimeSignature: { top: 4, bottom: 4 },\n    KeySignature: \"DMaj/Bmin\",\n    Notes: [],\n    Clefs: [new Clef(0, \"treble\", 1, 0), new Clef(1, \"bass\", 1, 1)],\n    Staves: [new Staff(0), new Staff(1)],\n    RenderClef: true,\n    RenderTimeSig: true,\n    RenderKey: true,\n    Camera: cam,\n    Page: page,\n    Message: callback,\n    Settings: settings,\n    Barlines: [\n      new Barline(BarlinePos.START, BarlineType.SINGLE),\n      new Barline(BarlinePos.END, BarlineType.END),\n    ],\n  };\n  return new Measure(props, id);\n};\n\nconst CreateMeasure = (\n  instr: Instrument,\n  bounds: Bounds,\n  timeSignature: { top: number; bottom: number },\n  keySignature: string,\n  clef: Clef[],\n  staves: Staff[],\n  cam: Camera,\n  runningId: { count: number },\n  page: Page,\n  renderClef: boolean = false,\n  callback: (msg: Message) => void,\n  settings?: MeasureSettings,\n): Measure => {\n  const props: MeasureProps = {\n    Instrument: instr,\n    Bounds: bounds,\n    TimeSignature: timeSignature,\n    KeySignature: keySignature,\n    Notes: [],\n    Clefs: clef,\n    Staves: staves,\n    RenderClef: renderClef,\n    RenderTimeSig: false,\n    RenderKey: false,\n    Camera: cam,\n    Page: page,\n    Message: callback,\n    Settings: settings,\n    Barlines: [\n      new Barline(BarlinePos.START, BarlineType.SINGLE),\n      new Barline(BarlinePos.END, BarlineType.SINGLE),\n    ],\n  };\n  return new Measure(props, runningId);\n};\n\nexport {\n  CreateDefaultPiano,\n  CreateDefaultMeasure,\n  CreateMeasure,\n  CreateInstrument,\n};\n","import { Bounds } from \"../Types/Bounds.js\";\n\ninterface Margins {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n}\n\nconst defaultMargins: Margins = {\n  left: 40,\n  right: 40,\n  top: 40,\n  bottom: 40,\n};\n\ninterface PageLine {\n  Number: number;\n  YPos: number;\n  LineBounds: Bounds;\n}\n\ninterface MarginAdjuster {\n  Name: string;\n  Direction: string;\n  Bounds: Bounds;\n}\n\nconst scale = 6;\nconst a4w = 210 * scale;\nconst a4h = 297 * scale;\n\nclass Page {\n  Margins: Margins;\n  // TODO: Change to bounds later\n  Bounds: Bounds;\n  Number: number;\n  PageLines: PageLine[];\n  MarginAdj: MarginAdjuster[];\n  constructor(x: number, y: number, pageNum: number) {\n    this.Margins = defaultMargins;\n    this.MarginAdj = [];\n    this.Number = pageNum;\n    this.Bounds = new Bounds(x, y, a4w, a4h);\n    // left margin\n    this.MarginAdj.push({\n      Name: \"left\",\n      Direction: \"horizontal\",\n      Bounds: new Bounds(\n        this.Bounds.x + this.Margins.left - 12.5,\n        this.Bounds.y - 25,\n        25,\n        25,\n      ),\n    });\n    this.PageLines = [];\n    this.PageLines.push({\n      Number: 1,\n      YPos: y + this.Margins.top,\n      LineBounds: new Bounds(\n        this.Bounds.x - 50,\n        y + this.Margins.top - 12.5,\n        25,\n        25,\n      ),\n    });\n  }\n\n  // TODO Later will need to add ability to add lines in between others\n  // TODO Later will need to make line height adjustable/have formattable\n  // settings\n  AddLine(lineHeight: number): PageLine {\n    const latestLine = this.PageLines[this.PageLines.length - 1];\n    const newLine: PageLine = {\n      Number: latestLine.Number + 1,\n      YPos: this.Bounds.y + this.Margins.top,\n      LineBounds: new Bounds(\n        this.Bounds.x - 50,\n        latestLine.LineBounds.y + lineHeight - 12.5,\n        25,\n        25,\n      ),\n    };\n    this.PageLines.push(newLine);\n    return newLine;\n  }\n}\n\nexport { Page, MarginAdjuster };\n","import {\n  CreateDefaultMeasure,\n  CreateInstrument,\n} from \"../Factory/Instrument.Factory.js\";\nimport { UpdateNoteBounds } from \"../Workers/NoteInput.js\";\nimport { ConfigSettings, Message } from \"../entry.js\";\nimport { Camera } from \"./Camera.js\";\nimport { Instrument } from \"./Instrument.js\";\nimport { Division, Measure } from \"./Measure.js\";\nimport { Page } from \"./Page.js\";\nimport { Staff } from \"./Staff.js\";\n\ninterface SheetProps {\n  Instruments: Instrument[];\n  KeySignature: { key: string; measureNo: number }[];\n  Measures: Measure[];\n  Pages: Page[];\n}\nclass Sheet {\n  Instruments: Instrument[];\n  KeySignature: { key: string; measureNo: number }[];\n  Measures: Measure[];\n  Pages: Page[];\n\n  constructor(properties: SheetProps) {\n    this.Instruments = properties.Instruments;\n    this.KeySignature = properties.KeySignature;\n    this.Measures = properties.Measures;\n    this.Pages = properties.Pages;\n  }\n\n  InputHover(x: number, y: number, camera: Camera): void {\n    this.Measures.forEach((m: Measure) => {\n      if (m.GetBoundsWithOffset().IsHovered(x, y, camera)) {\n        m.Voices[m.ActiveVoice].Divisions.forEach((d: Division) => {\n          if (d.Bounds.IsHovered(x, y, camera)) {\n            m.Staves.forEach((s: Staff) => {\n              UpdateNoteBounds(m, s.Num);\n            });\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction CreateDefaultSheet(\n  config: ConfigSettings,\n  camera: Camera,\n  callback: (msg: Message) => void,\n): Sheet {\n  let newPage: Page = new Page(0, 0, 1);\n  if (config.PageSettings?.PageWidth) {\n    newPage.Bounds.width = config.PageSettings.PageWidth;\n  }\n\n  const sProps: SheetProps = {\n    Instruments: [],\n    KeySignature: [{ key: \"CMaj/Amin\", measureNo: 0 }],\n    Measures: [],\n    Pages: [newPage],\n  };\n\n  const page = sProps.Pages[0];\n\n  sProps.Instruments.push(CreateInstrument(20, config));\n  sProps.Measures.push(\n    CreateDefaultMeasure(\n      { count: 0 },\n      sProps.Instruments[0],\n      page,\n      camera,\n      callback,\n      config.MeasureSettings,\n    ),\n  );\n  return new Sheet(sProps);\n}\n\nexport { Sheet, SheetProps, CreateDefaultSheet };\n","import { Camera } from '../Core/Camera.js';\nimport { Measure } from '../Core/Measure.js';\nimport { Page } from '../Core/Page.js';\nimport { ConfigSettings } from '../Types/Config.js';\nfunction RenderPage(\n  page: Page,\n  canvas: HTMLCanvasElement,\n  context: CanvasRenderingContext2D,\n  cam: Camera,\n  formatting: boolean,\n  config: ConfigSettings,\n  measures: Measure[]): void {\n    const scale = 6;\n    // TODO: Change these variable names\n    let a4w = page.Bounds.width;//210 * scale;\n    let a4h = page.Bounds.height;//297 * scale;\n    const x = page.Bounds.x;\n    const y = page.Bounds.y;\n\n    if (config.PageSettings?.AutoSize) {\n      a4h = measures[measures.length-1].Bounds.y + measures[measures.length-1].GetMeasureHeight() + 40;\n      if (measures.length < 4) {\n        a4w = measures[measures.length-1].Bounds.x + measures[measures.length-1].GetBoundsWithOffset().width + 40;\n      }\n    }\n\n//    context.save();\n\n //   context.setTransform(1, 0, 0, 1, 0, 0);\n    context.filter = \"blur(4px)\";\n//    context.fillStyle = \"rgb(71, 71, 71)\";\n    context.fillStyle = config.Theme.PageShadowColour;// \"#0e1114\";\n    context.fillRect(x + cam.x - 4, y + cam.y + 4, a4w, a4h);\n    context.filter = \"none\";\n\n    context.fillStyle = config.Theme.PageColour;;\n    context.fillRect(x + cam.x, y + cam.y, a4w, a4h);\n\n    if (formatting) {\n    context.strokeStyle = \"rgba(51, 2, 16, 0.2)\";\n\n    // Render Margin Lines\n    // Left\n    context.beginPath();\n    context.setLineDash([10, 10]);\n    context.moveTo(x + page.Margins.left + cam.x, y + cam.y);\n    context.lineTo(x + page.Margins.left + cam.x, y + a4h + cam.y);\n    context.stroke();\n\n    // Right\n    context.beginPath();\n    context.setLineDash([10, 10]);\n    context.moveTo(x + a4w - page.Margins.right + cam.x, y + cam.y);\n    context.lineTo(x + a4w - page.Margins.right + cam.x, y + a4h + cam.y);\n    context.stroke();\n\n    // Top\n    context.beginPath();\n    context.setLineDash([10, 10]);\n    context.moveTo(x + cam.x, y + page.Margins.top + cam.y);\n    context.lineTo(x + a4w + cam.x, y + page.Margins.top + cam.y);\n    context.stroke();\n\n    // Bottom\n    context.beginPath();\n    context.setLineDash([10, 10]);\n    context.moveTo(x + cam.x, y + a4h - page.Margins.bottom + cam.y);\n    context.lineTo(x + a4w + cam.x, y + a4h - page.Margins.bottom + cam.y);\n    context.stroke();\n\n    // Reset stroke style\n    context.strokeStyle = \"black\";\n    const adjusterColour = \"rgba(51, 2, 16, 0.8)\";\n    const lineColour = \"rgba(2,51,16,0.8)\";\n\n    RenderAdjuster(x + page.Margins.right + cam.x, y + cam.y, \"down\", adjusterColour, context);\n    RenderAdjuster(x + a4w - page.Margins.left + cam.x, y + cam.y, \"down\", adjusterColour, context);\n\n    RenderAdjuster(x + cam.x, y + page.Margins.top + cam.y, \"right\", adjusterColour, context);\n    RenderAdjuster(x + a4w + cam.x, y + page.Margins.top + cam.y, \"left\", adjusterColour, context);\n\n    RenderAdjuster(x + cam.x, y + a4h - page.Margins.bottom + cam.y, \"right\", adjusterColour, context);\n    RenderAdjuster(x + a4w + cam.x, y + a4h - page.Margins.bottom + cam.y, \"left\", adjusterColour, context);\n\n    // Render Lines\n    page.PageLines.forEach(line => {\n      RenderAdjuster(x + cam.x - 25, y + line.LineBounds.y + cam.y + 12.5, \"right\", lineColour, context);\n      context.strokeStyle = lineColour;\n      context.beginPath();\n      context.setLineDash([10, 10]);\n      context.moveTo(x + cam.x, y + line.LineBounds.y + 12.5 + cam.y);\n      context.lineTo(x + a4w + cam.x, y + line.LineBounds.y + 12.5 + cam.y);\n      context.stroke();\n    });\n\n    // Render bounds\n    context.strokeRect(page.MarginAdj[0].Bounds.x + cam.x, page.MarginAdj[0].Bounds.y + cam.y,\n                       page.MarginAdj[0].Bounds.width, page.MarginAdj[0].Bounds.height);\n    context.stroke();\n    \n    }\n//    context.restore();\n  }\n\nfunction RenderAdjuster(x: number,\n                        y: number,\n                        dir: string,\n                        colour: string,\n                        context: CanvasRenderingContext2D): void {\n  const size = 9;\n  const buffer = 8;\n  const scale = 1.7;\n  context.fillStyle = colour;\n  context.beginPath();\n  // TODO: This is a little bit heeeinous\n  switch (dir) {\n    case \"down\":\n      context.moveTo(x, y - buffer);\n      context.lineTo(x - size, y - buffer - size * scale);\n      context.lineTo(x + size, y - buffer - size * scale);\n      break;\n    case \"right\":\n      context.moveTo(x - buffer, y);\n      context.lineTo(x - buffer - size * scale, y - size);\n      context.lineTo(x - buffer - size * scale, y + size);\n      break;\n    case \"left\":\n      context.moveTo(x + buffer, y);\n      context.lineTo(x + buffer + size * scale, y - size);\n      context.lineTo(x + buffer + size * scale, y + size);\n      break;\n    case \"up\":\n      context.moveTo(x, y + buffer);\n      context.lineTo(x - size, y + buffer + size * scale);\n      context.lineTo(x + size, y + buffer + size * scale);\n      break;\n    default:\n  }\n  context.fill();\n}\n\nexport { RenderPage }\n","import { RenderPanel } from \"../Renderers/Debug.Renderer.js\";\nimport { RenderMeasure } from \"../Renderers/Measure.Renderer.js\";\nimport { RenderPage } from \"../Renderers/Page.Renderer.js\";\nimport { ConfigSettings } from \"../Types/Config.js\";\nimport { Selector } from \"../Workers/Selector.js\";\nimport { RenderBarline } from \"./Barline.js\";\nimport { Camera } from \"./Camera.js\";\nimport { Measure } from \"./Measure.js\";\nimport { Page } from \"./Page.js\";\nimport { Sheet } from \"./Sheet.js\";\n\nconst renderDebug = false;\nconst scaleV = 1;\n\nconst Renderer = (\n  c: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  measures: Measure[],\n  pages: Page[],\n  mousePos: { x: number; y: number },\n  cam: Camera,\n  noteInput: boolean,\n  restInput: boolean,\n  formatting: boolean,\n  config: ConfigSettings,\n  noteValue: number,\n) => {\n  // reset\n  ctx.fillStyle = config.Theme.BackgroundColour; //\"grey\";252c38 16191f\n\n  ctx.save();\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.clearRect(0, 0, c.width, c.height);\n  if (config.PageSettings?.RenderBackground) {\n    ctx.fillRect(0, 0, c.width, c.height);\n  }\n  ctx.restore();\n  if (config.PageSettings?.RenderPage) {\n    pages.forEach((page) => {\n      RenderPage(page, c, ctx, cam, formatting, config, measures);\n    });\n  }\n  ctx.fillStyle = config.Theme.NoteElements;\n\n  measures.forEach((m: Measure, i: number) => {\n    const renderProps = {\n      canvas: c,\n      context: ctx,\n      camera: cam,\n    };\n    const lastMeasure =\n      i ===\n      measures.filter((msr: Measure) => m.Instrument === msr.Instrument)\n        .length -\n        1;\n\n    RenderMeasure(\n      m,\n      renderProps,\n      mousePos,\n      lastMeasure,\n      noteInput,\n      i,\n      restInput,\n      noteValue,\n      config,\n    );\n    if (i > 0) {\n      RenderBarline(renderProps, measures[i - 1], m, cam);\n    }\n    RenderBarline(renderProps, null, m, cam);\n    RenderBarline(renderProps, m, null, cam);\n  });\n};\n\nconst RenderDebug = (\n  c: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  sheet: Sheet,\n  mousePos: { x: number; y: number },\n  cam: Camera,\n  selector: Selector,\n): void => {\n  const renderProps = {\n    canvas: c,\n    context: ctx,\n    camera: cam,\n  };\n  //                 RenderPanel(renderProps);\n};\n\nexport { Renderer, RenderDebug };\n","import { ConfigSettings } from \"../Types/Config\";\n\nclass Camera {\n  Dragging: boolean;\n  DraggingX: number;\n  DraggingY: number;\n  x: number;\n  y: number;\n  oldX: number;\n  oldY: number;\n  Zoom: number;\n  constructor(x: number, y: number) {\n    this.Dragging = false;\n    this.x = x;\n    this.y = y;\n    this.oldX = x;\n    this.oldY = y;\n    this.Zoom = 1;\n  }\n\n  SetDragging(\n    drag: boolean,\n    x: number,\n    y: number,\n    config: ConfigSettings,\n    cam: Camera,\n  ): void {\n    if (config.CameraSettings?.DragEnabled === false) {\n      this.Dragging = false;\n      return;\n    }\n\n    this.Dragging = drag;\n    if (this.Dragging) {\n      this.DraggingX = x / cam.Zoom;\n      this.DraggingY = y / cam.Zoom;\n    } else {\n      this.DraggingX = 0.0;\n      this.DraggingY = 0.0;\n      this.oldX = this.x;\n      this.oldY = this.y;\n    }\n  }\n\n  DragCamera(mx: number, my: number): boolean {\n    if (!this.Dragging) {\n      return false;\n    }\n    this.x = Math.floor(this.oldX + mx - this.DraggingX);\n    this.y = Math.floor(this.oldY + my - this.DraggingY);\n    return true;\n  }\n\n  SetZoom(zoom: number): void {\n    this.Zoom = zoom;\n  }\n}\n\nexport { Camera };\n","import { Barline } from \"../Core/Barline.js\";\nimport { Camera } from \"../Core/Camera.js\";\nimport { DivGroup } from \"../Core/Division.js\";\nimport { Clef, Division, Measure } from \"../Core/Measure.js\";\nimport { Note } from \"../Core/Note.js\";\nimport { ISelectable, SelectableTypes } from \"../Types/ISelectable.js\";\nimport { Message, MessageType } from \"../Types/Message.js\";\nimport { UpdateNoteBounds } from \"./NoteInput.js\";\nclass Selector {\n  Measures: Measure[];\n  Clefs: Clef[];\n  // Notes: { msr: Measure, note: Note }[];\n  Notes: Map<Measure, Note[]>;\n  // Selectable { msr: Measure, sel: Selectable[]>\n  // Currently having these mapped to a measure is okay but may need a refactor\n  // later down the line\n  Elements: Map<Measure, ISelectable[]>;\n  constructor() {\n    this.Measures = [];\n    this.Clefs = [];\n    this.Notes = new Map<Measure, Note[]>();\n    this.Elements = new Map<Measure, ISelectable[]>();\n  }\n\n  TrySelectElement(\n    msr: Measure,\n    x: number,\n    y: number,\n    cam: Camera,\n    shiftKey: boolean,\n    msg: (msg: Message) => void,\n    elems: Map<Measure, ISelectable[]>,\n  ): ISelectable {\n    let elem: ISelectable; // element we have selected\n    let elements: ISelectable[] = [];\n    let selectedElements: ISelectable[] = this.Elements.get(msr)\n      ? this.Elements.get(msr)\n      : [];\n    // if (!shiftKey) {\n    //   this.DeselectAllElements();\n    // }\n    UpdateNoteBounds(msr, 0);\n    elements.push(...msr.Voices[msr.ActiveVoice].Notes);\n    elements.push(...msr.Clefs);\n    msr.Voices[msr.ActiveVoice].DivisionGroups.forEach((g: DivGroup) => {\n      elements.push(...g.Stems);\n      elements.push(...g.Beams);\n    });\n    elements.push(...msr.Barlines);\n    elements.push(...msr.Dynamics);\n    elements.push(msr.TimeSignature);\n    elements.forEach((e: ISelectable) => {\n      if (e.IsHovered(x, y, cam) && e.Selected === false) {\n        e.Selected = true;\n        selectedElements.push(e);\n        if (e.SelType === SelectableTypes.Note) {\n          const n = e as Note;\n          const m: Message = {\n            messageData: {\n              MessageType: MessageType.Selection,\n              Message: {\n                msg: \"selected\",\n                obj: n,\n              },\n            },\n            messageString: \"Selected Note\",\n          };\n          msg(m);\n          if (n.Tied) {\n            const tiedNotes = SelectTiedNotes(n, msr) as ISelectable[];\n            selectedElements.push(...tiedNotes);\n          }\n        }\n        elem = e;\n        this.Elements.set(msr, selectedElements);\n      }\n    });\n    return elem;\n  }\n\n  DeselectAllElements(\n    elems: Map<Measure, ISelectable[]>,\n  ): Map<Measure, ISelectable[]> {\n    for (let [measure, elem] of elems) {\n      elem.forEach((e: ISelectable) => {\n        e.Selected = false;\n      });\n      elems.delete(measure);\n    }\n\n    return new Map<Measure, ISelectable[]>();\n  }\n\n  SelectElement(): ISelectable {\n    let elem: ISelectable; // element we have selected\n\n    return elem;\n  }\n\n  DeselectAll(): void {\n    // TODO: Measure selection\n    for (let [measure, notes] of this.Notes) {\n      notes.forEach((note) => {\n        note.Selected = false;\n      });\n      this.Notes.delete(measure);\n    }\n\n    // This should replace the above eventually\n    for (let [measure, elem] of this.Elements) {\n      elem.forEach((e) => {\n        e.Selected = false;\n      });\n      this.Elements.delete(measure);\n    }\n  }\n\n  DeselectNote(note: Note): void {\n    let noteIndex = -1;\n    for (let [msr, notes] of this.Notes) {\n      notes.forEach((note: Note, i: number) => {\n        if (note === note) {\n          noteIndex = i;\n        }\n      });\n      if (noteIndex >= 0) {\n        this.RemoveDeselected([noteIndex], msr);\n      }\n    }\n  }\n\n  RemoveDeselected(indexes: number[], key: Measure): void {\n    indexes.sort();\n    for (let i = indexes.length - 1; i >= 0; i--) {\n      this.Notes.get(key).splice(i, 1);\n    }\n    if (this.Notes.get(key).length === 0) {\n      this.Notes.delete(key);\n    }\n  }\n\n  SelectById(measures: Measure[], id: number): ISelectable {\n    let selectable: ISelectable;\n    this.DeselectAll();\n    measures.forEach((m) => {\n      // check here for measure selection when implemented\n      // maybe also div/beam/stem/clef/sig/artic etc.\n      m.Voices[m.ActiveVoice].Notes.forEach((n) => {\n        if (n.ID === id) {\n          n.Selected = true;\n          selectable = n;\n          let nArray = [];\n          nArray.push(n);\n          if (n.Tied) {\n            nArray.push(...SelectTiedNotes(n, m));\n          }\n          this.Elements.set(m, nArray);\n        }\n      });\n    });\n    return selectable;\n  }\n\n  SelectMeasure(msr: Measure): void {\n    if (this.Measures.find((m) => m.ID === msr.ID)) {\n      const index = this.Measures.indexOf(msr);\n      msr.Selected = false;\n      this.Measures.splice(index, 1);\n    } else {\n      this.Measures.push(msr);\n      msr.Selected = true;\n    }\n  }\n\n  // This should all be fairly generic eventually?\n  SelectClef(clef: Clef): void {\n    if (this.Clefs.find((c) => c.ID === clef.ID)) {\n      const index = this.Clefs.indexOf(clef);\n      clef.Selected = false;\n      this.Clefs.splice(index, 1);\n    } else {\n      this.Clefs.map((c) => (c.Selected = false));\n      this.Clefs = [];\n      this.Clefs.push(clef);\n      clef.Selected = true;\n    }\n  }\n\n  SelectNote(\n    msr: Measure,\n    x: number,\n    y: number,\n    cam: Camera,\n    shiftKey: boolean,\n  ): boolean {\n    let noteHit = false;\n    msr.Voices[msr.ActiveVoice].Divisions.forEach((div: Division) => {\n      const divNotes = msr.Voices[msr.ActiveVoice].Notes.filter(\n        (note: Note) => note.Beat === div.Beat,\n      );\n      divNotes.forEach((n: Note) => {\n        const noteBounds = n.Bounds;\n        if (noteBounds.IsHovered(x, y, cam)) {\n          n.Selected = true;\n          if (this.Notes.has(msr)) {\n            let nArray = this.Notes.get(msr);\n            if (!nArray.find((na) => na === n)) {\n              nArray.push(n);\n              if (n.Tied) {\n                nArray.push(...SelectTiedNotes(n, msr));\n              }\n              this.Notes.set(msr, nArray);\n            }\n          } else {\n            let nArray = [];\n            nArray.push(n);\n            if (n.Tied) {\n              nArray.push(...SelectTiedNotes(n, msr));\n            }\n            this.Notes.set(msr, nArray);\n          }\n          noteHit = true;\n        } else {\n          if (n.Selected && !shiftKey) {\n            let deselect = true;\n            if (n.Tied) {\n              const tiedNotes = msr.Voices[msr.ActiveVoice].Notes.filter(\n                (note) => {\n                  return (\n                    note !== n &&\n                    note.Beat >= n.TiedStart &&\n                    note.Beat <= n.TiedEnd &&\n                    note.Line === n.Line &&\n                    note.Staff === n.Staff &&\n                    note.Selected === true\n                  );\n                },\n              );\n              deselect = tiedNotes.length === 0;\n            }\n            if (deselect) {\n              this.DeselectNote(n);\n              n.Selected = false;\n            }\n          }\n        }\n      });\n    });\n    if (!noteHit && !shiftKey) {\n      this.DeselectAll();\n      return false;\n    }\n    return true;\n  }\n}\n\nfunction SelectTiedNotes(n: Note, msr: Measure): Note[] {\n  let nArray: Note[] = [];\n  let tStart = n.TiedStart;\n  let tEnd = n.TiedEnd;\n  const tiedNotes = msr.Voices[msr.ActiveVoice].Notes.filter((note) => {\n    return (\n      note !== n &&\n      note.Beat >= tStart &&\n      note.Beat <= tEnd &&\n      note.Staff === n.Staff &&\n      note.Line === n.Line\n    );\n  });\n  tiedNotes.forEach((tn) => {\n    tn.Selected = true;\n    nArray.push(tn);\n  });\n  return nArray;\n}\n\nexport { Selector };\n","const canonSave = '{\"Measures\":[{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":2,\"Beat\":1,\"Duration\":0.5,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":5,\"Beat\":1,\"Duration\":0.5,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":66,\"Beat\":1,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":70,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":71,\"Beat\":2,\"Duration\":0.125,\"Line\":1037,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":73,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":6,\"Beat\":3,\"Duration\":0.25,\"Line\":13,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":8,\"Beat\":3,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":9,\"Beat\":3,\"Duration\":0.25,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":74,\"Beat\":3,\"Duration\":0.125,\"Line\":1047,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":77,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":10,\"Beat\":4,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":78,\"Beat\":4,\"Duration\":0.125,\"Line\":1038,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":80,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":100,\"y\":87.5,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":17,\"Beat\":1,\"Duration\":0.25,\"Line\":19,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":20,\"Beat\":1,\"Duration\":0.25,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":21,\"Beat\":1,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":81,\"Beat\":1,\"Duration\":0.125,\"Line\":1048,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":84,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":22,\"Beat\":2,\"Duration\":0.25,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":85,\"Beat\":2,\"Duration\":0.125,\"Line\":1039,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":87,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":23,\"Beat\":3,\"Duration\":0.25,\"Line\":10,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":25,\"Beat\":3,\"Duration\":0.25,\"Line\":13,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":26,\"Beat\":3,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":88,\"Beat\":3,\"Duration\":0.125,\"Line\":1049,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":91,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":27,\"Beat\":4,\"Duration\":0.25,\"Line\":9,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":92,\"Beat\":4,\"Duration\":0.125,\"Line\":1040,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":94,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":423.3333333333333,\"y\":87.5,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":30,\"Beat\":1,\"Duration\":0.25,\"Line\":11,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":33,\"Beat\":1,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":34,\"Beat\":1,\"Duration\":0.25,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":95,\"Beat\":1,\"Duration\":0.125,\"Line\":1050,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":99,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":35,\"Beat\":2,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":100,\"Beat\":2,\"Duration\":0.125,\"Line\":1041,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":102,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":36,\"Beat\":3,\"Duration\":0.5,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":37,\"Beat\":3,\"Duration\":0.5,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":38,\"Beat\":3,\"Duration\":0.5,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":103,\"Beat\":3,\"Duration\":0.125,\"Line\":1051,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":106,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":107,\"Beat\":4,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":109,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":686.6666666666666,\"y\":87.5,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":41,\"Beat\":1,\"Duration\":0.25,\"Line\":21,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":44,\"Beat\":1,\"Duration\":0.25,\"Line\":18,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":45,\"Beat\":1,\"Duration\":0.25,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":110,\"Beat\":1,\"Duration\":0.125,\"Line\":1050,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":114,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":46,\"Beat\":2,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":115,\"Beat\":2,\"Duration\":0.125,\"Line\":1041,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":117,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":52,\"Beat\":3,\"Duration\":0.25,\"Line\":20,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":53,\"Beat\":3,\"Duration\":0.25,\"Line\":19,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":118,\"Beat\":3,\"Duration\":0.125,\"Line\":1049,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":121,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":55,\"Beat\":4,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":122,\"Beat\":4,\"Duration\":0.125,\"Line\":1040,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":57,\"Beat\":4.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":124,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":100,\"y\":375,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":125,\"Beat\":1,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":173,\"Beat\":1,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":129,\"Beat\":1.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":177,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":130,\"Beat\":2,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":178,\"Beat\":2,\"Duration\":0.125,\"Line\":1037,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":180,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":131,\"Beat\":3,\"Duration\":0.25,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":181,\"Beat\":3,\"Duration\":0.125,\"Line\":1047,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":184,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":133,\"Beat\":4,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":185,\"Beat\":4,\"Duration\":0.125,\"Line\":1038,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":187,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":423.3333333333333,\"y\":375,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":134,\"Beat\":1,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":188,\"Beat\":1,\"Duration\":0.125,\"Line\":1048,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":192,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":137,\"Beat\":2,\"Duration\":0.25,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":193,\"Beat\":2,\"Duration\":0.125,\"Line\":1039,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":195,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":138,\"Beat\":3,\"Duration\":0.125,\"Line\":10,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":196,\"Beat\":3,\"Duration\":0.125,\"Line\":1049,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":141,\"Beat\":3.5,\"Duration\":0.125,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":199,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":142,\"Beat\":4,\"Duration\":0.125,\"Line\":10,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":200,\"Beat\":4,\"Duration\":0.125,\"Line\":1040,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":144,\"Beat\":4.5,\"Duration\":0.125,\"Line\":9,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":202,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":686.6666666666666,\"y\":375,\"width\":263.3333333333333,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":145,\"Beat\":1,\"Duration\":0.125,\"Line\":11,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":203,\"Beat\":1,\"Duration\":0.125,\"Line\":1050,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":149,\"Beat\":1.5,\"Duration\":0.125,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":207,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":150,\"Beat\":2,\"Duration\":0.125,\"Line\":13,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":208,\"Beat\":2,\"Duration\":0.125,\"Line\":1041,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":152,\"Beat\":2.5,\"Duration\":0.125,\"Line\":11,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":210,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":153,\"Beat\":3,\"Duration\":0.125,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":211,\"Beat\":3,\"Duration\":0.125,\"Line\":1051,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":156,\"Beat\":3.5,\"Duration\":0.125,\"Line\":13,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":214,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":157,\"Beat\":4,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":215,\"Beat\":4,\"Duration\":0.125,\"Line\":1042,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":159,\"Beat\":4.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":217,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":100,\"y\":662.5,\"width\":395,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":160,\"Beat\":1,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":218,\"Beat\":1,\"Duration\":0.125,\"Line\":1050,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":164,\"Beat\":1.5,\"Duration\":0.125,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":222,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":165,\"Beat\":2,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":223,\"Beat\":2,\"Duration\":0.125,\"Line\":1041,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":167,\"Beat\":2.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":225,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":168,\"Beat\":3,\"Duration\":0.25,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":226,\"Beat\":3,\"Duration\":0.125,\"Line\":1049,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":229,\"Beat\":3.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":170,\"Beat\":4,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":230,\"Beat\":4,\"Duration\":0.125,\"Line\":1040,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":172,\"Beat\":4.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":232,\"Beat\":4.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":555,\"y\":662.5,\"width\":395,\"height\":190},\"ShowClef\":false,\"ShowTime\":false}]}';\nconst randomSaveOne = '{\"Measures\":[{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":2,\"Beat\":1,\"Duration\":0.03125,\"Line\":18,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":54,\"Beat\":1,\"Duration\":0.125,\"Line\":1047,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":8,\"Beat\":1.125,\"Duration\":0.03125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":9,\"Beat\":1.5,\"Duration\":0.03125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":12,\"Beat\":1.625,\"Duration\":0.03125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":13,\"Beat\":2,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":58,\"Beat\":2,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":15,\"Beat\":2.5,\"Duration\":0.125,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":16,\"Beat\":3,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":60,\"Beat\":3,\"Duration\":0.125,\"Line\":1047,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":19,\"Beat\":3.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0}],\"Bounds\":{\"x\":100,\"y\":87.5,\"width\":383.3333333333333,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":22,\"Beat\":1,\"Duration\":0.0625,\"Line\":18,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":63,\"Beat\":1,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":27,\"Beat\":1.25,\"Duration\":0.0625,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":28,\"Beat\":1.5,\"Duration\":0.0625,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":30,\"Beat\":1.75,\"Duration\":0.0625,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":67,\"Beat\":2,\"Duration\":0.125,\"Line\":1048,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":69,\"Beat\":2.5,\"Duration\":0.125,\"Line\":1045,\"Rest\":false,\"Tied\":false,\"Staff\":1}],\"Bounds\":{\"x\":543.3333333333333,\"y\":87.5,\"width\":233.33333333333334,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":33,\"Beat\":1,\"Duration\":0.25,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":70,\"Beat\":1,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":74,\"Beat\":1.5,\"Duration\":0.125,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":36,\"Beat\":2,\"Duration\":0.25,\"Line\":15,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":37,\"Beat\":3,\"Duration\":0.25,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0}],\"Bounds\":{\"x\":776.6666666666666,\"y\":87.5,\"width\":173.33333333333334,\"height\":190},\"ShowClef\":false,\"ShowTime\":false},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":41,\"Beat\":1,\"Duration\":0.25,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":75,\"Beat\":1,\"Duration\":0.125,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":44,\"Beat\":2,\"Duration\":0.125,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":89,\"Beat\":2,\"Duration\":0.25,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":46,\"Beat\":2.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":47,\"Beat\":3,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":91,\"Beat\":3,\"Duration\":0.25,\"Line\":1043,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":50,\"Beat\":3.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":51,\"Beat\":4,\"Duration\":0.125,\"Line\":17,\"Rest\":false,\"Tied\":false,\"Staff\":0},{\"ID\":92,\"Beat\":4,\"Duration\":0.25,\"Line\":1044,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":53,\"Beat\":4.5,\"Duration\":0.125,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0}],\"Bounds\":{\"x\":100,\"y\":375,\"width\":485,\"height\":190},\"ShowClef\":true,\"ShowTime\":true},{\"Clef\":\"treble\",\"TimeSignature\":{\"top\":4,\"bottom\":4},\"Notes\":[{\"ID\":85,\"Beat\":1,\"Duration\":1,\"Line\":1046,\"Rest\":false,\"Tied\":false,\"Staff\":1},{\"ID\":86,\"Beat\":1,\"Duration\":1,\"Line\":14,\"Rest\":false,\"Tied\":false,\"Staff\":0}],\"Bounds\":{\"x\":645,\"y\":375,\"width\":305,\"height\":190},\"ShowClef\":false,\"ShowTime\":false}]}';\nconst intervalTest = '{\"Measures\":[{\"Clef\":\"treble\",\"TimeSignature\":{\"Selected\":false,\"SelType\":3,\"top\":4,\"bottom\":4,\"TopPosition\":{\"x\":35,\"y\":37.5},\"BotPosition\":{\"x\":35,\"y\":57.5},\"GTopPosition\":{\"x\":35,\"y\":132.5},\"GBotPosition\":{\"x\":35,\"y\":152.5},\"Bounds\":{\"x\":35,\"y\":27.5,\"width\":30,\"height\":50},\"GBounds\":{\"x\":35,\"y\":122.5,\"width\":30,\"height\":50}},\"Notes\":[{\"ID\":1,\"Beat\":1,\"Duration\":0.5,\"Line\":16,\"Rest\":false,\"Tied\":false,\"Staff\":0,\"Clef\":\"treble\"},{\"ID\":3,\"Beat\":3,\"Duration\":0.5,\"Line\":12,\"Rest\":false,\"Tied\":false,\"Staff\":0,\"Clef\":\"treble\"}],\"Bounds\":{\"x\":0,\"y\":-2.5,\"width\":250,\"height\":95},\"ShowClef\":true,\"ShowTime\":true}]}'\n\ninterface saveFile {\n  name: string;\n  file: string;\n}\nconst allSaves: saveFile[] = [\n  {name: \"Canon in C\", file: canonSave},\n  {name: \"Random FIle One\", file: randomSaveOne}\n]\n\nexport { canonSave, randomSaveOne, intervalTest, allSaves, saveFile }\n","import { App } from \"../App.js\";\nimport { NoteValues } from \"../Core/Values.js\";\nimport { allSaves } from \"../testsaves.js\";\n\ninterface KeyMapping {\n  addmeasure: string;\n  changeinputmode: string;\n  value1: string;\n  value2: string;\n  value3: string;\n  value4: string;\n  value5: string;\n  value6: string;\n  restInput: string;\n  delete: string;\n  sharpen: string;\n  flatten: string;\n  scaleToggle: string;\n  save: string;\n  load: string;\n  test_triplet: string;\n  debug_clear: string;\n  beam: string;\n  grace: string;\n  change_timesig: string; // TEST KEYMAP\n  add_dynamic: string;\n  cycle_voice: string;\n}\n\nfunction KeyPress(app: App, key: string, keyMaps: KeyMapping): void {\n  switch (key) {\n    case keyMaps.addmeasure:\n      app.AddMeasure();\n      break;\n    case keyMaps.changeinputmode:\n      app.ChangeInputMode();\n      break;\n    //TODO: change value1-6 to note types (crotchet, quaver etc.)\n    case keyMaps.value1:\n      app.SetNoteValue(0.03125);\n      break;\n    case keyMaps.value2:\n      app.SetNoteValue(0.0625);\n      break;\n    case keyMaps.value3:\n      app.SetNoteValue(0.125);\n      break;\n    case keyMaps.value4:\n      app.SetNoteValue(0.25);\n      break;\n    case keyMaps.value5:\n      app.SetNoteValue(0.5);\n      break;\n    case keyMaps.value6:\n      app.SetNoteValue(NoteValues.n1);\n      break;\n    case keyMaps.restInput:\n      //TODO: Prob change this\n      app.RestInput = !app.RestInput;\n      break;\n    case keyMaps.delete:\n      app.Delete();\n      break;\n    case keyMaps.sharpen:\n      app.Sharpen();\n      break;\n    case keyMaps.flatten:\n      app.Flatten();\n      break;\n    case keyMaps.scaleToggle:\n      //app.ScaleToggle();\n      break;\n    case keyMaps.save:\n      app.Save();\n      break;\n    case keyMaps.load:\n      app.LoadSheet(allSaves[0].file);\n      break;\n    case keyMaps.test_triplet:\n      app.CreateTriplet();\n      break;\n    case keyMaps.debug_clear:\n      localStorage.removeItem(\"persist\");\n      localStorage.removeItem(\"camera_data\");\n      break;\n    case keyMaps.beam:\n      app.BeamSelectedNotes();\n      break;\n    case keyMaps.grace:\n      app.GraceInput = !app.GraceInput;\n      break;\n    case keyMaps.change_timesig:\n      app.ChangeTimeSig();\n      break;\n    case keyMaps.add_dynamic:\n      app.AddDynamic(\"f\");\n      break;\n    case keyMaps.cycle_voice:\n      app.CycleActiveVoice();\n    default:\n  }\n}\n\nexport { KeyMapping, KeyPress };\n","import { Camera } from \"../Core/Camera.js\";\nimport { StaffType } from \"../Core/Instrument.js\";\nimport { Measure } from \"../Core/Measure.js\";\nimport { MarginAdjuster, Page } from \"../Core/Page.js\";\nimport { ConfigSettings } from \"../Types/Config.js\";\n\n// TODO: Add pages when necessary but for now we do just lines\nfunction SetPagesAndLines(\n  measures: Measure[],\n  pages: Page,\n  usePage: boolean | null,\n  defaultLineHeight: number = 650,\n): void {\n  let page: Page = pages;\n  if (!page) {\n    console.error(\"No page found!\");\n    return;\n  }\n  let runningWidth = 0;\n  let currentPage = 0;\n  let currentLine = 1;\n  let msrsOnLine = 0;\n  let pageWidth = page.Bounds.width - (page.Margins.left + page.Margins.right);\n\n  if (usePage === false && usePage !== null) {\n    // set each measure to line 1\n    measures.forEach((m) => {\n      m.PageLine = currentLine;\n    });\n    return;\n  }\n  measures.forEach((msr: Measure) => {\n    msrsOnLine++;\n    const msrWidth = msr.GetMinimumWidth() + msr.XOffset;\n    if (runningWidth + msrWidth > pageWidth || msrsOnLine > 4) {\n      currentLine++;\n      msrsOnLine = 1;\n      if (pages.PageLines.length < currentLine) {\n        pages.AddLine(defaultLineHeight);\n      }\n      runningWidth = 0;\n    }\n    runningWidth += msrWidth;\n    msr.Page = pages[currentPage];\n    msr.PageLine = currentLine;\n  });\n}\n\nfunction GetMaxWidth(page: Page, config: ConfigSettings, cam: Camera): number {\n  let maxWidth = 0;\n  if (config.FormatSettings?.MeasureFormatSettings?.MaxWidth) {\n    maxWidth = config.FormatSettings.MeasureFormatSettings.MaxWidth;\n  } else {\n    maxWidth = page.Bounds.width;\n  }\n  return maxWidth;\n}\n\nfunction ResizeMeasuresOnPage(\n  measures: Measure[],\n  page: Page,\n  cam: Camera,\n  config: ConfigSettings,\n): void {\n  const pageSize = page.Bounds.width - (page.Margins.left + page.Margins.right);\n  page.PageLines.forEach((line) => {\n    const msrs = measures.filter((m) => m.PageLine === line.Number);\n    let msrsLineWidth = 0;\n    msrs.forEach((m: Measure, i: number) => {\n      msrsLineWidth += m.GetMinimumWidth() + m.XOffset;\n    });\n    const fillWidth = pageSize - msrsLineWidth;\n    msrs.forEach((m: Measure, i: number) => {\n      m.Bounds.y = line.LineBounds.y;\n      // TODO: We have removed prefboundsY, will likely have to reimplement\n      //     m.PrefBoundsY = m.Bounds.y;\n      if (i === 0) {\n        m.Bounds.x = page.Bounds.x + page.Margins.left;\n        m.RenderClef = m.Instrument.Staff === StaffType.Rhythm ? false : true;\n        m.RenderTimeSig = true;\n        // TODO: When we work on keys\n        m.RenderKey = true;\n        m.SetXOffset();\n        // the calculated new width of the measure, may need to be overwritten\n        // by config settings if they are set (maxWidth in\n        // measureformatsettings)\n        const maxWidth = GetMaxWidth(page, config, cam);\n        const calculatedWidth = m.GetMinimumWidth() + fillWidth / msrs.length;\n        let mWidth = 0;\n        if (calculatedWidth < maxWidth) {\n          mWidth = calculatedWidth;\n        } else {\n          mWidth = maxWidth;\n        }\n        m.Bounds.width = mWidth;\n        m.CreateDivisions(cam);\n      } else {\n        m.RenderClef = false;\n        m.RenderTimeSig = false;\n        m.RenderKey = false;\n        m.SetXOffset();\n        const maxWidth = GetMaxWidth(page, config, cam);\n        const calculatedWidth = m.GetMinimumWidth() + fillWidth / msrs.length;\n        var msrWidth = calculatedWidth;\n        // Limit the width if the calculated width exceeds the maximum\n        if (calculatedWidth > maxWidth) {\n          msrWidth = maxWidth;\n        }\n        m.Bounds.width = msrWidth;\n        msrs[i].Reposition(msrs[i - 1]);\n        m.CreateDivisions(cam);\n      }\n      m.Clefs.forEach((c) => {\n        c.SetBounds(m, c.Staff);\n      });\n      m.TimeSignature.SetBounds(m);\n    });\n  });\n}\n\nfunction GetAdjuster(\n  x: number,\n  y: number,\n  page: Page,\n  cam: Camera,\n): MarginAdjuster | undefined {\n  let adjuster: MarginAdjuster;\n  page.MarginAdj.forEach((adj: MarginAdjuster) => {\n    if (adj.Bounds.IsHovered(x, y, cam)) {\n      // TODO: Complete\n    }\n  });\n  return adjuster;\n}\n\nexport { SetPagesAndLines, ResizeMeasuresOnPage };\n","import { Camera } from \"../Core/Camera.js\";\nimport { Instrument, StaffType } from \"../Core/Instrument.js\";\nimport { Clef, Measure } from \"../Core/Measure.js\";\nimport { Note, NoteProps } from \"../Core/Note.js\";\nimport { Page } from \"../Core/Page.js\";\nimport { Sheet } from \"../Core/Sheet.js\";\nimport { Staff } from \"../Core/Staff.js\";\nimport { CreateMeasure } from \"../Factory/Instrument.Factory.js\";\nimport { Bounds } from \"../Types/Bounds.js\";\nimport { Message } from \"../Types/Message.js\";\n\ninterface lNote {\n  ID: number;\n  Beat: number;\n  Duration: number;\n  Line: number;\n  Rest: boolean;\n  Tied: boolean;\n  Staff: number;\n  Clef: string;\n  Editable?: boolean;\n  Grace: boolean;\n}\ninterface lMeasure {\n  Clefs: Clef[];\n  Staves: Staff[];\n  TimeSignature: { top: number; bottom: number };\n  KeySignature: string;\n  Notes: lNote[];\n  Bounds: Bounds;\n  ShowClef: boolean;\n  ShowTime: boolean;\n}\ninterface LoadStructure {\n  Measures: lMeasure[];\n}\n\nconst LoadSheet = (\n  sheet: Sheet,\n  page: Page,\n  cam: Camera,\n  instr: Instrument,\n  savedJson: string,\n  callback: (msg: Message) => void,\n) => {\n  let runningId = { count: 0 };\n  // TODO: this could error\n  const loaded: LoadStructure = JSON.parse(savedJson);\n  // loading onto a single instrument to begin with\n  loaded.Measures.forEach((m: lMeasure, i: number) => {\n    //   const msr = CreateDefaultMeasure(runningId, instr, page, cam);\n    // TODO: Temporary\n    if (instr.Staff === StaffType.Rhythm) {\n      m.ShowClef = false;\n    }\n    const notes: Note[] = [];\n    m.Notes.forEach((n: lNote, i: number) => {\n      const noteProps: NoteProps = {\n        Beat: n.Beat,\n        Duration: n.Duration,\n        Line: n.Line,\n        Rest: n.Rest,\n        Tied: n.Tied,\n        Staff: n.Staff,\n        Tuple: false,\n        Clef: n.Clef,\n        Editable: true,\n        Grace: n.Grace,\n      };\n      const newNote = new Note(noteProps);\n      notes.push(newNote);\n    });\n    const msr = CreateMeasure(\n      instr,\n      m.Bounds,\n      m.TimeSignature,\n      m.KeySignature,\n      m.Clefs,\n      m.Staves,\n      cam,\n      runningId,\n      page,\n      m.ShowClef,\n      callback,\n    );\n    msr.Voices[msr.ActiveVoice].Notes = notes;\n    sheet.Measures.push(msr);\n    msr.CreateDivisions(cam);\n  });\n};\n\nconst SaveSheet = (sheet: Sheet): string => {\n  let saved: LoadStructure = {\n    Measures: [],\n  };\n  sheet.Measures.forEach((m: Measure, i: number) => {\n    let notes: lNote[] = [];\n    m.Voices[m.ActiveVoice].Notes.forEach((n: Note, i: number) => {\n      if (n.Rest) {\n        return;\n      }\n      notes.push({\n        ID: n.ID,\n        Beat: n.Beat,\n        Duration: n.Duration,\n        Line: n.Line,\n        Rest: n.Rest,\n        Tied: n.Tied,\n        Staff: n.Staff,\n        Clef: n.Clef,\n        Editable: true,\n        Grace: n.Grace,\n      });\n    });\n    saved.Measures.push({\n      Clefs: m.Clefs,\n      Staves: m.Staves,\n      TimeSignature: m.TimeSignature,\n      KeySignature: m.KeySignature,\n      Notes: notes,\n      Bounds: m.Bounds,\n      ShowClef: m.RenderClef,\n      ShowTime: m.RenderTimeSig,\n    });\n  });\n\n  //  console.log(JSON.stringify(saved));\n  return JSON.stringify(saved);\n};\n\nexport { LoadSheet, SaveSheet, LoadStructure, lNote, lMeasure };\n","import { CreateDefaultSheet, Sheet } from \"./Core/Sheet.js\";\nimport { RenderDebug, Renderer } from \"./Core/Renderer.js\";\nimport { CreateMeasure } from \"./Factory/Instrument.Factory.js\";\nimport { Clef, Division, Measure } from \"./Core/Measure.js\";\nimport { Bounds } from \"./Types/Bounds.js\";\nimport { Note } from \"./Core/Note.js\";\nimport { Camera } from \"./Core/Camera.js\";\nimport {\n  AddNoteOnMeasure,\n  CreateTuplet,\n  InputOnMeasure,\n  RecreateDivisionGroups,\n  UpdateNoteBounds,\n} from \"./Workers/NoteInput.js\";\nimport { Selector } from \"./Workers/Selector.js\";\nimport { StaffType } from \"./Core/Instrument.js\";\nimport { KeyMapping, KeyPress } from \"./Workers/Mappings.js\";\nimport { ISelectable, SelectableTypes } from \"./Types/ISelectable.js\";\nimport { ResizeMeasuresOnPage, SetPagesAndLines } from \"./Workers/Formatter.js\";\nimport { LoadSheet, SaveSheet } from \"./Workers/Loader.js\";\nimport { allSaves, saveFile } from \"./testsaves.js\";\nimport { ClearMessage, Message, MessageType } from \"./Types/Message.js\";\nimport {\n  FromPitchMap,\n  GeneratePitchMap,\n  MappedMidi,\n} from \"./Workers/Pitcher.js\";\nimport { ConfigSettings } from \"./Types/Config.js\";\nimport { GetStaffHeightUntil, Staff } from \"./Core/Staff.js\";\nimport { Barline, BarlinePos, BarlineType } from \"./Core/Barline.js\";\nimport { Dynamic } from \"./Core/Dynamic.js\";\n\nclass App {\n  Config: ConfigSettings;\n  Message: Message;\n  Canvas: HTMLCanvasElement;\n  Container: HTMLElement;\n  Context: CanvasRenderingContext2D;\n  Load: boolean;\n  Sheet: Sheet;\n  NoteInput: boolean;\n  RestInput: boolean;\n  GraceInput: boolean = false;\n  Formatting: boolean;\n  Zoom: number;\n  Camera: Camera;\n  CamDragging: boolean;\n  DraggingPositions: { x1: number; y1: number; x2: number; y2: number };\n  NoteValue: number;\n  Selector: Selector;\n  NotifyCallback: (msg: Message) => void;\n  RunningID: { count: number };\n  PitchMap: Map<number, MappedMidi>;\n\n  DraggingNote: boolean;\n  StartLine: number;\n  EndLine: number;\n\n  // TODO: Move this to a formatter\n  StartDragY: number;\n  EndDragY: number;\n  DragLining: boolean;\n  LinerBounds: Bounds;\n  LineNumber: Number;\n\n  Debug: boolean;\n\n  constructor(\n    canvas: HTMLCanvasElement,\n    container: HTMLElement,\n    context: CanvasRenderingContext2D,\n    notifyCallback: (msg: Message) => void,\n    config: ConfigSettings,\n    load = false,\n  ) {\n    this.Config = config;\n    this.PitchMap = GeneratePitchMap();\n    this.Message = ClearMessage();\n    this.NotifyCallback = notifyCallback;\n    this.Debug = true;\n    this.Canvas = canvas;\n    this.Container = container;\n    this.Selector = new Selector();\n    this.Context = context;\n    this.Load = load;\n    this.RunningID = { count: 0 };\n    this.CamDragging = false;\n    this.DraggingPositions = { x1: 0, y1: 0, x2: 0, y2: 0 };\n    let camStartX = 0;\n    let camStartY = 20;\n    if (this.Config.CameraSettings?.StartingPosition) {\n      camStartX = this.Config.CameraSettings.StartingPosition.x;\n      camStartY = this.Config.CameraSettings.StartingPosition.y;\n    }\n    this.Camera = new Camera(camStartX, camStartY);\n    this.Camera.Zoom = 1;\n    this.NoteValue = 0.5;\n\n    // TODO: Remove to formatter\n    this.StartDragY = 0;\n    this.EndDragY = 0;\n    this.DragLining = false;\n    if (!this.Load) {\n      this.Sheet = CreateDefaultSheet(\n        this.Config,\n        this.Camera,\n        this.NotifyCallback,\n      );\n    }\n    this.NoteInput = false;\n    this.RestInput = false;\n    this.Formatting = false;\n\n    if (this.Config.CameraSettings?.Zoom) {\n      this.Camera.Zoom = this.Config.CameraSettings.Zoom;\n      this.SetCameraZoom(this.Camera.Zoom);\n      this.ResizeMeasures(this.Sheet.Measures);\n    }\n\n    this.Update(0, 0);\n  }\n\n  Hover(x: number, y: number): void {\n    x = x / this.Camera.Zoom;\n    y = y / this.Camera.Zoom;\n    if (this.Camera.DragCamera(x, y)) {\n      this.Update(x, y);\n      return;\n    }\n    if (this.DraggingNote) {\n      this.DragNote(x, y);\n      this.Update(x, y);\n    }\n    if (this.Formatting && this.DragLining) {\n      this.DragLiner(x, y);\n      this.Update(x, y);\n    }\n    if (this.NoteInput) {\n      this.Sheet.InputHover(x, y, this.Camera);\n    }\n    this.Update(x, y);\n  }\n\n  Delete(): void {\n    for (let [msr, _] of this.Selector.Elements) {\n      msr.DeleteSelected();\n      msr.CreateDivisions(this.Camera);\n    }\n    this.ResizeMeasures(this.Sheet.Measures);\n  }\n\n  Input(x: number, y: number, shiftKey: boolean): void {\n    // will move this code elsewhere, testing note input\n    x = x / this.Camera.Zoom;\n    y = y / this.Camera.Zoom;\n\n    //TODO: NOT FINAL THIS IS PROTOTYPING NOT FINAL\n    if (!this.NoteInput && this.Formatting) {\n      this.SelectLiner(x, y);\n    }\n\n    const msrOver: Measure | undefined = this.Sheet.Measures.find(\n      (msr: Measure) => msr.GetBoundsWithOffset().IsHovered(x, y, this.Camera),\n    );\n\n    if (msrOver === undefined) {\n      if (!shiftKey) {\n        this.Selector.DeselectAll();\n        this.Message = ClearMessage();\n        this.Message.messageString = \"msr undefined\";\n        this.NotifyCallback(this.Message);\n        this.Update(x, y);\n      }\n      return;\n    } // no measure over\n\n    if (!this.NoteInput) {\n      if (!shiftKey) {\n        this.Selector.Elements = this.Selector.DeselectAllElements(\n          this.Selector.Elements,\n        );\n      }\n      const elem = this.Selector.TrySelectElement(\n        msrOver,\n        x,\n        y,\n        this.Camera,\n        shiftKey,\n        this.NotifyCallback,\n        this.Selector.Elements,\n      );\n      if (\n        (elem === undefined &&\n          this.Config.FormatSettings.MeasureFormatSettings.Selectable ===\n            true) ||\n        this.Config.FormatSettings.MeasureFormatSettings.Selectable ===\n          undefined\n      ) {\n        this.Selector.SelectMeasure(msrOver);\n      }\n      if (!this.DraggingNote) {\n        this.DraggingNote = true;\n      }\n      const divOver = msrOver.Voices[msrOver.ActiveVoice].Divisions.find((d) =>\n        d.Bounds.IsHovered(x, y, this.Camera),\n      );\n      if (divOver) {\n        this.StartLine = msrOver.GetLineHovered(y, divOver.Staff).num;\n      }\n    } else if (this.NoteInput) {\n      InputOnMeasure(\n        msrOver,\n        this.NoteValue,\n        x,\n        y,\n        this.Camera,\n        this.RestInput,\n        this.GraceInput,\n      );\n      this.ResizeMeasures(\n        this.Sheet.Measures.filter((m) => m.Instrument === msrOver.Instrument),\n      );\n    }\n    //  this.NotifyCallback(this.Message);\n    const persist = SaveSheet(this.Sheet);\n    localStorage.setItem(\"persist\", persist);\n    localStorage.setItem(\n      \"camera_data\",\n      JSON.stringify({\n        Zoom: this.Camera.Zoom,\n        X: this.Camera.x,\n        Y: this.Camera.y,\n      }),\n    );\n    this.Update(x, y);\n  }\n  Update(x: number, y: number): void {\n    this.Render({ x: x, y: y });\n  }\n  Render(mousePos: { x: number; y: number }): void {\n    Renderer(\n      this.Canvas,\n      this.Context,\n      this.Sheet.Measures,\n      this.Sheet.Pages,\n      mousePos,\n      this.Camera,\n      this.NoteInput,\n      this.RestInput,\n      this.Formatting,\n      this.Config,\n      this.NoteValue,\n    );\n    if (this.Debug) {\n      RenderDebug(\n        this.Canvas,\n        this.Context,\n        this.Sheet,\n        mousePos,\n        this.Camera,\n        this.Selector,\n      );\n    }\n  }\n\n  AddMeasure(): void {\n    const newMeasureID = this.Sheet.Measures.length;\n    const prevMsr = this.Sheet.Measures[this.Sheet.Measures.length - 1];\n    let x = 0;\n    this.Sheet.Instruments.forEach((i) => {\n      let latestLine =\n        this.Sheet.Pages[0].PageLines[this.Sheet.Pages[0].PageLines.length - 1];\n      const newMeasureBounds = new Bounds(\n        x,\n        latestLine.LineBounds.y,\n        150,\n        prevMsr.Bounds.height,\n      );\n      const newMsr = CreateMeasure(\n        i,\n        newMeasureBounds,\n        prevMsr.TimeSignature,\n        prevMsr.KeySignature,\n        prevMsr.Clefs,\n        prevMsr.Staves,\n        this.Camera,\n        this.RunningID,\n        this.Sheet.Pages[0], // Page will need to be determined\n        false,\n        this.NotifyCallback,\n        this.Config.MeasureSettings,\n      );\n      // add measure number\n      newMsr.Num = this.Sheet.Measures.length + 1;\n      this.Sheet.Measures.push(newMsr);\n      this.ResizeMeasures(\n        this.Sheet.Measures.filter((m) => m.Instrument === i),\n      );\n    });\n    // Update previous measure end bar line\n    if (prevMsr.Barlines[1].Type == BarlineType.END) {\n      prevMsr.Barlines[1].Type = BarlineType.SINGLE;\n    }\n    this.ResizeMeasures(this.Sheet.Measures);\n  }\n\n  ChangeInputMode(): void {\n    this.NoteInput = !this.NoteInput;\n  }\n\n  //TODO: Prototype page line formatting nonsense\n\n  SelectLiner(x: number, y: number): Bounds | undefined {\n    // get liner here\n    let liner: Bounds;\n    if (!this.DragLining) {\n      this.LineNumber = -1;\n    }\n    this.Sheet.Pages.forEach((page) => {\n      page.PageLines.forEach((line) => {\n        if (line.LineBounds.IsHovered(x, y, this.Camera)) {\n          liner = line.LineBounds;\n          if (!this.DragLining) {\n            this.StartDragY = y;\n            this.DragLining = true;\n            this.LinerBounds = liner;\n            this.LineNumber = line.Number;\n          }\n        }\n      });\n    });\n    return liner;\n  }\n\n  DragLiner(x: number, y: number): void {\n    if (this.LinerBounds) {\n      this.LinerBounds.y = this.LinerBounds.y + (y - this.StartDragY);\n      const page = this.Sheet.Pages[0];\n      if (this.LinerBounds.y + 12.5 <= page.Bounds.y + page.Margins.top) {\n        this.LinerBounds.y = page.Bounds.y + page.Margins.top - 12.5;\n      }\n      this.StartDragY = y;\n      // TODO: Super SCUFFED TEST PROTOTYPE NOT FINAL\n      this.Sheet.Measures.forEach((m) => {\n        if (m.PageLine === this.LineNumber) {\n          m.Bounds.y = this.LinerBounds.y;\n        }\n      });\n      this.ResizeMeasures(this.Sheet.Measures);\n    }\n  }\n\n  DragNote(x: number, y: number): void {\n    const msrOver = this.Sheet.Measures.find((m) =>\n      m.GetBoundsWithOffset().IsHovered(x, y, this.Camera),\n    );\n\n    if (msrOver === undefined) {\n      this.DraggingNote = false;\n      this.StartLine = -1;\n      this.EndLine = -1;\n      return;\n    }\n\n    const divOver = msrOver.Voices[msrOver.ActiveVoice].Divisions.find((d) =>\n      d.Bounds.IsHovered(x, y, this.Camera),\n    );\n    if (divOver) {\n      this.EndLine = msrOver.GetLineHovered(y, divOver.Staff).num;\n    }\n    const lineDiff = this.EndLine - this.StartLine;\n    for (let [msr, elem] of this.Selector.Elements) {\n      elem\n        .filter((e: ISelectable) => e.SelType === SelectableTypes.Note)\n        .forEach((n: Note) => {\n          // Should never be selected, currently band-aid fix for bug. Address\n          // when re-implementing dragging notes/selectables\n          if (n.Selected && n.Editable) {\n            n.Line += lineDiff;\n            UpdateNoteBounds(msr, n.Staff);\n            // send message about note update\n            if (lineDiff !== 0) {\n              const m: Message = {\n                messageData: {\n                  MessageType: MessageType.Selection,\n                  Message: {\n                    msg: \"selected\",\n                    obj: n,\n                  },\n                },\n                messageString: \"Selected Note\",\n              };\n              this.Message = m;\n              this.NotifyCallback(this.Message);\n            }\n          }\n        });\n    }\n    this.StartLine = this.EndLine;\n    this.ResizeMeasures(this.Sheet.Measures);\n  }\n\n  StopNoteDrag(x: number, y: number): void {\n    if (this.DraggingNote) {\n      this.StartLine = -1;\n      this.EndLine = -1;\n      this.DraggingNote = false;\n    }\n    if (this.DragLining) {\n      this.DragLining = false;\n    }\n  }\n\n  SetCameraDragging(dragging: boolean, x: number, y: number): void {\n    this.Camera.SetDragging(dragging, x, y, this.Config, this.Camera);\n  }\n\n  AlterZoom(num: number, mx: number, my: number): void {\n    const originalX = mx / this.Camera.Zoom;\n    const ogY = my / this.Camera.Zoom;\n    this.Camera.SetZoom(this.Camera.Zoom + num);\n    this.Context.setTransform(this.Camera.Zoom, 0, 0, this.Camera.Zoom, 0, 0);\n    const newX = mx / this.Camera.Zoom;\n    const newY = my / this.Camera.Zoom;\n    this.Camera.x += newX - originalX;\n    this.Camera.y += newY - ogY;\n    this.Camera.oldX = this.Camera.x;\n    this.Camera.oldY = this.Camera.y;\n\n    this.Update(0, 0);\n  }\n\n  SetCameraZoom(num: number): void {\n    this.Camera.SetZoom(num);\n    this.Context.setTransform(this.Camera.Zoom, 0, 0, this.Camera.Zoom, 0, 0);\n    this.Update(0, 0);\n  }\n\n  // TEST FUNCTION\n  ResizeFirstMeasure(): void {\n    //    this.Sheet.Measures[0].Bounds.width += 50;\n    this.Sheet.Measures[0].CreateDivisions(this.Camera);\n    for (let i = 1; i < this.Sheet.Measures.length; i++) {\n      this.Sheet.Measures[i].Reposition(this.Sheet.Measures[i - 1]);\n    }\n    this.Update(0, 0);\n  }\n\n  ResizeMeasures(measures: Measure[]): void {\n    const lineHeight =\n      measures[0].Instrument.Staff === StaffType.Rhythm ? 400 : 400;\n    SetPagesAndLines(\n      measures,\n      this.Sheet.Pages[0],\n      this.Config.PageSettings?.UsePages,\n      lineHeight,\n    );\n    ResizeMeasuresOnPage(\n      measures,\n      this.Sheet.Pages[0],\n      this.Camera,\n      this.Config,\n    );\n    if (this.Config.CameraSettings?.CenterMeasures) {\n      this.CenterMeasures();\n    } else if (this.Config.CameraSettings?.CenterPage) {\n      this.CenterPage();\n    }\n    measures.forEach((m: Measure) => {\n      RecreateDivisionGroups(m);\n      m.Staves.forEach((s: Staff) => {\n        UpdateNoteBounds(m, s.Num);\n      });\n      m.RecalculateBarlines();\n    });\n\n    this.Update(0, 0);\n  }\n\n  SetNoteValue(val: number): void {\n    this.NoteValue = val;\n  }\n\n  SetAccidental(acc: number): void {\n    for (let [msr, elem] of this.Selector.Elements) {\n      elem.forEach((n) => {\n        if (n.SelType === SelectableTypes.Note) {\n          const note = n as Note;\n          note.Accidental = acc;\n          this.Message = ClearMessage();\n          const m: Message = {\n            messageData: {\n              MessageType: MessageType.Selection,\n              Message: {\n                msg: \"selected\",\n                obj: note,\n              },\n            },\n            messageString: \"Selected Note\",\n          };\n          this.Message = m;\n          this.NotifyCallback(m);\n        }\n      });\n    }\n    this.Update(0, 0);\n  }\n\n  Sharpen(): void {\n    for (let [msr, elem] of this.Selector.Elements) {\n      elem.forEach((n) => {\n        if (n.SelType === SelectableTypes.Note) {\n          const note = n as Note;\n          note.Accidental += 1;\n          if (note.Accidental > 2) {\n            note.Accidental = 2;\n          }\n        }\n      });\n    }\n    this.Update(0, 0);\n  }\n  Flatten(): void {\n    for (let [msr, elem] of this.Selector.Elements) {\n      elem.forEach((e) => {\n        if (e.SelType === SelectableTypes.Note) {\n          const n = e as Note;\n          n.Accidental -= 1;\n          if (n.Accidental < -2) {\n            n.Accidental = -2;\n          }\n        }\n      });\n    }\n    this.Update(0, 0);\n  }\n\n  //TODO: Remove this test function\n  ScaleToggle(): number {\n    if (this.Camera.Zoom !== 1) {\n      this.Camera.Zoom = 1;\n    } else {\n      this.Camera.Zoom = 1;\n    }\n    return this.Camera.Zoom;\n  }\n\n  KeyInput(key: string, keymaps: KeyMapping): void {\n    KeyPress(this, key, keymaps);\n    //    this.NotifyCallback(this.Message);\n  }\n\n  SelectById(id: number): ISelectable {\n    const sel = this.Selector.SelectById(this.Sheet.Measures, id);\n    this.Update(0, 0);\n    return sel;\n  }\n\n  ToggleFormatting(): void {\n    this.Formatting = !this.Formatting;\n    if (this.Formatting) {\n      this.NoteInput = false;\n      this.RestInput = false;\n    }\n  }\n\n  Save(): void {\n    SaveSheet(this.Sheet);\n  }\n\n  LoadSheet(sheet: string): void {\n    //Clear measures\n    this.Sheet.Measures = [];\n    LoadSheet(\n      this.Sheet,\n      this.Sheet.Pages[0],\n      this.Camera,\n      this.Sheet.Instruments[0],\n      sheet,\n      this.NotifyCallback,\n    );\n    this.ResizeMeasures(this.Sheet.Measures);\n    this.Update(0, 0);\n  }\n\n  GetSaveFiles(): saveFile[] {\n    return allSaves;\n  }\n\n  // TODO: Prototype code\n  CreateTriplet(): void {\n    this.NoteValue = CreateTuplet(this.Selector.Elements, 3);\n    this.ResizeMeasures(this.Sheet.Measures);\n    this.Update(0, 0);\n  }\n\n  ChangeTimeSignature(\n    top: number,\n    bottom: number,\n    transpose: boolean = false,\n  ): void {\n    for (let [msr, elem] of this.Selector.Elements) {\n      msr.ChangeTimeSignature(top, bottom, transpose);\n    }\n  }\n\n  CenterMeasures(): void {\n    // This measure is currently only being used for mtrainer\n    let msrWidth = 100;\n    if (this.Config.FormatSettings?.MeasureFormatSettings?.MaxWidth) {\n      msrWidth = this.Config.FormatSettings.MeasureFormatSettings.MaxWidth;\n    }\n    const padding =\n      (this.Canvas.clientWidth - (msrWidth + msrWidth / 2) * this.Camera.Zoom) /\n      4;\n    this.Camera.x = padding;\n    if (this.Canvas.clientWidth < msrWidth * this.Camera.Zoom) {\n      this.SetCameraZoom(this.Canvas.clientWidth / msrWidth);\n    } else {\n      const z = this.Config.CameraSettings?.Zoom\n        ? this.Config.CameraSettings.Zoom\n        : 1;\n      this.SetCameraZoom(z);\n    }\n  }\n\n  CenterPage(): void {\n    const page = this.Sheet.Pages[0];\n    const pageW = page.Bounds.width;\n    const sidePadding = 20;\n    const totalWidth = pageW + sidePadding;\n    if (this.Canvas.clientWidth < totalWidth) {\n      //set zoom of camera\n      this.SetCameraZoom(this.Canvas.clientWidth / totalWidth);\n    } else {\n      const z = this.Config.CameraSettings?.Zoom\n        ? this.Config.CameraSettings.Zoom\n        : 1;\n      this.SetCameraZoom(z);\n    }\n\n    const emptySpace = this.Canvas.clientWidth - totalWidth * this.Camera.Zoom;\n    this.Camera.x = emptySpace / 2;\n    this.Camera.oldX = this.Camera.x;\n  }\n\n  // Maybe instead of duplicate function we can expose note input function,\n  // doesn't matter atm\n  AddNoteOnMeasure(\n    msr: Measure,\n    noteValue: number,\n    line: number,\n    beat: Division,\n    rest: boolean,\n  ): void {\n    AddNoteOnMeasure(msr, noteValue, line, beat, rest, this.GraceInput);\n  }\n\n  BeamSelectedNotes(): void {\n    // currently only implementing for cross staff beaming\n    var beamFrom: number; // which staff to \"beam from\"\n    for (let [msr, elem] of this.Selector.Elements) {\n      elem\n        .filter((e: ISelectable) => e.SelType === SelectableTypes.Note)\n        .forEach((n: Note, i: number) => {\n          if (i == 0) {\n            beamFrom = n.Staff;\n          }\n          if (n.Staff !== beamFrom) {\n            msr.Voices[msr.ActiveVoice].Notes.filter(\n              (note: Note) => note.Staff == n.Staff && note.Beat == n.Beat,\n            ).forEach((note: Note) => {\n              note.StaffGroup = beamFrom;\n            });\n          }\n        });\n    }\n    this.ResizeMeasures(this.Sheet.Measures);\n  }\n\n  AddStaff(instrNum: number, clef: string): void {\n    const instr = this.Sheet.Instruments[instrNum];\n    if (!instr) {\n      return;\n    }\n    const newStaff = new Staff(instr.Staves.length);\n    instr.Staves.push(new Staff(instr.Staves.length));\n    const msrs: Measure[] = this.Sheet.Measures.filter(\n      (m) => m.Instrument === instr,\n    );\n    msrs.forEach((m) => {\n      m.Staves.push(newStaff);\n      m.Clefs.push(new Clef(m.Clefs.length - 1, clef, 1, newStaff.Num));\n      // TODO: Temporarry measure height being set\n      m.Bounds.height = GetStaffHeightUntil(m.Staves);\n    });\n  }\n\n  // TODO: Move\n  FromPitchMap(midiNote: number, clef: string): MappedMidi {\n    const midiMapped: MappedMidi = FromPitchMap(midiNote, this.PitchMap, clef);\n    return midiMapped;\n  }\n\n  // These are test/temp functions (kinda)\n\n  ChangeBarline(): void {\n    for (let [_, elem] of this.Selector.Elements) {\n      elem\n        .filter((e: ISelectable) => e.SelType === SelectableTypes.Barline)\n        .forEach((bl: Barline) => {\n          if (bl.Position == BarlinePos.END) {\n            bl.Type = BarlineType.REPEAT_END;\n          }\n        });\n    }\n  }\n\n  ChangeTimeSig(): void {\n    const msr1 = this.Sheet.Measures[0];\n    if (msr1) {\n      msr1.ChangeTimeSignature(3, 4, false);\n    }\n  }\n\n  AddDynamic(dynString: string): void {\n    for (let [msr, elem] of this.Selector.Elements) {\n      elem\n        .filter((e: ISelectable) => e.SelType === SelectableTypes.Note)\n        .forEach((n: Note) => {\n          msr.Dynamics.push(new Dynamic(dynString, n.Staff, n.Beat));\n        });\n    }\n  }\n\n  CycleActiveVoice(): void {\n    this.Sheet.Measures.forEach((m: Measure) => {\n      m.ActiveVoice += 1;\n      if (m.ActiveVoice > 3) {\n        m.ActiveVoice = 0;\n      }\n    });\n  }\n}\n\nexport { App };\n","import { App } from \"./App.js\";\nimport { Division, Measure } from \"./Core/Measure.js\";\nimport { ConfigSettings, Theme } from \"./Types/Config.js\";\nimport { ISelectable } from \"./Types/ISelectable.js\";\nimport { Message } from \"./Types/Message.js\";\nimport { KeyMapping } from \"./Workers/Mappings.js\";\n\nlet gSheet: App;\nconst hotReload = false;\n\nconst keymaps: KeyMapping = {\n  addmeasure: \"a\",\n  changeinputmode: \"n\",\n  value1: \"1\",\n  value2: \"2\",\n  value3: \"3\",\n  value4: \"4\",\n  value5: \"5\",\n  value6: \"6\",\n  restInput: \"r\",\n  delete: \"d\",\n  sharpen: \"+\",\n  flatten: \"-\",\n  scaleToggle: \"'\",\n  save: \"s\",\n  load: \"l\",\n  test_triplet: \"t\",\n  debug_clear: \"c\",\n  beam: \"b\",\n  grace: \"g\",\n  change_timesig: \"z\",\n  add_dynamic: \"f\",\n  cycle_voice: \"p\",\n};\n\nconst defaultTheme: Theme = {\n  NoteElements: \"black\",\n  SelectColour: \"blue\",\n  UneditableColour: \"gray\",\n  LineColour: \"black\",\n  BackgroundColour: \"gray\",\n  PageColour: \"white\",\n  PageShadowColour: \"darkgray\",\n};\n\nconst test_CONFIG: ConfigSettings = {\n  CameraSettings: {\n    DragEnabled: true,\n    ZoomEnabled: true,\n    Zoom: 4,\n    StartingPosition: { x: 0, y: 0 },\n    CenterMeasures: false,\n  },\n  FormatSettings: {\n    MeasureFormatSettings: { Selectable: false },\n  },\n  NoteSettings: {\n    InputValue: 0.5,\n  },\n  PageSettings: {\n    UsePages: false,\n    RenderPage: false,\n    RenderBackground: false,\n    ContainerWidth: false,\n  },\n  Theme: defaultTheme,\n};\n\nfunction mouseMove(app: App, canvas: HTMLCanvasElement, e: MouseEvent): void {\n  let rect = canvas.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const y = e.clientY - rect.top;\n  app.Hover(x, y);\n}\n\nfunction mouseDown(app: App, canvas: HTMLCanvasElement, e: MouseEvent): void {\n  e.preventDefault();\n  let rect = canvas.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const y = e.clientY - rect.top;\n  if (e.buttons === 1) {\n    app.Input(x, y, e.shiftKey);\n  } else if (e.buttons === 4) {\n    app.SetCameraDragging(true, x, y);\n  }\n}\n\nfunction mouseUp(app: App, canvas: HTMLCanvasElement, e: MouseEvent): void {\n  let rect = canvas.getBoundingClientRect();\n  const x = e.clientX - rect.left;\n  const y = e.clientY - rect.top;\n  app.SetCameraDragging(false, 0, 0);\n  app.StopNoteDrag(x, y);\n}\n\nfunction keyDown(app: App, keymaps: any, e: KeyboardEvent): void {\n  const key = e.key;\n  app.KeyInput(key, keymaps);\n}\n\nfunction zoom(app: App, canvas: HTMLCanvasElement, e: WheelEvent): void {\n  if (e.ctrlKey) {\n    let rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    e.preventDefault();\n    const scale = e.deltaY * -0.01;\n    scale > 0 ? app.AlterZoom(0.075, x, y) : app.AlterZoom(-0.075, x, y);\n  }\n}\n\nfunction resize(\n  app: App,\n  context: CanvasRenderingContext2D,\n  canvas: HTMLCanvasElement,\n  container: HTMLElement,\n): void {\n  canvas.width = container.clientWidth - 50;\n  if (app.Config.CameraSettings?.CenterMeasures === true) {\n    app.CenterMeasures();\n  } else if (app.Config.CameraSettings?.CenterPage) {\n    app.CenterPage();\n  }\n  app.AlterZoom(0, 0, 0);\n  app.Update(0, 0);\n}\n\nexport module sheet {\n  export function CreateApp(\n    canvas: HTMLCanvasElement,\n    container: HTMLElement,\n    doc: Document,\n    keyMap: any,\n    notifyCallBack: (msg: Message) => void,\n    config: ConfigSettings,\n  ): App {\n    const ctx = canvas.getContext(\"2d\");\n    const app = new App(canvas, container, ctx, notifyCallBack, config);\n    canvas.addEventListener(\"mousemove\", (e) => mouseMove(app, canvas, e));\n    canvas.addEventListener(\"mousedown\", (e) => mouseDown(app, canvas, e));\n    canvas.addEventListener(\"mouseup\", (e) => mouseUp(app, canvas, e));\n    doc.addEventListener(\"keydown\", (e) => keyDown(app, keyMap, e));\n    window.addEventListener(\"resize\", () =>\n      resize(app, app.Context, canvas, container),\n    );\n    canvas.addEventListener(\"wheel\", (e) => zoom(app, canvas, e));\n    screen.orientation.addEventListener(\"change\", (e) =>\n      resize(app, app.Context, canvas, container),\n    );\n    gSheet = app;\n    canvas.width = container.clientWidth;\n    canvas.height = container.clientHeight;\n    app.Update(0, 0);\n    if (config.CameraSettings?.Zoom) {\n      app.SetCameraZoom(config.CameraSettings.Zoom);\n    }\n    if (config.CameraSettings?.CenterMeasures) {\n      app.CenterMeasures();\n    }\n    // DEBUG SETTINGS FOR \"HOT RELOADING\"\n    if (hotReload) {\n      const persistedData = localStorage.getItem(\"persist\");\n      if (persistedData !== null) {\n        const cameraData = JSON.parse(localStorage.getItem(\"camera_data\"));\n        app.LoadSheet(persistedData);\n        app.SetCameraZoom(cameraData.Zoom);\n        app.Camera.x = cameraData.X;\n        app.Camera.y = cameraData.Y;\n        app.ResizeMeasures(app.Sheet.Measures);\n      }\n      //\n    }\n\n    return app;\n  }\n\n  // API\n  export function ChangeInputMode(): void {\n    gSheet.ChangeInputMode();\n  }\n\n  export function SetAccidental(acc: number): void {\n    gSheet.SetAccidental(acc);\n  }\n\n  export function Sharpen(): void {\n    gSheet.Sharpen();\n  }\n\n  export function Flatten(): void {\n    gSheet.Flatten();\n  }\n\n  export function SetNoteValue(value: number): void {\n    gSheet.SetNoteValue(value);\n  }\n\n  export function AddMeasure(): void {\n    gSheet.AddMeasure();\n  }\n\n  export function AddStaff(instrIndex: number, clefString: string): void {\n    gSheet.AddStaff(instrIndex, clefString);\n  }\n\n  export function AddNoteOnMeasure(\n    msr: Measure,\n    noteVal: number,\n    line: number,\n    div: Division,\n    rest: boolean,\n  ): void {\n    gSheet.AddNoteOnMeasure(msr, noteVal, line, div, rest);\n  }\n\n  export function Delete(): void {\n    gSheet.Delete();\n  }\n\n  export function SelectById(id: number): ISelectable {\n    return gSheet.SelectById(id);\n  }\n\n  export function ToggleFormatting(): void {\n    gSheet.ToggleFormatting();\n  }\n\n  export function DeleteSelected(): void {\n    gSheet.Delete();\n  }\n\n  export function ChangeTimeSignature(\n    top: number,\n    bottom: number,\n    transpose: boolean = false,\n  ): void {\n    gSheet.ChangeTimeSignature(top, bottom, transpose);\n  }\n}\n//public exports\nexport * from \"./Workers/Mappings.js\";\nexport * from \"./App.js\";\nexport * from \"./Workers/Loader.js\";\nexport * from \"./Core/Note.js\";\nexport * from \"./Workers/Pitcher.js\";\nexport * from \"./Types/Message.js\";\nexport * from \"./Types/Config.js\";\n"],"mappings":"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","names":["Bounds","x","y","width","height","ix","iy","cam","Staff","num","GetStaffHeightUntil","staves","staffNum","height","s","i","lineCount","GetStaffHeight","staff","GetStaffMiddleLine","GetStaffActualMidLine","linesBefore","Barline","pos","type","Bounds","x","y","cam","RenderBarline","renderProps","endMeasure","beginMeasure","cam","RenderStandardBarline","RenderRepeatEnd","RenderFinalBarline","measure","pos","midLine","GetStaffMiddleLine","yStart","GetStaffHeightUntil","barlineHeight","xStart","line","thickLine","circle","s","midLinePosition","cPath1","cPath2","MessageType","ClearMessage","stdFontSize","RenderSymbol","renderProps","symbol","x","y","theme","selected","canvas","context","camera","stdFontSize","RenderScaledNote","note","renderProps","symbol","x","y","theme","selected","fontSize","canvas","context","camera","colour","Clef","id","type","beat","staff","Bounds","renderProps","theme","clefSymbol","RenderSymbol","msr","div","d","xPosition","xBuffer","lineBuffer","yBuffer","msrMidLine","GetStaffMiddleLine","x","y","cam","GetNoteClefType","noteBeat","clefType","a","b","c","ValueMap","GetLargestValues","duration","remainingDiff","values","key","val","crotchetRest","quaverRest","semiQuaverRest","demiSemiQuaverRest","noteXBuffer","RenderNote","note","renderProps","Bounds","selected","flipNote","stemDir","theme","colour","x","y","width","height","canvas","context","camera","noteScale","stdFontSize","RenderScaledNote","RenderDots","dotXStart","dotCount","circle","d","lineY","cpath","RenderRest","ctx","div","cam","msr","path","RenderTupletAnnotation","coords","count","RenderSymbol","GetTupletGlyph","RenderTuplets","divisions","notes","staff","divs","a","b","foundTuplet","tupleX","tupleXEnd","tupleY","tupleCount","i","notesInDiv","n","nArray","DetermineStemDirection","RenderTies","divNotes","nextDivNotes","tiedTo","nextNote","x1","y1","x2","y2","midPointX","distanceX","curveOffset","curveStartOffset","curveHighPoint","curveLowPoint","slurPath","dir","match","middleLine","highestLine","lowestLine","na","renderLedgerLines","division","dynNoteXBuffer","numOfAcc","ledgerX","ledgerString","bdNotes","midLine","l","ledgerY","h","NoteNames","ClefPitchRef","calcPitch","midiNumber","ReturnLineFromMidi","clef","midi","staff","onNote","a4Midi","accidental","a4Line","line","i","ReturnMidiNumber","acc","a4line","midiNote","GeneratePitchMap","map","midiMap","noteNameCount","noteNumberCount","lineNum","lineCounter","lineMax","n","NoteNames","calcPitch","FromPitchMap","midiNote","clef","mapped","alteredNote","Note","props","Bounds","bounds","id","s","e","x","y","cam","line","ReturnMidiNumber","DivisionMinWidth","CreateDivisions","msr","notes","staff","cam","divisions","nextBeat","runningValue","a","b","n","restProps","GetStaffMiddleLine","Note","div","CreateDivision","GenerateMissingBeatDivisions","CreateSubdivisions","UpdateNoteBounds","note","stemDir","CreateBeatBounds","sd","graceSubdiv","Bounds","xBuffer","noteSubdiv","beat","duration","width","height","GetStaffHeight","x","y","GetStaffHeightUntil","ResizeDivisions","msr","divisions","staff","divs","d","s0divs","s1divs","divCount","minWidth","DivisionMinWidth","xBuffer","a","b","div","i","lastDivEnd","GenerateMissingBeatDivisions","sortedDivs","divA","divB","startingBeat","divisionsToAdd","notesOnDiv","n","val","newDivs","GetLargestValues","sBeat","v","CreateBeatBounds","clefType","GetNoteClefType","restProps","GetStaffMiddleLine","Note","msrDuration","reSortedDivs","lastDiv","lastBeat","lastDivisionsToAdd","rem","GetDivisionGroups","msr","staff","divGroups","divs","notes","crossStaff","startFlag","mDivs","d","a","b","div","i","divNotes","n","restBeat","IsRestOnBeat","beat","restFound","DetermineBeamDirection","measure","divGroup","stemDir","divisions","a","b","firstDivTopLine","lastDivTopLine","firstDivBotLine","lastDivBotLine","GetBeamString","beam","cam","stemDir","no","baseThickness","lineBuffer","Beam","bounds","start","end","count","x","y","context","theme","svgLine","i","duration","tuplet","CreateBeamsRevise","divGroup","stems","tuplet","beams","newBeam","tempBeam","stemDir","DetermineStemDirection","div","i","startingStem","stem","Beam","count","Bounds","beamGapBuffer","KeySignatures","ACC_OFFSET","ReturnAccidentalOffset","notes","offset","nA","a","b","CascadingOffset","CascadingOffset","notes","offset","_","i","ACC_OFFSET","doubleSharp","flatPath","naturalPath","RenderAccidental","renderProps","note","type","offset","theme","canvas","context","camera","posString","dflatString","RenderSymbol","RenderKeySignature","renderProps","msr","keyString","clefString","xOff","theme","staff","canvas","context","camera","staffClefs","c","clefTypeString","keyProps","GetKeyProps","l","i","RenderSymbol","props","notes","KeySignatures","acc","fromTreble","accidental","lines","DynamicSymbolMap","Dynamic","symbol","staff","beat","Bounds","x","y","cam","RenderDynamic","renderProps","measure","dynamic","theme","findDiv","d","div","divNotes","n","a","b","minHeight","noteHeight","yPos","xBuffer","i","RenderSymbol","RenderBounds","RenderClef","renderProps","clef","theme","RenderStaff","renderProps","msr","staff","canvas","context","camera","line_space","line_width","endsWidth","staves","yStart","GetStaffHeightUntil","staffMidLine","GetStaffMiddleLine","staffHeight","l","lineString","linePath","RenderMeasureRev","measure","renderProps","theme","s","RenderStaff","c","RenderClef","RenderKeySignature","d","RenderDynamic","sd","i","noteXBuffer","RenderMeasure","measure","renderProps","mousePos","lastMeasure","noteInput","index","restInput","noteValue","config","RenderHovered","RenderMeasureRev","s","RenderNotes","div","a","n","MiddleLineBounds","Bounds","b","diff","theme","canvas","context","camera","line","tempNoteProps","tempNote","Note","RenderRest","RenderNote","renderLedgerLines","RenderNotes","msr","renderProps","staff","theme","canvas","context","camera","d","div","divNotes","note","a","b","IsRestOnBeat","RenderRest","renderLedgerLines","group","stemDir","DetermineStemDirection","tuplet","s","Beam","hasFlipped","dN","n","i","isFlipped","IsFlippedNote","flipNoteOffset","RenderNote","accNotes","offsets","ReturnAccidentalOffset","RenderAccidental","RenderDots","noteXBuffer","RenderGraceNotes","RenderTies","RenderTuplets","notes","index","dir","flipped","countAbove","countBelow","nLine","line","totalCount","notePos","Stem","bounds","x","y","cam","context","theme","AlterHeightForBeam","stemDir","beamDir","height","alterAmount","StemToCenter","lowestLine","highestLine","midLine","CreateStems","notes","divisions","staff","measure","stems","dynNoteXBuffer","DetermineStemDirection","hNote","lNote","na","n","staffMidLinePos","GetStaffHeightUntil","GetStaffMiddleLine","xBuffer","DetermineBeamDirection","shouldBeam","div","i","beamAlt","divNotes","scale","numOfAcc","a","b","stemX","IsFlippedNote","stem","Stem","Bounds","diff","staffRelativeMid","GetStaffActualMidLine","noteXBuffer","AddNoteOnMeasure","msr","noteValue","line","beat","rest","grace","InputNote","Bounds","InputOnMeasure","x","y","cam","inputtingNote","beatOver","b","division","tupleCount","notesInDiv","n","addingToTuple","clefType","GetNoteClefType","noteProps","newNote","Note","MeasureHasRoom","AddToDivision","RecreateDivisionGroups","RecreateStemAndBeams","g","CreateStems","CreateBeamsRevise","groups","staff","group","GetDivisionGroups","UpdateNoteBounds","Divisions","Notes","stemDir","DetermineStemDirection","div","divNotes","a","dynNoteXBuffer","numOfAcc","noteSubDiv","sd","subDivBuffer","i","flipNoteOffset","IsFlippedNote","duration","tuple","IsRestOnBeat","notes","notesOnBeat","restFound","remainingValue","GetStaffMiddleLine","tying","tStart","tEnd","d","remVal","room","lastIndex","j","newNoteProps","note","remValue","tiedNoteValues","GetLargestValues","tiedStart","tiedEnd","nextBeat","dur","shouldTie","tiedNote","noteObj","CreateTuplet","selNotes","count","measure","sel","tupleDuration","newDuration","lastBeat","details","TimeSignature","top","bottom","useSymbol","Bounds","renderProps","msr","theme","tGlyph","GetTimeSignatureGlyph","bGlyph","s","RenderSymbol","div","divY","msrMidLine","GetStaffMiddleLine","x","y","cam","b","n","glyph","CreateTimeSignature","props","Voice","Measure","properties","runningId","Voice","GetStaffHeightUntil","CreateTimeSignature","s","i","clef","Clef","y","staffNum","cam","relYPos","line","actualLine","bounds","Bounds","staff","prevStaffLines","KeySignatures","afterInput","CreateDivisions","ResizeDivisions","UpdateNoteBounds","prevMsr","note","fromInput","msg","beat","ignoreNotes","n","duration","tuple","tupleDetails","clefType","GetNoteClefType","restProps","GetStaffMiddleLine","Note","d","DivisionMinWidth","a","b","sel","x","top","bottom","transpose","sTopLine","sBotLine","lineHeight","mh","CreateInstrument","y","config","staff","Staff","CreateDefaultMeasure","id","instr","page","cam","callback","settings","msrHeight","mh","props","Bounds","Clef","Barline","Measure","CreateMeasure","bounds","timeSignature","keySignature","clef","staves","runningId","renderClef","defaultMargins","scale","a4w","a4h","Page","x","y","pageNum","Bounds","lineHeight","latestLine","newLine","Sheet","properties","x","y","camera","m","d","s","UpdateNoteBounds","CreateDefaultSheet","config","callback","_a","newPage","Page","sProps","page","CreateInstrument","CreateDefaultMeasure","RenderPage","page","canvas","context","cam","formatting","config","measures","_a","a4w","a4h","x","y","adjusterColour","lineColour","RenderAdjuster","line","dir","colour","Renderer","c","ctx","measures","pages","mousePos","cam","noteInput","restInput","formatting","config","noteValue","_a","_b","page","RenderPage","m","i","renderProps","lastMeasure","msr","RenderMeasure","RenderBarline","RenderDebug","sheet","selector","Camera","x","y","drag","config","cam","_a","mx","my","zoom","Selector","msr","x","y","cam","shiftKey","msg","elems","elem","elements","selectedElements","UpdateNoteBounds","g","e","n","m","tiedNotes","SelectTiedNotes","measure","notes","note","noteIndex","i","indexes","key","measures","id","selectable","nArray","index","clef","c","noteHit","div","na","deselect","tStart","tEnd","tn","canonSave","randomSaveOne","allSaves","canonSave","randomSaveOne","KeyPress","app","key","keyMaps","allSaves","SetPagesAndLines","measures","pages","usePage","defaultLineHeight","page","runningWidth","currentPage","currentLine","msrsOnLine","pageWidth","m","msr","msrWidth","GetMaxWidth","config","cam","_a","_b","maxWidth","ResizeMeasuresOnPage","pageSize","line","msrs","msrsLineWidth","i","fillWidth","calculatedWidth","mWidth","LoadSheet","sheet","page","cam","instr","savedJson","callback","runningId","m","i","notes","n","noteProps","newNote","Note","msr","CreateMeasure","SaveSheet","saved","App","canvas","container","context","notifyCallback","config","load","_a","_b","GeneratePitchMap","ClearMessage","Selector","camStartX","camStartY","Camera","CreateDefaultSheet","x","y","msr","_","shiftKey","msrOver","InputOnMeasure","m","divOver","d","persist","SaveSheet","mousePos","Renderer","RenderDebug","newMeasureID","prevMsr","i","latestLine","newMeasureBounds","Bounds","newMsr","CreateMeasure","liner","page","line","lineDiff","elem","e","n","UpdateNoteBounds","dragging","num","mx","my","originalX","ogY","newX","newY","measures","_c","lineHeight","SetPagesAndLines","ResizeMeasuresOnPage","RecreateDivisionGroups","s","val","acc","note","key","keymaps","KeyPress","id","sel","sheet","LoadSheet","allSaves","CreateTuplet","top","bottom","transpose","msrWidth","padding","z","totalWidth","emptySpace","noteValue","beat","rest","AddNoteOnMeasure","beamFrom","instrNum","clef","instr","newStaff","Staff","Clef","GetStaffHeightUntil","midiNote","FromPitchMap","bl","msr1","dynString","Dynamic","gSheet","hotReload","mouseMove","app","canvas","e","rect","x","y","mouseDown","mouseUp","keyDown","keymaps","key","zoom","resize","context","container","_a","_b","sheet","CreateApp","doc","keyMap","notifyCallBack","config","ctx","App","gSheet","hotReload","persistedData","cameraData","ChangeInputMode","SetAccidental","acc","Sharpen","Flatten","SetNoteValue","value","AddMeasure","AddStaff","instrIndex","clefString","AddNoteOnMeasure","msr","noteVal","line","div","rest","Delete","SelectById","id","ToggleFormatting","DeleteSelected","ChangeTimeSignature","top","bottom","transpose"]}